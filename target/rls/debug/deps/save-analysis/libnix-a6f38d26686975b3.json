{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1","program":"/home/danny/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nix","/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=a6f38d26686975b3","-C","extra-filename=-a6f38d26686975b3","--out-dir","/home/danny/Documentos/Tareas/Tarea1/Tarea-Corta-1-Operativos/rastreador/target/rls/debug/deps","-L","dependency=/home/danny/Documentos/Tareas/Tarea1/Tarea-Corta-1-Operativos/rastreador/target/rls/debug/deps","--extern","bitflags=/home/danny/Documentos/Tareas/Tarea1/Tarea-Corta-1-Operativos/rastreador/target/rls/debug/deps/libbitflags-9633f6440ece0104.rmeta","--extern","cfg_if=/home/danny/Documentos/Tareas/Tarea1/Tarea-Corta-1-Operativos/rastreador/target/rls/debug/deps/libcfg_if-5403c38d3d10355f.rmeta","--extern","libc=/home/danny/Documentos/Tareas/Tarea1/Tarea-Corta-1-Operativos/rastreador/target/rls/debug/deps/liblibc-94f8341b49d63c0f.rmeta","--extern","void=/home/danny/Documentos/Tareas/Tarea1/Tarea-Corta-1-Operativos/rastreador/target/rls/debug/deps/libvoid-1082d7e611376543.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/danny/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/danny/Documentos/Tareas/Tarea1/Tarea-Corta-1-Operativos/rastreador/target/rls/debug/deps/libnix-a6f38d26686975b3.rmeta"},"prelude":{"crate_id":{"name":"nix","disambiguator":[16337368813434871375,12897092692605363685]},"crate_root":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src","external_crates":[{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[1486220796094162926,11566124556688293180]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":19,"id":{"name":"cfg_if","disambiguator":[10021299859095236603,9970654228449935443]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":20,"id":{"name":"void","disambiguator":[18119590757125397589,17079178701619869041]}},{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","num":21,"id":{"name":"libc","disambiguator":[14301284566154046379,12802649695553721079]}}],"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":0,"byte_end":7530,"line_start":1,"line_end":283,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":21191,"byte_end":21192,"line_start":7,"line_end":7,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Errno, from_i32","parent":{"krate":0,"index":65}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/features.rs","byte_start":95862,"byte_end":95863,"line_start":2,"line_end":2,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":114}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106995,"byte_end":106996,"line_start":247,"line_end":247,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"F_DUPFD, F_ADD_SEALS, F_GETPIPE_SZ, F_GETFL, F_DUPFD_CLOEXEC, F_GET_SEALS, F_SETPIPE_SZ, F_SETLKW, F_SETFL, F_GETFD, F_GETLK, F_SETLK, F_SETFD","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":21,"index":52},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":146884,"byte_end":146889,"line_start":5,"line_end":5,"column_start":15,"column_end":20},"alias_span":null,"name":"SessionId","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":21,"index":556},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":146918,"byte_end":146925,"line_start":6,"line_end":6,"column_start":15,"column_end":22},"alias_span":null,"name":"Winsize","value":"","parent":{"krate":0,"index":332}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222807,"byte_end":222808,"line_start":229,"line_end":229,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":519}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/mod.rs","byte_start":259118,"byte_end":259119,"line_start":7,"line_end":7,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":602}},{"kind":"Use","ref_id":{"krate":21,"index":1082},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285092,"byte_end":285102,"line_start":10,"line_end":10,"column_start":15,"column_end":25},"alias_span":null,"name":"FD_SETSIZE","value":"","parent":{"krate":0,"index":705}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":304581,"byte_end":304582,"line_start":17,"line_end":17,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"SigEvent","parent":{"krate":0,"index":767}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":310099,"byte_end":310100,"line_start":165,"line_end":165,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"SIGHUP, SIGIO, SIGVTALRM, SIGURG, SIGTSTP, SIGCHLD, SIGALRM, SIGSEGV, SIGFPE, SIGTRAP, SIGINT, SIGPWR, SIGPROF, SIGXCPU, SIGTTIN, SIGCONT, SIGTERM, SIGUSR2, SIGKILL, SIGABRT, SIGQUIT, SIGSYS, SIGWINCH, SIGXFSZ, SIGTTOU, SIGSTOP, SIGSTKFLT, SIGPIPE, SIGUSR1, SIGBUS, SIGILL","parent":{"krate":0,"index":767}},{"kind":"Use","ref_id":{"krate":0,"index":767},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339427,"byte_end":339433,"line_start":22,"line_end":22,"column_start":14,"column_end":20},"alias_span":null,"name":"signal","value":"","parent":{"krate":0,"index":852}},{"kind":"Use","ref_id":{"krate":0,"index":6448},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339442,"byte_end":339448,"line_start":22,"line_end":22,"column_start":29,"column_end":35},"alias_span":null,"name":"SigSet","value":"","parent":{"krate":0,"index":852}},{"kind":"Use","ref_id":{"krate":21,"index":3397},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339465,"byte_end":339481,"line_start":23,"line_end":23,"column_start":15,"column_end":31},"alias_span":null,"name":"siginfo","value":"","parent":{"krate":0,"index":852}},{"kind":"Use","ref_id":{"krate":0,"index":6610},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":343991,"byte_end":344004,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"alias_span":null,"name":"AddressFamily","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":0,"index":6781},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344010,"byte_end":344018,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"SockAddr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":0,"index":6748},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344024,"byte_end":344032,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"alias_span":null,"name":"InetAddr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":0,"index":6776},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344038,"byte_end":344046,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"alias_span":null,"name":"UnixAddr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":0,"index":6777},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344038,"byte_end":344046,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"alias_span":null,"name":"UnixAddr","value":"","parent":{"krate":0,"index":1191}},{"kind":"Use","ref_id":{"krate":0,"index":6756},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344052,"byte_end":344058,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":0,"index":6766},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344064,"byte_end":344072,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":0,"index":6767},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344064,"byte_end":344072,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":1193}},{"kind":"Use","ref_id":{"krate":0,"index":6770},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344078,"byte_end":344086,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":0,"index":6771},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344078,"byte_end":344086,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":1194}},{"kind":"Use","ref_id":{"krate":0,"index":6803},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344092,"byte_end":344100,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"alias_span":null,"name":"LinkAddr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":0,"index":6804},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344092,"byte_end":344100,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"alias_span":null,"name":"LinkAddr","value":"","parent":{"krate":0,"index":1195}},{"kind":"Use","ref_id":{"krate":0,"index":6797},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344199,"byte_end":344210,"line_start":32,"line_end":32,"column_start":39,"column_end":50},"alias_span":null,"name":"NetlinkAddr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":0,"index":6798},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344199,"byte_end":344210,"line_start":32,"line_end":32,"column_start":39,"column_end":50},"alias_span":null,"name":"NetlinkAddr","value":"","parent":{"krate":0,"index":1196}},{"kind":"Use","ref_id":{"krate":21,"index":4762},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344233,"byte_end":344240,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"alias_span":null,"name":"cmsghdr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":21,"index":4751},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344246,"byte_end":344252,"line_start":36,"line_end":36,"column_start":5,"column_end":11},"alias_span":null,"name":"msghdr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":21,"index":624},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344258,"byte_end":344269,"line_start":37,"line_end":37,"column_start":5,"column_end":16},"alias_span":null,"name":"sa_family_t","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":21,"index":1460},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344275,"byte_end":344283,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"alias_span":null,"name":"sockaddr","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":21,"index":1467},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344289,"byte_end":344300,"line_start":39,"line_end":39,"column_start":5,"column_end":16},"alias_span":null,"name":"sockaddr_in","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":21,"index":1476},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344306,"byte_end":344318,"line_start":40,"line_end":40,"column_start":5,"column_end":17},"alias_span":null,"name":"sockaddr_in6","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":21,"index":1649},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344324,"byte_end":344340,"line_start":41,"line_end":41,"column_start":5,"column_end":21},"alias_span":null,"name":"sockaddr_storage","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":21,"index":1642},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344346,"byte_end":344357,"line_start":42,"line_end":42,"column_start":5,"column_end":16},"alias_span":null,"name":"sockaddr_un","value":"","parent":{"krate":0,"index":883}},{"kind":"Use","ref_id":{"krate":21,"index":1734},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":455844,"byte_end":455849,"line_start":1,"line_end":1,"column_start":16,"column_end":21},"alias_span":null,"name":"dev_t","value":"","parent":{"krate":0,"index":1313}},{"kind":"Use","ref_id":{"krate":21,"index":1736},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":455851,"byte_end":455857,"line_start":1,"line_end":1,"column_start":23,"column_end":29},"alias_span":null,"name":"mode_t","value":"","parent":{"krate":0,"index":1313}},{"kind":"Use","ref_id":{"krate":21,"index":5653},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":455874,"byte_end":455878,"line_start":2,"line_end":2,"column_start":15,"column_end":19},"alias_span":null,"name":"FileStat","value":"","parent":{"krate":0,"index":1313}},{"kind":"Use","ref_id":{"krate":21,"index":254},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":455874,"byte_end":455878,"line_start":2,"line_end":2,"column_start":15,"column_end":19},"alias_span":null,"name":"FileStat","value":"","parent":{"krate":0,"index":1317}},{"kind":"Use","ref_id":{"krate":21,"index":5358},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495015,"byte_end":495019,"line_start":587,"line_end":587,"column_start":15,"column_end":19},"alias_span":null,"name":"NCCS","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":21,"index":2267},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495232,"byte_end":495247,"line_start":594,"line_end":594,"column_start":15,"column_end":30},"alias_span":null,"name":"_POSIX_VDISABLE","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":21,"index":5061},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":515575,"byte_end":515581,"line_start":3,"line_end":3,"column_start":16,"column_end":22},"alias_span":null,"name":"time_t","value":"","parent":{"krate":0,"index":1499}},{"kind":"Use","ref_id":{"krate":21,"index":5109},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":515583,"byte_end":515594,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"suseconds_t","value":"","parent":{"krate":0,"index":1499}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":550674,"byte_end":550675,"line_start":18,"line_end":18,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1716}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":550812,"byte_end":550813,"line_start":22,"line_end":22,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1716}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":0,"byte_end":7530,"line_start":1,"line_end":283,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":11},{"krate":0,"index":65},{"krate":0,"index":114},{"krate":0,"index":128},{"krate":0,"index":223},{"krate":0,"index":243},{"krate":0,"index":253},{"krate":0,"index":277},{"krate":0,"index":306},{"krate":0,"index":317},{"krate":0,"index":332},{"krate":0,"index":363},{"krate":0,"index":388},{"krate":0,"index":1704},{"krate":0,"index":1716},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":9763},{"krate":0,"index":9780},{"krate":0,"index":9779},{"krate":0,"index":9777},{"krate":0,"index":9773},{"krate":0,"index":9774},{"krate":0,"index":1949},{"krate":0,"index":1954},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1962},{"krate":0,"index":1967},{"krate":0,"index":1972},{"krate":0,"index":1977},{"krate":0,"index":1982},{"krate":0,"index":1989},{"krate":0,"index":1994},{"krate":0,"index":1999}],"decl_id":null,"docs":" Rust friendly bindings to the various *nix system functions.","sig":null,"attributes":[{"value":"/ Rust friendly bindings to the various *nix system functions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":0,"byte_end":64,"line_start":1,"line_end":1,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":65,"byte_end":68,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Modules are structured according to the C header file that they would be","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":69,"byte_end":145,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ defined in.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":146,"byte_end":161,"line_start":4,"line_end":4,"column_start":1,"column_end":16}},{"value":"crate_name = \"nix\"","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":162,"byte_end":184,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"cfg(unix)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":185,"byte_end":198,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":199,"byte_end":230,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"allow(dead_code)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":402,"byte_end":422,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"recursion_limit = \"500\"","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":458,"byte_end":485,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"deny(unused)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":486,"byte_end":502,"line_start":13,"line_end":13,"column_start":1,"column_end":17}},{"value":"deny(unstable_features)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":503,"byte_end":530,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":531,"byte_end":569,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":570,"byte_end":609,"line_start":16,"line_end":16,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dir","qualname":"::dir","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":2006},{"krate":0,"index":2010},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":2013},{"krate":0,"index":2018},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2044},{"krate":0,"index":2042},{"krate":0,"index":2040},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":59},{"krate":0,"index":63}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":33},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15039,"byte_end":15042,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"Dir","qualname":"::dir::Dir","value":"","parent":null,"children":[],"decl_id":null,"docs":" An open directory.","sig":null,"attributes":[{"value":"/ An open directory.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14217,"byte_end":14239,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14240,"byte_end":14243,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is a lower-level interface than `std::fs::ReadDir`. Notable differences:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14244,"byte_end":14325,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/    * can be opened from a file descriptor (as returned by `openat`, perhaps before knowing","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14326,"byte_end":14420,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/      if the path represents a file or directory).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14421,"byte_end":14474,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/    * implements `AsRawFd`, so it can be passed to `fstat`, `openat`, etc.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14475,"byte_end":14552,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/      The file descriptor continues to be owned by the `Dir`, so callers must not keep a `RawFd`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14553,"byte_end":14652,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"/      after the `Dir` is dropped.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14653,"byte_end":14689,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/    * can be iterated through multiple times without closing and reopening the file","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14690,"byte_end":14776,"line_start":23,"line_end":23,"column_start":1,"column_end":87}},{"value":"/      descriptor. Each iteration rewinds when finished.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14777,"byte_end":14835,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/    * returns entries for `.` (current directory) and `..` (parent directory).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14836,"byte_end":14917,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/    * returns entries' names as a `CStr` (no allocation or conversion beyond whatever libc","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":14918,"byte_end":15011,"line_start":26,"line_end":26,"column_start":1,"column_end":94}},{"value":"/      does).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15012,"byte_end":15027,"line_start":27,"line_end":27,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15204,"byte_end":15208,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"open","qualname":"<Dir>::open","value":"pub fn open<P: ?Sized + NixPath>(&P, OFlag, sys::stat::Mode) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Opens the given path as with `fcntl::open`.\n","sig":null,"attributes":[{"value":"/ Opens the given path as with `fcntl::open`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15145,"byte_end":15192,"line_start":34,"line_end":34,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15479,"byte_end":15485,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"openat","qualname":"<Dir>::openat","value":"pub fn openat<P: ?Sized + NixPath>(RawFd, &P, OFlag, sys::stat::Mode)\n-> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Opens the given path as with `fcntl::openat`.\n","sig":null,"attributes":[{"value":"/ Opens the given path as with `fcntl::openat`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15418,"byte_end":15467,"line_start":41,"line_end":41,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15836,"byte_end":15840,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"from","qualname":"<Dir>::from","value":"pub fn from<F: IntoRawFd>(F) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts from a descriptor-based object, closing the descriptor on success or failure.\n","sig":null,"attributes":[{"value":"/ Converts from a descriptor-based object, closing the descriptor on success or failure.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15720,"byte_end":15810,"line_start":48,"line_end":48,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15815,"byte_end":15824,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":16012,"byte_end":16019,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"from_fd","qualname":"<Dir>::from_fd","value":"pub fn from_fd(RawFd) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts from a file descriptor, closing it on success or failure.\n","sig":null,"attributes":[{"value":"/ Converts from a file descriptor, closing it on success or failure.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15930,"byte_end":16000,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":16348,"byte_end":16352,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"iter","qualname":"<Dir>::iter","value":"pub fn iter(&mut Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of `Result<Entry>` which rewinds when finished.\n","sig":null,"attributes":[{"value":"/ Returns an iterator of `Result<Entry>` which rewinds when finished.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":16265,"byte_end":16336,"line_start":65,"line_end":65,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2006},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":17267,"byte_end":17271,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"Iter","qualname":"::dir::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2013},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18588,"byte_end":18593,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"Entry","qualname":"::dir::Entry","value":"","parent":null,"children":[],"decl_id":null,"docs":" A directory entry, similar to `std::fs::DirEntry`.","sig":null,"attributes":[{"value":"/ A directory entry, similar to `std::fs::DirEntry`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18413,"byte_end":18467,"line_start":132,"line_end":132,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18468,"byte_end":18471,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Note that unlike the std version, this may represent the `.` or `..` entries.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18472,"byte_end":18553,"line_start":134,"line_end":134,"column_start":1,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2020},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18669,"byte_end":18673,"line_start":140,"line_end":140,"column_start":5,"column_end":9},"name":"Fifo","qualname":"::dir::Type::Fifo","value":"Type::Fifo","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2022},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18679,"byte_end":18694,"line_start":141,"line_end":141,"column_start":5,"column_end":20},"name":"CharacterDevice","qualname":"::dir::Type::CharacterDevice","value":"Type::CharacterDevice","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2024},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18700,"byte_end":18709,"line_start":142,"line_end":142,"column_start":5,"column_end":14},"name":"Directory","qualname":"::dir::Type::Directory","value":"Type::Directory","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2026},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18715,"byte_end":18726,"line_start":143,"line_end":143,"column_start":5,"column_end":16},"name":"BlockDevice","qualname":"::dir::Type::BlockDevice","value":"Type::BlockDevice","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2028},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18732,"byte_end":18736,"line_start":144,"line_end":144,"column_start":5,"column_end":9},"name":"File","qualname":"::dir::Type::File","value":"Type::File","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2030},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18742,"byte_end":18749,"line_start":145,"line_end":145,"column_start":5,"column_end":12},"name":"Symlink","qualname":"::dir::Type::Symlink","value":"Type::Symlink","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2032},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18755,"byte_end":18761,"line_start":146,"line_end":146,"column_start":5,"column_end":11},"name":"Socket","qualname":"::dir::Type::Socket","value":"Type::Socket","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2019},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18658,"byte_end":18662,"line_start":139,"line_end":139,"column_start":10,"column_end":14},"name":"Type","qualname":"::dir::Type","value":"pub enum Type {\n    Fifo,\n    CharacterDevice,\n    Directory,\n    BlockDevice,\n    File,\n    Symlink,\n    Socket,\n}","parent":null,"children":[{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":19186,"byte_end":19189,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"ino","qualname":"<Entry>::ino","value":"pub fn ino(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the inode number (`d_ino`) of the underlying `dirent`.\n","sig":null,"attributes":[{"value":"/ Returns the inode number (`d_ino`) of the underlying `dirent`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18783,"byte_end":18849,"line_start":150,"line_end":150,"column_start":5,"column_end":71}},{"value":"cfg(any(target_os = \"android\", target_os = \"emscripten\", target_os =\n          \"fuchsia\", target_os = \"haiku\", target_os = \"ios\", target_os =\n          \"l4re\", target_os = \"linux\", target_os = \"macos\", target_os =\n          \"solaris\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18854,"byte_end":19174,"line_start":151,"line_end":159,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":19858,"byte_end":19867,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Entry>::file_name","value":"pub fn file_name(&Self) -> &ffi::CStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other leading path component.\n","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other leading path component.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":19750,"byte_end":19846,"line_start":178,"line_end":178,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":20271,"byte_end":20280,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"file_type","qualname":"<Entry>::file_type","value":"pub fn file_type(&Self) -> Option<Type>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of this directory entry, if known.","sig":null,"attributes":[{"value":"/ Returns the type of this directory entry, if known.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":19972,"byte_end":20027,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":20032,"byte_end":20035,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ See platform `readdir(3)` or `dirent(5)` manpage for when the file type is known;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":20040,"byte_end":20125,"line_start":185,"line_end":185,"column_start":5,"column_end":90}},{"value":"/ notably, some Linux filesystems don't implement this. The caller should use `stat` or","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":20130,"byte_end":20219,"line_start":186,"line_end":186,"column_start":5,"column_end":94}},{"value":"/ `fstat` if this returns `None`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":20224,"byte_end":20259,"line_start":187,"line_end":187,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":65},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"errno","qualname":"::errno","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":2045},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":108}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":22743,"byte_end":22748,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"errno","qualname":"::errno::errno","value":"pub fn errno() -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the platform-specific value of errno\n","sig":null,"attributes":[{"value":"/ Returns the platform-specific value of errno","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":22687,"byte_end":22735,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":22841,"byte_end":22845,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"last","qualname":"<Errno>::last","value":"pub fn last() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":22891,"byte_end":22895,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"desc","qualname":"<Errno>::desc","value":"pub fn desc(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":22957,"byte_end":22965,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<Errno>::from_i32","value":"pub fn from_i32(i32) -> Errno","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23034,"byte_end":23039,"line_start":73,"line_end":73,"column_start":19,"column_end":24},"name":"clear","qualname":"<Errno>::clear","value":"pub unsafe fn clear() -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23230,"byte_end":23236,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"result","qualname":"<Errno>::result","value":"pub fn result<S: ErrnoSentinel + PartialEq<S>>(S) -> Result<S>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ok(value)` if it does not contain the sentinel value. This\n should not be used when `-1` is not the errno sentinel value.\n","sig":null,"attributes":[{"value":"/ Returns `Ok(value)` if it does not contain the sentinel value. This","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23077,"byte_end":23148,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ should not be used when `-1` is not the errno sentinel value.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23153,"byte_end":23218,"line_start":78,"line_end":78,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23571,"byte_end":23584,"line_start":90,"line_end":90,"column_start":11,"column_end":24},"name":"ErrnoSentinel","qualname":"::errno::ErrnoSentinel","value":"ErrnoSentinel: Sized","parent":null,"children":[{"krate":0,"index":88}],"decl_id":null,"docs":" The sentinel value indicates that a function failed and more detailed\n information about the error can be found in `errno`\n","sig":null,"attributes":[{"value":"/ The sentinel value indicates that a function failed and more detailed","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23431,"byte_end":23504,"line_start":88,"line_end":88,"column_start":1,"column_end":74}},{"value":"/ information about the error can be found in `errno`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23505,"byte_end":23560,"line_start":89,"line_end":89,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23601,"byte_end":23609,"line_start":91,"line_end":91,"column_start":8,"column_end":16},"name":"sentinel","qualname":"::errno::ErrnoSentinel::sentinel","value":"pub fn sentinel() -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2047},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":42848,"byte_end":42860,"line_start":540,"line_end":540,"column_start":9,"column_end":21},"name":"UnknownErrno","qualname":"::errno::consts::Errno::UnknownErrno","value":"Errno::UnknownErrno","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2050},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":42877,"byte_end":42882,"line_start":541,"line_end":541,"column_start":9,"column_end":14},"name":"EPERM","qualname":"::errno::consts::Errno::EPERM","value":"Errno::EPERM","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2053},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":42916,"byte_end":42922,"line_start":542,"line_end":542,"column_start":9,"column_end":15},"name":"ENOENT","qualname":"::errno::consts::Errno::ENOENT","value":"Errno::ENOENT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2056},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":42956,"byte_end":42961,"line_start":543,"line_end":543,"column_start":9,"column_end":14},"name":"ESRCH","qualname":"::errno::consts::Errno::ESRCH","value":"Errno::ESRCH","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2059},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":42995,"byte_end":43000,"line_start":544,"line_end":544,"column_start":9,"column_end":14},"name":"EINTR","qualname":"::errno::consts::Errno::EINTR","value":"Errno::EINTR","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2062},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43034,"byte_end":43037,"line_start":545,"line_end":545,"column_start":9,"column_end":12},"name":"EIO","qualname":"::errno::consts::Errno::EIO","value":"Errno::EIO","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2065},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43071,"byte_end":43076,"line_start":546,"line_end":546,"column_start":9,"column_end":14},"name":"ENXIO","qualname":"::errno::consts::Errno::ENXIO","value":"Errno::ENXIO","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2068},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43110,"byte_end":43115,"line_start":547,"line_end":547,"column_start":9,"column_end":14},"name":"E2BIG","qualname":"::errno::consts::Errno::E2BIG","value":"Errno::E2BIG","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2071},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43149,"byte_end":43156,"line_start":548,"line_end":548,"column_start":9,"column_end":16},"name":"ENOEXEC","qualname":"::errno::consts::Errno::ENOEXEC","value":"Errno::ENOEXEC","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2074},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43190,"byte_end":43195,"line_start":549,"line_end":549,"column_start":9,"column_end":14},"name":"EBADF","qualname":"::errno::consts::Errno::EBADF","value":"Errno::EBADF","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2077},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43229,"byte_end":43235,"line_start":550,"line_end":550,"column_start":9,"column_end":15},"name":"ECHILD","qualname":"::errno::consts::Errno::ECHILD","value":"Errno::ECHILD","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2080},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43269,"byte_end":43275,"line_start":551,"line_end":551,"column_start":9,"column_end":15},"name":"EAGAIN","qualname":"::errno::consts::Errno::EAGAIN","value":"Errno::EAGAIN","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2083},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43309,"byte_end":43315,"line_start":552,"line_end":552,"column_start":9,"column_end":15},"name":"ENOMEM","qualname":"::errno::consts::Errno::ENOMEM","value":"Errno::ENOMEM","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2086},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43349,"byte_end":43355,"line_start":553,"line_end":553,"column_start":9,"column_end":15},"name":"EACCES","qualname":"::errno::consts::Errno::EACCES","value":"Errno::EACCES","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2089},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43389,"byte_end":43395,"line_start":554,"line_end":554,"column_start":9,"column_end":15},"name":"EFAULT","qualname":"::errno::consts::Errno::EFAULT","value":"Errno::EFAULT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2092},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43429,"byte_end":43436,"line_start":555,"line_end":555,"column_start":9,"column_end":16},"name":"ENOTBLK","qualname":"::errno::consts::Errno::ENOTBLK","value":"Errno::ENOTBLK","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2095},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43470,"byte_end":43475,"line_start":556,"line_end":556,"column_start":9,"column_end":14},"name":"EBUSY","qualname":"::errno::consts::Errno::EBUSY","value":"Errno::EBUSY","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2098},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43509,"byte_end":43515,"line_start":557,"line_end":557,"column_start":9,"column_end":15},"name":"EEXIST","qualname":"::errno::consts::Errno::EEXIST","value":"Errno::EEXIST","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2101},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43549,"byte_end":43554,"line_start":558,"line_end":558,"column_start":9,"column_end":14},"name":"EXDEV","qualname":"::errno::consts::Errno::EXDEV","value":"Errno::EXDEV","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2104},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43588,"byte_end":43594,"line_start":559,"line_end":559,"column_start":9,"column_end":15},"name":"ENODEV","qualname":"::errno::consts::Errno::ENODEV","value":"Errno::ENODEV","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2107},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43628,"byte_end":43635,"line_start":560,"line_end":560,"column_start":9,"column_end":16},"name":"ENOTDIR","qualname":"::errno::consts::Errno::ENOTDIR","value":"Errno::ENOTDIR","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2110},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43669,"byte_end":43675,"line_start":561,"line_end":561,"column_start":9,"column_end":15},"name":"EISDIR","qualname":"::errno::consts::Errno::EISDIR","value":"Errno::EISDIR","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2113},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43709,"byte_end":43715,"line_start":562,"line_end":562,"column_start":9,"column_end":15},"name":"EINVAL","qualname":"::errno::consts::Errno::EINVAL","value":"Errno::EINVAL","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2116},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43749,"byte_end":43755,"line_start":563,"line_end":563,"column_start":9,"column_end":15},"name":"ENFILE","qualname":"::errno::consts::Errno::ENFILE","value":"Errno::ENFILE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2119},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43789,"byte_end":43795,"line_start":564,"line_end":564,"column_start":9,"column_end":15},"name":"EMFILE","qualname":"::errno::consts::Errno::EMFILE","value":"Errno::EMFILE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2122},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43829,"byte_end":43835,"line_start":565,"line_end":565,"column_start":9,"column_end":15},"name":"ENOTTY","qualname":"::errno::consts::Errno::ENOTTY","value":"Errno::ENOTTY","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2125},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43869,"byte_end":43876,"line_start":566,"line_end":566,"column_start":9,"column_end":16},"name":"ETXTBSY","qualname":"::errno::consts::Errno::ETXTBSY","value":"Errno::ETXTBSY","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2128},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43910,"byte_end":43915,"line_start":567,"line_end":567,"column_start":9,"column_end":14},"name":"EFBIG","qualname":"::errno::consts::Errno::EFBIG","value":"Errno::EFBIG","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2131},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43949,"byte_end":43955,"line_start":568,"line_end":568,"column_start":9,"column_end":15},"name":"ENOSPC","qualname":"::errno::consts::Errno::ENOSPC","value":"Errno::ENOSPC","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2134},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":43989,"byte_end":43995,"line_start":569,"line_end":569,"column_start":9,"column_end":15},"name":"ESPIPE","qualname":"::errno::consts::Errno::ESPIPE","value":"Errno::ESPIPE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2137},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44029,"byte_end":44034,"line_start":570,"line_end":570,"column_start":9,"column_end":14},"name":"EROFS","qualname":"::errno::consts::Errno::EROFS","value":"Errno::EROFS","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2140},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44068,"byte_end":44074,"line_start":571,"line_end":571,"column_start":9,"column_end":15},"name":"EMLINK","qualname":"::errno::consts::Errno::EMLINK","value":"Errno::EMLINK","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2143},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44108,"byte_end":44113,"line_start":572,"line_end":572,"column_start":9,"column_end":14},"name":"EPIPE","qualname":"::errno::consts::Errno::EPIPE","value":"Errno::EPIPE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2146},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44147,"byte_end":44151,"line_start":573,"line_end":573,"column_start":9,"column_end":13},"name":"EDOM","qualname":"::errno::consts::Errno::EDOM","value":"Errno::EDOM","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2149},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44185,"byte_end":44191,"line_start":574,"line_end":574,"column_start":9,"column_end":15},"name":"ERANGE","qualname":"::errno::consts::Errno::ERANGE","value":"Errno::ERANGE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2152},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44225,"byte_end":44232,"line_start":575,"line_end":575,"column_start":9,"column_end":16},"name":"EDEADLK","qualname":"::errno::consts::Errno::EDEADLK","value":"Errno::EDEADLK","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2155},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44266,"byte_end":44278,"line_start":576,"line_end":576,"column_start":9,"column_end":21},"name":"ENAMETOOLONG","qualname":"::errno::consts::Errno::ENAMETOOLONG","value":"Errno::ENAMETOOLONG","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2158},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44312,"byte_end":44318,"line_start":577,"line_end":577,"column_start":9,"column_end":15},"name":"ENOLCK","qualname":"::errno::consts::Errno::ENOLCK","value":"Errno::ENOLCK","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2161},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44352,"byte_end":44358,"line_start":578,"line_end":578,"column_start":9,"column_end":15},"name":"ENOSYS","qualname":"::errno::consts::Errno::ENOSYS","value":"Errno::ENOSYS","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2164},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44392,"byte_end":44401,"line_start":579,"line_end":579,"column_start":9,"column_end":18},"name":"ENOTEMPTY","qualname":"::errno::consts::Errno::ENOTEMPTY","value":"Errno::ENOTEMPTY","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2167},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44435,"byte_end":44440,"line_start":580,"line_end":580,"column_start":9,"column_end":14},"name":"ELOOP","qualname":"::errno::consts::Errno::ELOOP","value":"Errno::ELOOP","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2170},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44474,"byte_end":44480,"line_start":581,"line_end":581,"column_start":9,"column_end":15},"name":"ENOMSG","qualname":"::errno::consts::Errno::ENOMSG","value":"Errno::ENOMSG","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2173},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44514,"byte_end":44519,"line_start":582,"line_end":582,"column_start":9,"column_end":14},"name":"EIDRM","qualname":"::errno::consts::Errno::EIDRM","value":"Errno::EIDRM","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2176},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44553,"byte_end":44559,"line_start":583,"line_end":583,"column_start":9,"column_end":15},"name":"ECHRNG","qualname":"::errno::consts::Errno::ECHRNG","value":"Errno::ECHRNG","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2179},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44593,"byte_end":44601,"line_start":584,"line_end":584,"column_start":9,"column_end":17},"name":"EL2NSYNC","qualname":"::errno::consts::Errno::EL2NSYNC","value":"Errno::EL2NSYNC","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2182},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44635,"byte_end":44641,"line_start":585,"line_end":585,"column_start":9,"column_end":15},"name":"EL3HLT","qualname":"::errno::consts::Errno::EL3HLT","value":"Errno::EL3HLT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2185},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44675,"byte_end":44681,"line_start":586,"line_end":586,"column_start":9,"column_end":15},"name":"EL3RST","qualname":"::errno::consts::Errno::EL3RST","value":"Errno::EL3RST","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2188},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44715,"byte_end":44721,"line_start":587,"line_end":587,"column_start":9,"column_end":15},"name":"ELNRNG","qualname":"::errno::consts::Errno::ELNRNG","value":"Errno::ELNRNG","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2191},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44755,"byte_end":44762,"line_start":588,"line_end":588,"column_start":9,"column_end":16},"name":"EUNATCH","qualname":"::errno::consts::Errno::EUNATCH","value":"Errno::EUNATCH","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2194},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44796,"byte_end":44802,"line_start":589,"line_end":589,"column_start":9,"column_end":15},"name":"ENOCSI","qualname":"::errno::consts::Errno::ENOCSI","value":"Errno::ENOCSI","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2197},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44836,"byte_end":44842,"line_start":590,"line_end":590,"column_start":9,"column_end":15},"name":"EL2HLT","qualname":"::errno::consts::Errno::EL2HLT","value":"Errno::EL2HLT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2200},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44876,"byte_end":44881,"line_start":591,"line_end":591,"column_start":9,"column_end":14},"name":"EBADE","qualname":"::errno::consts::Errno::EBADE","value":"Errno::EBADE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2203},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44915,"byte_end":44920,"line_start":592,"line_end":592,"column_start":9,"column_end":14},"name":"EBADR","qualname":"::errno::consts::Errno::EBADR","value":"Errno::EBADR","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2206},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44954,"byte_end":44960,"line_start":593,"line_end":593,"column_start":9,"column_end":15},"name":"EXFULL","qualname":"::errno::consts::Errno::EXFULL","value":"Errno::EXFULL","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2209},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":44994,"byte_end":45000,"line_start":594,"line_end":594,"column_start":9,"column_end":15},"name":"ENOANO","qualname":"::errno::consts::Errno::ENOANO","value":"Errno::ENOANO","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2212},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45034,"byte_end":45041,"line_start":595,"line_end":595,"column_start":9,"column_end":16},"name":"EBADRQC","qualname":"::errno::consts::Errno::EBADRQC","value":"Errno::EBADRQC","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2215},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45075,"byte_end":45082,"line_start":596,"line_end":596,"column_start":9,"column_end":16},"name":"EBADSLT","qualname":"::errno::consts::Errno::EBADSLT","value":"Errno::EBADSLT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2218},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45116,"byte_end":45122,"line_start":597,"line_end":597,"column_start":9,"column_end":15},"name":"EBFONT","qualname":"::errno::consts::Errno::EBFONT","value":"Errno::EBFONT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2221},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45156,"byte_end":45162,"line_start":598,"line_end":598,"column_start":9,"column_end":15},"name":"ENOSTR","qualname":"::errno::consts::Errno::ENOSTR","value":"Errno::ENOSTR","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2224},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45196,"byte_end":45203,"line_start":599,"line_end":599,"column_start":9,"column_end":16},"name":"ENODATA","qualname":"::errno::consts::Errno::ENODATA","value":"Errno::ENODATA","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2227},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45237,"byte_end":45242,"line_start":600,"line_end":600,"column_start":9,"column_end":14},"name":"ETIME","qualname":"::errno::consts::Errno::ETIME","value":"Errno::ETIME","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2230},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45276,"byte_end":45281,"line_start":601,"line_end":601,"column_start":9,"column_end":14},"name":"ENOSR","qualname":"::errno::consts::Errno::ENOSR","value":"Errno::ENOSR","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2233},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45315,"byte_end":45321,"line_start":602,"line_end":602,"column_start":9,"column_end":15},"name":"ENONET","qualname":"::errno::consts::Errno::ENONET","value":"Errno::ENONET","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2236},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45355,"byte_end":45361,"line_start":603,"line_end":603,"column_start":9,"column_end":15},"name":"ENOPKG","qualname":"::errno::consts::Errno::ENOPKG","value":"Errno::ENOPKG","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2239},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45395,"byte_end":45402,"line_start":604,"line_end":604,"column_start":9,"column_end":16},"name":"EREMOTE","qualname":"::errno::consts::Errno::EREMOTE","value":"Errno::EREMOTE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2242},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45436,"byte_end":45443,"line_start":605,"line_end":605,"column_start":9,"column_end":16},"name":"ENOLINK","qualname":"::errno::consts::Errno::ENOLINK","value":"Errno::ENOLINK","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2245},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45477,"byte_end":45481,"line_start":606,"line_end":606,"column_start":9,"column_end":13},"name":"EADV","qualname":"::errno::consts::Errno::EADV","value":"Errno::EADV","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2248},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45515,"byte_end":45521,"line_start":607,"line_end":607,"column_start":9,"column_end":15},"name":"ESRMNT","qualname":"::errno::consts::Errno::ESRMNT","value":"Errno::ESRMNT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2251},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45555,"byte_end":45560,"line_start":608,"line_end":608,"column_start":9,"column_end":14},"name":"ECOMM","qualname":"::errno::consts::Errno::ECOMM","value":"Errno::ECOMM","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2254},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45594,"byte_end":45600,"line_start":609,"line_end":609,"column_start":9,"column_end":15},"name":"EPROTO","qualname":"::errno::consts::Errno::EPROTO","value":"Errno::EPROTO","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2257},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45634,"byte_end":45643,"line_start":610,"line_end":610,"column_start":9,"column_end":18},"name":"EMULTIHOP","qualname":"::errno::consts::Errno::EMULTIHOP","value":"Errno::EMULTIHOP","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2260},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45677,"byte_end":45684,"line_start":611,"line_end":611,"column_start":9,"column_end":16},"name":"EDOTDOT","qualname":"::errno::consts::Errno::EDOTDOT","value":"Errno::EDOTDOT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2263},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45718,"byte_end":45725,"line_start":612,"line_end":612,"column_start":9,"column_end":16},"name":"EBADMSG","qualname":"::errno::consts::Errno::EBADMSG","value":"Errno::EBADMSG","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2266},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45759,"byte_end":45768,"line_start":613,"line_end":613,"column_start":9,"column_end":18},"name":"EOVERFLOW","qualname":"::errno::consts::Errno::EOVERFLOW","value":"Errno::EOVERFLOW","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2269},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45802,"byte_end":45810,"line_start":614,"line_end":614,"column_start":9,"column_end":17},"name":"ENOTUNIQ","qualname":"::errno::consts::Errno::ENOTUNIQ","value":"Errno::ENOTUNIQ","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2272},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45844,"byte_end":45850,"line_start":615,"line_end":615,"column_start":9,"column_end":15},"name":"EBADFD","qualname":"::errno::consts::Errno::EBADFD","value":"Errno::EBADFD","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2275},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45884,"byte_end":45891,"line_start":616,"line_end":616,"column_start":9,"column_end":16},"name":"EREMCHG","qualname":"::errno::consts::Errno::EREMCHG","value":"Errno::EREMCHG","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2278},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45925,"byte_end":45932,"line_start":617,"line_end":617,"column_start":9,"column_end":16},"name":"ELIBACC","qualname":"::errno::consts::Errno::ELIBACC","value":"Errno::ELIBACC","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2281},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":45966,"byte_end":45973,"line_start":618,"line_end":618,"column_start":9,"column_end":16},"name":"ELIBBAD","qualname":"::errno::consts::Errno::ELIBBAD","value":"Errno::ELIBBAD","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2284},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46007,"byte_end":46014,"line_start":619,"line_end":619,"column_start":9,"column_end":16},"name":"ELIBSCN","qualname":"::errno::consts::Errno::ELIBSCN","value":"Errno::ELIBSCN","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2287},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46048,"byte_end":46055,"line_start":620,"line_end":620,"column_start":9,"column_end":16},"name":"ELIBMAX","qualname":"::errno::consts::Errno::ELIBMAX","value":"Errno::ELIBMAX","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2290},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46089,"byte_end":46097,"line_start":621,"line_end":621,"column_start":9,"column_end":17},"name":"ELIBEXEC","qualname":"::errno::consts::Errno::ELIBEXEC","value":"Errno::ELIBEXEC","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2293},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46131,"byte_end":46137,"line_start":622,"line_end":622,"column_start":9,"column_end":15},"name":"EILSEQ","qualname":"::errno::consts::Errno::EILSEQ","value":"Errno::EILSEQ","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2296},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46171,"byte_end":46179,"line_start":623,"line_end":623,"column_start":9,"column_end":17},"name":"ERESTART","qualname":"::errno::consts::Errno::ERESTART","value":"Errno::ERESTART","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2299},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46213,"byte_end":46221,"line_start":624,"line_end":624,"column_start":9,"column_end":17},"name":"ESTRPIPE","qualname":"::errno::consts::Errno::ESTRPIPE","value":"Errno::ESTRPIPE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2302},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46255,"byte_end":46261,"line_start":625,"line_end":625,"column_start":9,"column_end":15},"name":"EUSERS","qualname":"::errno::consts::Errno::EUSERS","value":"Errno::EUSERS","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2305},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46295,"byte_end":46303,"line_start":626,"line_end":626,"column_start":9,"column_end":17},"name":"ENOTSOCK","qualname":"::errno::consts::Errno::ENOTSOCK","value":"Errno::ENOTSOCK","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2308},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46337,"byte_end":46349,"line_start":627,"line_end":627,"column_start":9,"column_end":21},"name":"EDESTADDRREQ","qualname":"::errno::consts::Errno::EDESTADDRREQ","value":"Errno::EDESTADDRREQ","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2311},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46383,"byte_end":46391,"line_start":628,"line_end":628,"column_start":9,"column_end":17},"name":"EMSGSIZE","qualname":"::errno::consts::Errno::EMSGSIZE","value":"Errno::EMSGSIZE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2314},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46425,"byte_end":46435,"line_start":629,"line_end":629,"column_start":9,"column_end":19},"name":"EPROTOTYPE","qualname":"::errno::consts::Errno::EPROTOTYPE","value":"Errno::EPROTOTYPE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2317},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46469,"byte_end":46480,"line_start":630,"line_end":630,"column_start":9,"column_end":20},"name":"ENOPROTOOPT","qualname":"::errno::consts::Errno::ENOPROTOOPT","value":"Errno::ENOPROTOOPT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2320},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46514,"byte_end":46529,"line_start":631,"line_end":631,"column_start":9,"column_end":24},"name":"EPROTONOSUPPORT","qualname":"::errno::consts::Errno::EPROTONOSUPPORT","value":"Errno::EPROTONOSUPPORT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2323},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46563,"byte_end":46578,"line_start":632,"line_end":632,"column_start":9,"column_end":24},"name":"ESOCKTNOSUPPORT","qualname":"::errno::consts::Errno::ESOCKTNOSUPPORT","value":"Errno::ESOCKTNOSUPPORT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2326},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46612,"byte_end":46622,"line_start":633,"line_end":633,"column_start":9,"column_end":19},"name":"EOPNOTSUPP","qualname":"::errno::consts::Errno::EOPNOTSUPP","value":"Errno::EOPNOTSUPP","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2329},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46656,"byte_end":46668,"line_start":634,"line_end":634,"column_start":9,"column_end":21},"name":"EPFNOSUPPORT","qualname":"::errno::consts::Errno::EPFNOSUPPORT","value":"Errno::EPFNOSUPPORT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2332},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46702,"byte_end":46714,"line_start":635,"line_end":635,"column_start":9,"column_end":21},"name":"EAFNOSUPPORT","qualname":"::errno::consts::Errno::EAFNOSUPPORT","value":"Errno::EAFNOSUPPORT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2335},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46748,"byte_end":46758,"line_start":636,"line_end":636,"column_start":9,"column_end":19},"name":"EADDRINUSE","qualname":"::errno::consts::Errno::EADDRINUSE","value":"Errno::EADDRINUSE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2338},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46792,"byte_end":46805,"line_start":637,"line_end":637,"column_start":9,"column_end":22},"name":"EADDRNOTAVAIL","qualname":"::errno::consts::Errno::EADDRNOTAVAIL","value":"Errno::EADDRNOTAVAIL","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2341},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46839,"byte_end":46847,"line_start":638,"line_end":638,"column_start":9,"column_end":17},"name":"ENETDOWN","qualname":"::errno::consts::Errno::ENETDOWN","value":"Errno::ENETDOWN","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2344},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46881,"byte_end":46892,"line_start":639,"line_end":639,"column_start":9,"column_end":20},"name":"ENETUNREACH","qualname":"::errno::consts::Errno::ENETUNREACH","value":"Errno::ENETUNREACH","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2347},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46926,"byte_end":46935,"line_start":640,"line_end":640,"column_start":9,"column_end":18},"name":"ENETRESET","qualname":"::errno::consts::Errno::ENETRESET","value":"Errno::ENETRESET","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2350},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":46969,"byte_end":46981,"line_start":641,"line_end":641,"column_start":9,"column_end":21},"name":"ECONNABORTED","qualname":"::errno::consts::Errno::ECONNABORTED","value":"Errno::ECONNABORTED","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2353},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47015,"byte_end":47025,"line_start":642,"line_end":642,"column_start":9,"column_end":19},"name":"ECONNRESET","qualname":"::errno::consts::Errno::ECONNRESET","value":"Errno::ECONNRESET","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2356},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47059,"byte_end":47066,"line_start":643,"line_end":643,"column_start":9,"column_end":16},"name":"ENOBUFS","qualname":"::errno::consts::Errno::ENOBUFS","value":"Errno::ENOBUFS","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2359},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47100,"byte_end":47107,"line_start":644,"line_end":644,"column_start":9,"column_end":16},"name":"EISCONN","qualname":"::errno::consts::Errno::EISCONN","value":"Errno::EISCONN","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2362},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47141,"byte_end":47149,"line_start":645,"line_end":645,"column_start":9,"column_end":17},"name":"ENOTCONN","qualname":"::errno::consts::Errno::ENOTCONN","value":"Errno::ENOTCONN","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2365},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47183,"byte_end":47192,"line_start":646,"line_end":646,"column_start":9,"column_end":18},"name":"ESHUTDOWN","qualname":"::errno::consts::Errno::ESHUTDOWN","value":"Errno::ESHUTDOWN","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2368},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47226,"byte_end":47238,"line_start":647,"line_end":647,"column_start":9,"column_end":21},"name":"ETOOMANYREFS","qualname":"::errno::consts::Errno::ETOOMANYREFS","value":"Errno::ETOOMANYREFS","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2371},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47272,"byte_end":47281,"line_start":648,"line_end":648,"column_start":9,"column_end":18},"name":"ETIMEDOUT","qualname":"::errno::consts::Errno::ETIMEDOUT","value":"Errno::ETIMEDOUT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2374},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47315,"byte_end":47327,"line_start":649,"line_end":649,"column_start":9,"column_end":21},"name":"ECONNREFUSED","qualname":"::errno::consts::Errno::ECONNREFUSED","value":"Errno::ECONNREFUSED","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2377},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47361,"byte_end":47370,"line_start":650,"line_end":650,"column_start":9,"column_end":18},"name":"EHOSTDOWN","qualname":"::errno::consts::Errno::EHOSTDOWN","value":"Errno::EHOSTDOWN","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2380},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47404,"byte_end":47416,"line_start":651,"line_end":651,"column_start":9,"column_end":21},"name":"EHOSTUNREACH","qualname":"::errno::consts::Errno::EHOSTUNREACH","value":"Errno::EHOSTUNREACH","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2383},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47450,"byte_end":47458,"line_start":652,"line_end":652,"column_start":9,"column_end":17},"name":"EALREADY","qualname":"::errno::consts::Errno::EALREADY","value":"Errno::EALREADY","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2386},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47492,"byte_end":47503,"line_start":653,"line_end":653,"column_start":9,"column_end":20},"name":"EINPROGRESS","qualname":"::errno::consts::Errno::EINPROGRESS","value":"Errno::EINPROGRESS","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2389},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47537,"byte_end":47543,"line_start":654,"line_end":654,"column_start":9,"column_end":15},"name":"ESTALE","qualname":"::errno::consts::Errno::ESTALE","value":"Errno::ESTALE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2392},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47577,"byte_end":47584,"line_start":655,"line_end":655,"column_start":9,"column_end":16},"name":"EUCLEAN","qualname":"::errno::consts::Errno::EUCLEAN","value":"Errno::EUCLEAN","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2395},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47618,"byte_end":47625,"line_start":656,"line_end":656,"column_start":9,"column_end":16},"name":"ENOTNAM","qualname":"::errno::consts::Errno::ENOTNAM","value":"Errno::ENOTNAM","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2398},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47659,"byte_end":47666,"line_start":657,"line_end":657,"column_start":9,"column_end":16},"name":"ENAVAIL","qualname":"::errno::consts::Errno::ENAVAIL","value":"Errno::ENAVAIL","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2401},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47700,"byte_end":47706,"line_start":658,"line_end":658,"column_start":9,"column_end":15},"name":"EISNAM","qualname":"::errno::consts::Errno::EISNAM","value":"Errno::EISNAM","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2404},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47740,"byte_end":47749,"line_start":659,"line_end":659,"column_start":9,"column_end":18},"name":"EREMOTEIO","qualname":"::errno::consts::Errno::EREMOTEIO","value":"Errno::EREMOTEIO","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2407},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47783,"byte_end":47789,"line_start":660,"line_end":660,"column_start":9,"column_end":15},"name":"EDQUOT","qualname":"::errno::consts::Errno::EDQUOT","value":"Errno::EDQUOT","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2410},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47823,"byte_end":47832,"line_start":661,"line_end":661,"column_start":9,"column_end":18},"name":"ENOMEDIUM","qualname":"::errno::consts::Errno::ENOMEDIUM","value":"Errno::ENOMEDIUM","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2413},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47866,"byte_end":47877,"line_start":662,"line_end":662,"column_start":9,"column_end":20},"name":"EMEDIUMTYPE","qualname":"::errno::consts::Errno::EMEDIUMTYPE","value":"Errno::EMEDIUMTYPE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2416},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47911,"byte_end":47920,"line_start":663,"line_end":663,"column_start":9,"column_end":18},"name":"ECANCELED","qualname":"::errno::consts::Errno::ECANCELED","value":"Errno::ECANCELED","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2419},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47954,"byte_end":47960,"line_start":664,"line_end":664,"column_start":9,"column_end":15},"name":"ENOKEY","qualname":"::errno::consts::Errno::ENOKEY","value":"Errno::ENOKEY","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2422},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":47994,"byte_end":48005,"line_start":665,"line_end":665,"column_start":9,"column_end":20},"name":"EKEYEXPIRED","qualname":"::errno::consts::Errno::EKEYEXPIRED","value":"Errno::EKEYEXPIRED","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2425},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48039,"byte_end":48050,"line_start":666,"line_end":666,"column_start":9,"column_end":20},"name":"EKEYREVOKED","qualname":"::errno::consts::Errno::EKEYREVOKED","value":"Errno::EKEYREVOKED","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2428},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48084,"byte_end":48096,"line_start":667,"line_end":667,"column_start":9,"column_end":21},"name":"EKEYREJECTED","qualname":"::errno::consts::Errno::EKEYREJECTED","value":"Errno::EKEYREJECTED","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2431},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48130,"byte_end":48140,"line_start":668,"line_end":668,"column_start":9,"column_end":19},"name":"EOWNERDEAD","qualname":"::errno::consts::Errno::EOWNERDEAD","value":"Errno::EOWNERDEAD","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2434},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48174,"byte_end":48189,"line_start":669,"line_end":669,"column_start":9,"column_end":24},"name":"ENOTRECOVERABLE","qualname":"::errno::consts::Errno::ENOTRECOVERABLE","value":"Errno::ENOTRECOVERABLE","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2437},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48291,"byte_end":48298,"line_start":671,"line_end":671,"column_start":9,"column_end":16},"name":"ERFKILL","qualname":"::errno::consts::Errno::ERFKILL","value":"Errno::ERFKILL","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(any(target_os = \"android\", target_arch = \"mips\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48223,"byte_end":48282,"line_start":670,"line_end":670,"column_start":9,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2440},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48400,"byte_end":48409,"line_start":673,"line_end":673,"column_start":9,"column_end":18},"name":"EHWPOISON","qualname":"::errno::consts::Errno::EHWPOISON","value":"Errno::EHWPOISON","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(any(target_os = \"android\", target_arch = \"mips\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48332,"byte_end":48391,"line_start":672,"line_end":672,"column_start":9,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":2046},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":42832,"byte_end":42837,"line_start":539,"line_end":539,"column_start":14,"column_end":19},"name":"Errno","qualname":"::errno::consts::Errno","value":"pub enum Errno {\n    UnknownErrno = ,\n    EPERM = ,\n    ENOENT = ,\n    ESRCH = ,\n    EINTR = ,\n    EIO = ,\n    ENXIO = ,\n    E2BIG = ,\n    ENOEXEC = ,\n    EBADF = ,\n    ECHILD = ,\n    EAGAIN = ,\n    ENOMEM = ,\n    EACCES = ,\n    EFAULT = ,\n    ENOTBLK = ,\n    EBUSY = ,\n    EEXIST = ,\n    EXDEV = ,\n    ENODEV = ,\n    ENOTDIR = ,\n    EISDIR = ,\n    EINVAL = ,\n    ENFILE = ,\n    EMFILE = ,\n    ENOTTY = ,\n    ETXTBSY = ,\n    EFBIG = ,\n    ENOSPC = ,\n    ESPIPE = ,\n    EROFS = ,\n    EMLINK = ,\n    EPIPE = ,\n    EDOM = ,\n    ERANGE = ,\n    EDEADLK = ,\n    ENAMETOOLONG = ,\n    ENOLCK = ,\n    ENOSYS = ,\n    ENOTEMPTY = ,\n    ELOOP = ,\n    ENOMSG = ,\n    EIDRM = ,\n    ECHRNG = ,\n    EL2NSYNC = ,\n    EL3HLT = ,\n    EL3RST = ,\n    ELNRNG = ,\n    EUNATCH = ,\n    ENOCSI = ,\n    EL2HLT = ,\n    EBADE = ,\n    EBADR = ,\n    EXFULL = ,\n    ENOANO = ,\n    EBADRQC = ,\n    EBADSLT = ,\n    EBFONT = ,\n    ENOSTR = ,\n    ENODATA = ,\n    ETIME = ,\n    ENOSR = ,\n    ENONET = ,\n    ENOPKG = ,\n    EREMOTE = ,\n    ENOLINK = ,\n    EADV = ,\n    ESRMNT = ,\n    ECOMM = ,\n    EPROTO = ,\n    EMULTIHOP = ,\n    EDOTDOT = ,\n    EBADMSG = ,\n    EOVERFLOW = ,\n    ENOTUNIQ = ,\n    EBADFD = ,\n    EREMCHG = ,\n    ELIBACC = ,\n    ELIBBAD = ,\n    ELIBSCN = ,\n    ELIBMAX = ,\n    ELIBEXEC = ,\n    EILSEQ = ,\n    ERESTART = ,\n    ESTRPIPE = ,\n    EUSERS = ,\n    ENOTSOCK = ,\n    EDESTADDRREQ = ,\n    EMSGSIZE = ,\n    EPROTOTYPE = ,\n    ENOPROTOOPT = ,\n    EPROTONOSUPPORT = ,\n    ESOCKTNOSUPPORT = ,\n    EOPNOTSUPP = ,\n    EPFNOSUPPORT = ,\n    EAFNOSUPPORT = ,\n    EADDRINUSE = ,\n    EADDRNOTAVAIL = ,\n    ENETDOWN = ,\n    ENETUNREACH = ,\n    ENETRESET = ,\n    ECONNABORTED = ,\n    ECONNRESET = ,\n    ENOBUFS = ,\n    EISCONN = ,\n    ENOTCONN = ,\n    ESHUTDOWN = ,\n    ETOOMANYREFS = ,\n    ETIMEDOUT = ,\n    ECONNREFUSED = ,\n    EHOSTDOWN = ,\n    EHOSTUNREACH = ,\n    EALREADY = ,\n    EINPROGRESS = ,\n    ESTALE = ,\n    EUCLEAN = ,\n    ENOTNAM = ,\n    ENAVAIL = ,\n    EISNAM = ,\n    EREMOTEIO = ,\n    EDQUOT = ,\n    ENOMEDIUM = ,\n    EMEDIUMTYPE = ,\n    ECANCELED = ,\n    ENOKEY = ,\n    EKEYEXPIRED = ,\n    EKEYREVOKED = ,\n    EKEYREJECTED = ,\n    EOWNERDEAD = ,\n    ENOTRECOVERABLE = ,\n\n    #[cfg(not(any(target_os = \"android\", target_arch = \"mips\")))]\n    ERFKILL = ,\n\n    #[cfg(not(any(target_os = \"android\", target_arch = \"mips\")))]\n    EHWPOISON = ,\n}","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2074},{"krate":0,"index":2077},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2095},{"krate":0,"index":2098},{"krate":0,"index":2101},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2110},{"krate":0,"index":2113},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2122},{"krate":0,"index":2125},{"krate":0,"index":2128},{"krate":0,"index":2131},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2143},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":2170},{"krate":0,"index":2173},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2182},{"krate":0,"index":2185},{"krate":0,"index":2188},{"krate":0,"index":2191},{"krate":0,"index":2194},{"krate":0,"index":2197},{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2209},{"krate":0,"index":2212},{"krate":0,"index":2215},{"krate":0,"index":2218},{"krate":0,"index":2221},{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":2230},{"krate":0,"index":2233},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2251},{"krate":0,"index":2254},{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2263},{"krate":0,"index":2266},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2281},{"krate":0,"index":2284},{"krate":0,"index":2287},{"krate":0,"index":2290},{"krate":0,"index":2293},{"krate":0,"index":2296},{"krate":0,"index":2299},{"krate":0,"index":2302},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":2311},{"krate":0,"index":2314},{"krate":0,"index":2317},{"krate":0,"index":2320},{"krate":0,"index":2323},{"krate":0,"index":2326},{"krate":0,"index":2329},{"krate":0,"index":2332},{"krate":0,"index":2335},{"krate":0,"index":2338},{"krate":0,"index":2341},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2350},{"krate":0,"index":2353},{"krate":0,"index":2356},{"krate":0,"index":2359},{"krate":0,"index":2362},{"krate":0,"index":2365},{"krate":0,"index":2368},{"krate":0,"index":2371},{"krate":0,"index":2374},{"krate":0,"index":2377},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2386},{"krate":0,"index":2389},{"krate":0,"index":2392},{"krate":0,"index":2395},{"krate":0,"index":2398},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2407},{"krate":0,"index":2410},{"krate":0,"index":2413},{"krate":0,"index":2416},{"krate":0,"index":2419},{"krate":0,"index":2422},{"krate":0,"index":2425},{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2437},{"krate":0,"index":2440}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":42806,"byte_end":42818,"line_start":538,"line_end":538,"column_start":5,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":110},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48456,"byte_end":48467,"line_start":676,"line_end":676,"column_start":15,"column_end":26},"name":"EWOULDBLOCK","qualname":"::errno::consts::EWOULDBLOCK","value":"Errno","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":111},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48506,"byte_end":48515,"line_start":677,"line_end":677,"column_start":15,"column_end":24},"name":"EDEADLOCK","qualname":"::errno::consts::EDEADLOCK","value":"Errno","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":48555,"byte_end":48563,"line_start":679,"line_end":679,"column_start":12,"column_end":20},"name":"from_i32","qualname":"::errno::consts::from_i32","value":"pub fn from_i32(i32) -> Errno","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":114},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/features.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"features","qualname":"::features","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/features.rs","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Feature tests for OS functionality\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":874,"byte_end":895,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ Feature tests for OS functionality","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/features.rs","byte_start":95805,"byte_end":95843,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/features.rs","byte_start":97909,"byte_end":97930,"line_start":87,"line_end":87,"column_start":12,"column_end":33},"name":"socket_atomic_cloexec","qualname":"::features::os::socket_atomic_cloexec","value":"pub fn socket_atomic_cloexec() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the OS supports atomic close-on-exec for sockets\n","sig":null,"attributes":[{"value":"/ Check if the OS supports atomic close-on-exec for sockets","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/features.rs","byte_start":97836,"byte_end":97897,"line_start":86,"line_end":86,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fcntl","qualname":"::fcntl","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":2454},{"krate":0,"index":2476},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2467},{"krate":0,"index":2461},{"krate":0,"index":2459},{"krate":0,"index":2456},{"krate":0,"index":2477},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2501},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2509},{"krate":0,"index":2511},{"krate":0,"index":2514},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2521},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2550},{"krate":0,"index":2572},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2563},{"krate":0,"index":2557},{"krate":0,"index":2555},{"krate":0,"index":2552},{"krate":0,"index":2573},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2614},{"krate":0,"index":2616},{"krate":0,"index":2646},{"krate":0,"index":2649},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2664},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":2765},{"krate":0,"index":2787},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2778},{"krate":0,"index":2772},{"krate":0,"index":2770},{"krate":0,"index":2767},{"krate":0,"index":2788},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2814},{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2866},{"krate":0,"index":2888},{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2879},{"krate":0,"index":2873},{"krate":0,"index":2871},{"krate":0,"index":2868},{"krate":0,"index":2889},{"krate":0,"index":2894},{"krate":0,"index":2896},{"krate":0,"index":2898},{"krate":0,"index":2900},{"krate":0,"index":2902},{"krate":0,"index":2909},{"krate":0,"index":2912},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2919},{"krate":0,"index":2922},{"krate":0,"index":2924},{"krate":0,"index":2927},{"krate":0,"index":2929},{"krate":0,"index":2932},{"krate":0,"index":2935},{"krate":0,"index":163},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":2952},{"krate":0,"index":2966},{"krate":0,"index":2965},{"krate":0,"index":211},{"krate":0,"index":2968},{"krate":0,"index":2990},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2981},{"krate":0,"index":2975},{"krate":0,"index":2973},{"krate":0,"index":2970},{"krate":0,"index":2991},{"krate":0,"index":2999},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3007},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3022},{"krate":0,"index":3025},{"krate":0,"index":3027},{"krate":0,"index":3030},{"krate":0,"index":3032},{"krate":0,"index":3035},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3043},{"krate":0,"index":213},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":3069},{"krate":0,"index":3091},{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3082},{"krate":0,"index":3076},{"krate":0,"index":3074},{"krate":0,"index":3071},{"krate":0,"index":3092},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3108},{"krate":0,"index":3110},{"krate":0,"index":3122},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3130},{"krate":0,"index":3132},{"krate":0,"index":3135},{"krate":0,"index":3137},{"krate":0,"index":3140},{"krate":0,"index":3142},{"krate":0,"index":3145},{"krate":0,"index":3148},{"krate":0,"index":222}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2454},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":98738,"byte_end":98745,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AtFlags","qualname":"::fcntl::AtFlags","value":"AtFlags {  }","parent":null,"children":[{"krate":0,"index":2455}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2493},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":98763,"byte_end":98782,"line_start":15,"line_end":15,"column_start":9,"column_end":28},"name":"AT_SYMLINK_NOFOLLOW","qualname":"::fcntl::AtFlags::AT_SYMLINK_NOFOLLOW","value":"AtFlags","parent":{"krate":0,"index":2492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2494},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":98856,"byte_end":98871,"line_start":17,"line_end":17,"column_start":9,"column_end":24},"name":"AT_NO_AUTOMOUNT","qualname":"::fcntl::AtFlags::AT_NO_AUTOMOUNT","value":"AtFlags","parent":{"krate":0,"index":2492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":2495},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":98945,"byte_end":98958,"line_start":19,"line_end":19,"column_start":9,"column_end":22},"name":"AT_EMPTY_PATH","qualname":"::fcntl::AtFlags::AT_EMPTY_PATH","value":"AtFlags","parent":{"krate":0,"index":2492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2550},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":99048,"byte_end":99053,"line_start":25,"line_end":25,"column_start":16,"column_end":21},"name":"OFlag","qualname":"::fcntl::OFlag","value":"OFlag {  }","parent":null,"children":[{"krate":0,"index":2551}],"decl_id":null,"docs":" Configuration options for opened files.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2617},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":99121,"byte_end":99130,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"name":"O_ACCMODE","qualname":"::fcntl::OFlag::O_ACCMODE","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Mask for the access mode of the file.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2618},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":99283,"byte_end":99291,"line_start":32,"line_end":32,"column_start":9,"column_end":17},"name":"O_APPEND","qualname":"::fcntl::OFlag::O_APPEND","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Open the file in append-only mode.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2619},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":99370,"byte_end":99377,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"O_ASYNC","qualname":"::fcntl::OFlag::O_ASYNC","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Generate a signal when input or output becomes possible.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2620},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":99537,"byte_end":99546,"line_start":38,"line_end":38,"column_start":9,"column_end":18},"name":"O_CLOEXEC","qualname":"::fcntl::OFlag::O_CLOEXEC","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Closes the file descriptor once an `execve` call is made.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2621},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":99606,"byte_end":99613,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"name":"O_CREAT","qualname":"::fcntl::OFlag::O_CREAT","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Create the file if it does not exist.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2622},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":99897,"byte_end":99905,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"O_DIRECT","qualname":"::fcntl::OFlag::O_DIRECT","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Try to minimize cache effects of the I/O for this file.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"netbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":2623},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":99974,"byte_end":99985,"line_start":49,"line_end":49,"column_start":9,"column_end":20},"name":"O_DIRECTORY","qualname":"::fcntl::OFlag::O_DIRECTORY","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" If the specified path isn't a directory, fail.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2624},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":100302,"byte_end":100309,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"name":"O_DSYNC","qualname":"::fcntl::OFlag::O_DSYNC","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Implicitly follow each `write()` with an `fdatasync()`.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"ios\", target_os = \"linux\",\n          target_os = \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":2625},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":100368,"byte_end":100374,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"name":"O_EXCL","qualname":"::fcntl::OFlag::O_EXCL","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Error out if a file was not created.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2626},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":101123,"byte_end":101130,"line_start":79,"line_end":79,"column_start":9,"column_end":16},"name":"O_FSYNC","qualname":"::fcntl::OFlag::O_FSYNC","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Same as `O_SYNC`.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          all(target_os = \"linux\", not(target_env = \"musl\")), target_os =\n          \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":2627},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":101289,"byte_end":101300,"line_start":82,"line_end":82,"column_start":9,"column_end":20},"name":"O_LARGEFILE","qualname":"::fcntl::OFlag::O_LARGEFILE","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Allow files whose sizes can't be represented in an `off_t` to be opened.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":2628},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":101445,"byte_end":101454,"line_start":85,"line_end":85,"column_start":9,"column_end":18},"name":"O_NOATIME","qualname":"::fcntl::OFlag::O_NOATIME","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Do not update the file last access time during `read(2)`s.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":2629},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":101538,"byte_end":101546,"line_start":87,"line_end":87,"column_start":9,"column_end":17},"name":"O_NOCTTY","qualname":"::fcntl::OFlag::O_NOCTTY","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Don't attach the device as the process' controlling terminal.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2630},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":101590,"byte_end":101598,"line_start":89,"line_end":89,"column_start":9,"column_end":17},"name":"O_NDELAY","qualname":"::fcntl::OFlag::O_NDELAY","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Same as `O_NONBLOCK`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2631},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":101677,"byte_end":101687,"line_start":91,"line_end":91,"column_start":9,"column_end":19},"name":"O_NOFOLLOW","qualname":"::fcntl::OFlag::O_NOFOLLOW","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" `open()` will fail if the given path is a symbolic link.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2632},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":101759,"byte_end":101769,"line_start":93,"line_end":93,"column_start":9,"column_end":19},"name":"O_NONBLOCK","qualname":"::fcntl::OFlag::O_NONBLOCK","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" When possible, open the file in nonblocking mode.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2633},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":102088,"byte_end":102094,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"O_PATH","qualname":"::fcntl::OFlag::O_PATH","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Obtain a file descriptor for low-level access.","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":2634},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":102217,"byte_end":102225,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"name":"O_RDONLY","qualname":"::fcntl::OFlag::O_RDONLY","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Only allow reading.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2635},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":102360,"byte_end":102366,"line_start":109,"line_end":109,"column_start":9,"column_end":15},"name":"O_RDWR","qualname":"::fcntl::OFlag::O_RDWR","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Allow both reading and writing.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2636},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":102527,"byte_end":102534,"line_start":112,"line_end":112,"column_start":9,"column_end":16},"name":"O_RSYNC","qualname":"::fcntl::OFlag::O_RSYNC","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Similar to `O_DSYNC` but applies to `read`s instead.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":2637},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":103009,"byte_end":103015,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"name":"O_SYNC","qualname":"::fcntl::OFlag::O_SYNC","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Implicitly follow each `write()` with an `fsync()`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2638},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":103135,"byte_end":103144,"line_start":128,"line_end":128,"column_start":9,"column_end":18},"name":"O_TMPFILE","qualname":"::fcntl::OFlag::O_TMPFILE","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Create an unnamed temporary file.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":2639},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":103234,"byte_end":103241,"line_start":130,"line_end":130,"column_start":9,"column_end":16},"name":"O_TRUNC","qualname":"::fcntl::OFlag::O_TRUNC","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Truncate an existing regular file to 0 length if it allows writing.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2640},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":103466,"byte_end":103474,"line_start":137,"line_end":137,"column_start":9,"column_end":17},"name":"O_WRONLY","qualname":"::fcntl::OFlag::O_WRONLY","value":"OFlag","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" Only allow writing.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":103493,"byte_end":103497,"line_start":141,"line_end":141,"column_start":8,"column_end":12},"name":"open","qualname":"::fcntl::open","value":"pub fn open<P: ?Sized + NixPath>(&P, OFlag, Mode) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":150},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":103739,"byte_end":103745,"line_start":149,"line_end":149,"column_start":8,"column_end":14},"name":"openat","qualname":"::fcntl::openat","value":"pub fn openat<P: ?Sized + NixPath>(RawFd, &P, OFlag, Mode) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":104387,"byte_end":104395,"line_start":169,"line_end":169,"column_start":8,"column_end":16},"name":"readlink","qualname":"::fcntl::readlink","value":"pub fn readlink<'a, P: ?Sized + NixPath>(&P, &'a mut [u8])\n-> Result<&'a OsStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":104686,"byte_end":104696,"line_start":178,"line_end":178,"column_start":8,"column_end":18},"name":"readlinkat","qualname":"::fcntl::readlinkat","value":"pub fn readlinkat<'a, P: ?Sized + NixPath>(RawFd, &P, &'a mut [u8])\n-> Result<&'a OsStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2765},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":105384,"byte_end":105392,"line_start":197,"line_end":197,"column_start":16,"column_end":24},"name":"SealFlag","qualname":"::fcntl::SealFlag","value":"SealFlag {  }","parent":null,"children":[{"krate":0,"index":2766}],"decl_id":null,"docs":" Additional flags for file sealing, which allows for limiting operations on a file.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2805},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":105478,"byte_end":105489,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"name":"F_SEAL_SEAL","qualname":"::fcntl::SealFlag::F_SEAL_SEAL","value":"SealFlag","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" Prevents further calls to `fcntl()` with `F_ADD_SEALS`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2806},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":105547,"byte_end":105560,"line_start":201,"line_end":201,"column_start":9,"column_end":22},"name":"F_SEAL_SHRINK","qualname":"::fcntl::SealFlag::F_SEAL_SHRINK","value":"SealFlag","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" The file cannot be reduced in size.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2807},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":105624,"byte_end":105635,"line_start":203,"line_end":203,"column_start":9,"column_end":20},"name":"F_SEAL_GROW","qualname":"::fcntl::SealFlag::F_SEAL_GROW","value":"SealFlag","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" The size of the file cannot be increased.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2808},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":105695,"byte_end":105707,"line_start":205,"line_end":205,"column_start":9,"column_end":21},"name":"F_SEAL_WRITE","qualname":"::fcntl::SealFlag::F_SEAL_WRITE","value":"SealFlag","parent":{"krate":0,"index":2804},"children":[],"decl_id":null,"docs":" The file contents cannot be modified.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2866},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":105814,"byte_end":105820,"line_start":211,"line_end":211,"column_start":16,"column_end":22},"name":"FdFlag","qualname":"::fcntl::FdFlag","value":"FdFlag {  }","parent":null,"children":[{"krate":0,"index":2867}],"decl_id":null,"docs":" Additional configuration flags for `fcntl`'s `F_SETFD`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2903},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":105932,"byte_end":105942,"line_start":213,"line_end":213,"column_start":9,"column_end":19},"name":"FD_CLOEXEC","qualname":"::fcntl::FdFlag::FD_CLOEXEC","value":"FdFlag","parent":{"krate":0,"index":2902},"children":[],"decl_id":null,"docs":" The file descriptor will automatically be closed during a successful `execve(2)`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":165},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106022,"byte_end":106029,"line_start":219,"line_end":219,"column_start":5,"column_end":12},"name":"F_DUPFD","qualname":"::fcntl::FcntlArg::F_DUPFD","value":"FcntlArg::F_DUPFD(RawFd)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":168},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106042,"byte_end":106057,"line_start":220,"line_end":220,"column_start":5,"column_end":20},"name":"F_DUPFD_CLOEXEC","qualname":"::fcntl::FcntlArg::F_DUPFD_CLOEXEC","value":"FcntlArg::F_DUPFD_CLOEXEC(RawFd)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":171},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106070,"byte_end":106077,"line_start":221,"line_end":221,"column_start":5,"column_end":12},"name":"F_GETFD","qualname":"::fcntl::FcntlArg::F_GETFD","value":"FcntlArg::F_GETFD","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":173},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106083,"byte_end":106090,"line_start":222,"line_end":222,"column_start":5,"column_end":12},"name":"F_SETFD","qualname":"::fcntl::FcntlArg::F_SETFD","value":"FcntlArg::F_SETFD(FdFlag)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":176},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106116,"byte_end":106123,"line_start":223,"line_end":223,"column_start":5,"column_end":12},"name":"F_GETFL","qualname":"::fcntl::FcntlArg::F_GETFL","value":"FcntlArg::F_GETFL","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":178},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106129,"byte_end":106136,"line_start":224,"line_end":224,"column_start":5,"column_end":12},"name":"F_SETFL","qualname":"::fcntl::FcntlArg::F_SETFL","value":"FcntlArg::F_SETFL(OFlag)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106163,"byte_end":106170,"line_start":225,"line_end":225,"column_start":5,"column_end":12},"name":"F_SETLK","qualname":"::fcntl::FcntlArg::F_SETLK","value":"FcntlArg::F_SETLK(&'a libc::flock)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106193,"byte_end":106201,"line_start":226,"line_end":226,"column_start":5,"column_end":13},"name":"F_SETLKW","qualname":"::fcntl::FcntlArg::F_SETLKW","value":"FcntlArg::F_SETLKW(&'a libc::flock)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106224,"byte_end":106231,"line_start":227,"line_end":227,"column_start":5,"column_end":12},"name":"F_GETLK","qualname":"::fcntl::FcntlArg::F_GETLK","value":"FcntlArg::F_GETLK(&'a mut libc::flock)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106318,"byte_end":106329,"line_start":229,"line_end":229,"column_start":5,"column_end":16},"name":"F_OFD_SETLK","qualname":"::fcntl::FcntlArg::F_OFD_SETLK","value":"FcntlArg::F_OFD_SETLK(&'a libc::flock)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106258,"byte_end":106313,"line_start":228,"line_end":228,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":193},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106412,"byte_end":106424,"line_start":231,"line_end":231,"column_start":5,"column_end":17},"name":"F_OFD_SETLKW","qualname":"::fcntl::FcntlArg::F_OFD_SETLKW","value":"FcntlArg::F_OFD_SETLKW(&'a libc::flock)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106352,"byte_end":106407,"line_start":230,"line_end":230,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":196},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106507,"byte_end":106518,"line_start":233,"line_end":233,"column_start":5,"column_end":16},"name":"F_OFD_GETLK","qualname":"::fcntl::FcntlArg::F_OFD_GETLK","value":"FcntlArg::F_OFD_GETLK(&'a mut libc::flock)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106447,"byte_end":106502,"line_start":232,"line_end":232,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":199},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106605,"byte_end":106616,"line_start":235,"line_end":235,"column_start":5,"column_end":16},"name":"F_ADD_SEALS","qualname":"::fcntl::FcntlArg::F_ADD_SEALS","value":"FcntlArg::F_ADD_SEALS(SealFlag)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106545,"byte_end":106600,"line_start":234,"line_end":234,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":202},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106692,"byte_end":106703,"line_start":237,"line_end":237,"column_start":5,"column_end":16},"name":"F_GET_SEALS","qualname":"::fcntl::FcntlArg::F_GET_SEALS","value":"FcntlArg::F_GET_SEALS","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106632,"byte_end":106687,"line_start":236,"line_end":236,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":204},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106842,"byte_end":106854,"line_start":241,"line_end":241,"column_start":5,"column_end":17},"name":"F_GETPIPE_SZ","qualname":"::fcntl::FcntlArg::F_GETPIPE_SZ","value":"FcntlArg::F_GETPIPE_SZ","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106782,"byte_end":106837,"line_start":240,"line_end":240,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":206},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106920,"byte_end":106932,"line_start":243,"line_end":243,"column_start":5,"column_end":17},"name":"F_SETPIPE_SZ","qualname":"::fcntl::FcntlArg::F_SETPIPE_SZ","value":"FcntlArg::F_SETPIPE_SZ(c_int)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106860,"byte_end":106915,"line_start":242,"line_end":242,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":163},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":106003,"byte_end":106011,"line_start":218,"line_end":218,"column_start":10,"column_end":18},"name":"FcntlArg","qualname":"::fcntl::FcntlArg","value":"pub enum FcntlArg<'a> {\n    F_DUPFD(RawFd),\n    F_DUPFD_CLOEXEC(RawFd),\n    F_GETFD,\n    F_SETFD(FdFlag),\n    F_GETFL,\n    F_SETFL(OFlag),\n    F_SETLK(&'a libc::flock),\n    F_SETLKW(&'a libc::flock),\n    F_GETLK(&'a mut libc::flock),\n\n    #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n    F_OFD_SETLK(&'a libc::flock),\n\n    #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n    F_OFD_SETLKW(&'a libc::flock),\n\n    #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n    F_OFD_GETLK(&'a mut libc::flock),\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    F_ADD_SEALS(SealFlag),\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    F_GET_SEALS,\n\n    #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n    F_GETPIPE_SZ,\n\n    #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n    F_SETPIPE_SZ(c_int),\n}","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":105954,"byte_end":105993,"line_start":217,"line_end":217,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":210},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":107060,"byte_end":107065,"line_start":250,"line_end":250,"column_start":8,"column_end":13},"name":"fcntl","qualname":"::fcntl::fcntl","value":"pub fn fcntl(RawFd, FcntlArg) -> Result<c_int>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2953},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":108694,"byte_end":108704,"line_start":283,"line_end":283,"column_start":5,"column_end":15},"name":"LockShared","qualname":"::fcntl::FlockArg::LockShared","value":"FlockArg::LockShared","parent":{"krate":0,"index":2952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2955},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":108710,"byte_end":108723,"line_start":284,"line_end":284,"column_start":5,"column_end":18},"name":"LockExclusive","qualname":"::fcntl::FlockArg::LockExclusive","value":"FlockArg::LockExclusive","parent":{"krate":0,"index":2952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2957},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":108729,"byte_end":108735,"line_start":285,"line_end":285,"column_start":5,"column_end":11},"name":"Unlock","qualname":"::fcntl::FlockArg::Unlock","value":"FlockArg::Unlock","parent":{"krate":0,"index":2952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2959},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":108741,"byte_end":108759,"line_start":286,"line_end":286,"column_start":5,"column_end":23},"name":"LockSharedNonblock","qualname":"::fcntl::FlockArg::LockSharedNonblock","value":"FlockArg::LockSharedNonblock","parent":{"krate":0,"index":2952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2961},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":108765,"byte_end":108786,"line_start":287,"line_end":287,"column_start":5,"column_end":26},"name":"LockExclusiveNonblock","qualname":"::fcntl::FlockArg::LockExclusiveNonblock","value":"FlockArg::LockExclusiveNonblock","parent":{"krate":0,"index":2952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2963},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":108792,"byte_end":108806,"line_start":288,"line_end":288,"column_start":5,"column_end":19},"name":"UnlockNonblock","qualname":"::fcntl::FlockArg::UnlockNonblock","value":"FlockArg::UnlockNonblock","parent":{"krate":0,"index":2952},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2952},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":108679,"byte_end":108687,"line_start":282,"line_end":282,"column_start":10,"column_end":18},"name":"FlockArg","qualname":"::fcntl::FlockArg","value":"pub enum FlockArg {\n    LockShared,\n    LockExclusive,\n    Unlock,\n    LockSharedNonblock,\n    LockExclusiveNonblock,\n    UnlockNonblock,\n}","parent":null,"children":[{"krate":0,"index":2953},{"krate":0,"index":2955},{"krate":0,"index":2957},{"krate":0,"index":2959},{"krate":0,"index":2961},{"krate":0,"index":2963}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":108630,"byte_end":108669,"line_start":281,"line_end":281,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":211},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":108818,"byte_end":108823,"line_start":291,"line_end":291,"column_start":8,"column_end":13},"name":"flock","qualname":"::fcntl::flock","value":"pub fn flock(RawFd, FlockArg) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2968},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":109547,"byte_end":109559,"line_start":311,"line_end":311,"column_start":16,"column_end":28},"name":"SpliceFFlags","qualname":"::fcntl::SpliceFFlags","value":"SpliceFFlags {  }","parent":null,"children":[{"krate":0,"index":2969}],"decl_id":null,"docs":" Additional flags to `splice` and friends.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3008},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":109691,"byte_end":109704,"line_start":315,"line_end":315,"column_start":9,"column_end":22},"name":"SPLICE_F_MOVE","qualname":"::fcntl::SpliceFFlags::SPLICE_F_MOVE","value":"SpliceFFlags","parent":{"krate":0,"index":3007},"children":[],"decl_id":null,"docs":" Request that pages be moved instead of copied.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3009},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":109747,"byte_end":109764,"line_start":317,"line_end":317,"column_start":9,"column_end":26},"name":"SPLICE_F_NONBLOCK","qualname":"::fcntl::SpliceFFlags::SPLICE_F_NONBLOCK","value":"SpliceFFlags","parent":{"krate":0,"index":3007},"children":[],"decl_id":null,"docs":" Do not block on I/O.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3010},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":109899,"byte_end":109912,"line_start":321,"line_end":321,"column_start":9,"column_end":22},"name":"SPLICE_F_MORE","qualname":"::fcntl::SpliceFFlags::SPLICE_F_MORE","value":"SpliceFFlags","parent":{"krate":0,"index":3007},"children":[],"decl_id":null,"docs":" Hint that more data will be coming in a subsequent splice.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3011},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":110021,"byte_end":110034,"line_start":325,"line_end":325,"column_start":9,"column_end":22},"name":"SPLICE_F_GIFT","qualname":"::fcntl::SpliceFFlags::SPLICE_F_GIFT","value":"SpliceFFlags","parent":{"krate":0,"index":3007},"children":[],"decl_id":null,"docs":" Gift the user pages to the kernel.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":213},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":110108,"byte_end":110114,"line_start":330,"line_end":330,"column_start":8,"column_end":14},"name":"splice","qualname":"::fcntl::splice","value":"pub fn splice(RawFd, Option<&mut libc::loff_t>, RawFd,\n              Option<&mut libc::loff_t>, usize, SpliceFFlags) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":110045,"byte_end":110100,"line_start":329,"line_end":329,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":218},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":110673,"byte_end":110676,"line_start":342,"line_end":342,"column_start":8,"column_end":11},"name":"tee","qualname":"::fcntl::tee","value":"pub fn tee(RawFd, RawFd, usize, SpliceFFlags) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":110610,"byte_end":110665,"line_start":341,"line_end":341,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":220},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":110937,"byte_end":110945,"line_start":348,"line_end":348,"column_start":8,"column_end":16},"name":"vmsplice","qualname":"::fcntl::vmsplice","value":"pub fn vmsplice(RawFd, &[IoVec<&[u8]>], SpliceFFlags) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":110874,"byte_end":110929,"line_start":347,"line_end":347,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3069},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":111339,"byte_end":111353,"line_start":358,"line_end":358,"column_start":16,"column_end":30},"name":"FallocateFlags","qualname":"::fcntl::FallocateFlags","value":"FallocateFlags {  }","parent":null,"children":[{"krate":0,"index":3070}],"decl_id":null,"docs":" Mode argument flags for fallocate determining operation performed on a given range.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3111},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":111477,"byte_end":111496,"line_start":362,"line_end":362,"column_start":9,"column_end":28},"name":"FALLOC_FL_KEEP_SIZE","qualname":"::fcntl::FallocateFlags::FALLOC_FL_KEEP_SIZE","value":"FallocateFlags","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" File size is not changed.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3112},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":111676,"byte_end":111696,"line_start":366,"line_end":366,"column_start":9,"column_end":29},"name":"FALLOC_FL_PUNCH_HOLE","qualname":"::fcntl::FallocateFlags::FALLOC_FL_PUNCH_HOLE","value":"FallocateFlags","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" Deallocates space by creating a hole.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3113},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":111866,"byte_end":111890,"line_start":370,"line_end":370,"column_start":9,"column_end":33},"name":"FALLOC_FL_COLLAPSE_RANGE","qualname":"::fcntl::FallocateFlags::FALLOC_FL_COLLAPSE_RANGE","value":"FallocateFlags","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" Removes byte range from a file without leaving a hole.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3114},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":112031,"byte_end":112051,"line_start":374,"line_end":374,"column_start":9,"column_end":29},"name":"FALLOC_FL_ZERO_RANGE","qualname":"::fcntl::FallocateFlags::FALLOC_FL_ZERO_RANGE","value":"FallocateFlags","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" Zeroes space in specified byte range.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3115},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":112245,"byte_end":112267,"line_start":378,"line_end":378,"column_start":9,"column_end":31},"name":"FALLOC_FL_INSERT_RANGE","qualname":"::fcntl::FallocateFlags::FALLOC_FL_INSERT_RANGE","value":"FallocateFlags","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" Increases file space by inserting a hole within the file size.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3116},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":112439,"byte_end":112462,"line_start":382,"line_end":382,"column_start":9,"column_end":32},"name":"FALLOC_FL_UNSHARE_RANGE","qualname":"::fcntl::FallocateFlags::FALLOC_FL_UNSHARE_RANGE","value":"FallocateFlags","parent":{"krate":0,"index":3110},"children":[],"decl_id":null,"docs":" Shared file data extants are made private to the file.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":222},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":112652,"byte_end":112661,"line_start":391,"line_end":391,"column_start":8,"column_end":17},"name":"fallocate","qualname":"::fcntl::fallocate","value":"pub fn fallocate(RawFd, FallocateFlags, libc::off_t, libc::off_t)\n-> Result<c_int>","parent":null,"children":[],"decl_id":null,"docs":" Manipulates file space.","sig":null,"attributes":[{"value":"/ Manipulates file space.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":112474,"byte_end":112501,"line_start":386,"line_end":386,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":112502,"byte_end":112505,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ Allows the caller to directly manipulate the allocated disk space for the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":112506,"byte_end":112583,"line_start":388,"line_end":388,"column_start":1,"column_end":78}},{"value":"/ file referred to by fd.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":112584,"byte_end":112611,"line_start":389,"line_end":389,"column_start":1,"column_end":28}},{"value":"cfg(any(target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/fcntl.rs","byte_start":112612,"byte_end":112644,"line_start":390,"line_end":390,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":223},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ifaddrs","qualname":"::ifaddrs","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":3180},{"krate":0,"index":3199},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3193},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3187},{"krate":0,"index":3201},{"krate":0,"index":234},{"krate":0,"index":3202},{"krate":0,"index":3215},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3209},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":241}],"decl_id":null,"docs":" Query network interface addresses","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":929,"byte_end":950,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":951,"byte_end":1176,"line_start":38,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ Query network interface addresses","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":112851,"byte_end":112888,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":112889,"byte_end":112892,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Uses the Linux and/or BSD specific function `getifaddrs` to query the list","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":112893,"byte_end":112971,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ of interfaces and their associated addresses.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":112972,"byte_end":113021,"line_start":4,"line_end":4,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3180},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113312,"byte_end":113328,"line_start":19,"line_end":19,"column_start":12,"column_end":28},"name":"InterfaceAddress","qualname":"::ifaddrs::InterfaceAddress","value":"InterfaceAddress { interface_name, flags, address, netmask, broadcast, destination }","parent":null,"children":[{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186}],"decl_id":null,"docs":" Describes a single address for an interface as returned by `getifaddrs`.\n","sig":null,"attributes":[{"value":"/ Describes a single address for an interface as returned by `getifaddrs`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113179,"byte_end":113255,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":3181},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113377,"byte_end":113391,"line_start":21,"line_end":21,"column_start":9,"column_end":23},"name":"interface_name","qualname":"::ifaddrs::InterfaceAddress::interface_name","value":"std::string::String","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" Name of the network interface\n","sig":null,"attributes":[{"value":"/ Name of the network interface","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113335,"byte_end":113368,"line_start":20,"line_end":20,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3182},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113452,"byte_end":113457,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"flags","qualname":"::ifaddrs::InterfaceAddress::flags","value":"net::if_::InterfaceFlags","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" Flags as from `SIOCGIFFLAGS` ioctl\n","sig":null,"attributes":[{"value":"/ Flags as from `SIOCGIFFLAGS` ioctl","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113405,"byte_end":113443,"line_start":22,"line_end":22,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3183},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113525,"byte_end":113532,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"name":"address","qualname":"::ifaddrs::InterfaceAddress::address","value":"std::option::Option<sys::socket::addr::SockAddr>","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" Network address of this interface\n","sig":null,"attributes":[{"value":"/ Network address of this interface","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113479,"byte_end":113516,"line_start":24,"line_end":24,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3184},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113594,"byte_end":113601,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"netmask","qualname":"::ifaddrs::InterfaceAddress::netmask","value":"std::option::Option<sys::socket::addr::SockAddr>","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" Netmask of this interface\n","sig":null,"attributes":[{"value":"/ Netmask of this interface","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113556,"byte_end":113585,"line_start":26,"line_end":26,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3185},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113688,"byte_end":113697,"line_start":29,"line_end":29,"column_start":9,"column_end":18},"name":"broadcast","qualname":"::ifaddrs::InterfaceAddress::broadcast","value":"std::option::Option<sys::socket::addr::SockAddr>","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" Broadcast address of this interface, if applicable\n","sig":null,"attributes":[{"value":"/ Broadcast address of this interface, if applicable","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113625,"byte_end":113679,"line_start":28,"line_end":28,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3186},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113768,"byte_end":113779,"line_start":31,"line_end":31,"column_start":9,"column_end":20},"name":"destination","qualname":"::ifaddrs::InterfaceAddress::destination","value":"std::option::Option<sys::socket::addr::SockAddr>","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" Point-to-point destination address\n","sig":null,"attributes":[{"value":"/ Point-to-point destination address","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":113721,"byte_end":113759,"line_start":30,"line_end":30,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":3202},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":115510,"byte_end":115534,"line_start":78,"line_end":78,"column_start":12,"column_end":36},"name":"InterfaceAddressIterator","qualname":"::ifaddrs::InterfaceAddressIterator","value":"InterfaceAddressIterator {  }","parent":null,"children":[{"krate":0,"index":3203},{"krate":0,"index":3204}],"decl_id":null,"docs":" Holds the results of `getifaddrs`.","sig":null,"attributes":[{"value":"/ Holds the results of `getifaddrs`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":115229,"byte_end":115267,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":115268,"byte_end":115271,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Use the function `getifaddrs` to create this Iterator. Note that the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":115272,"byte_end":115344,"line_start":74,"line_end":74,"column_start":1,"column_end":73}},{"value":"/ actual list of interfaces can be iterated once and will be freed as","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":115345,"byte_end":115416,"line_start":75,"line_end":75,"column_start":1,"column_end":72}},{"value":"/ soon as the Iterator goes out of scope.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":115417,"byte_end":115460,"line_start":76,"line_end":76,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":241},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":117031,"byte_end":117041,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"getifaddrs","qualname":"::ifaddrs::getifaddrs","value":"pub fn getifaddrs() -> Result<InterfaceAddressIterator>","parent":null,"children":[],"decl_id":null,"docs":" Get interface addresses using libc's `getifaddrs`","sig":null,"attributes":[{"value":"/ Get interface addresses using libc's `getifaddrs`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116110,"byte_end":116163,"line_start":102,"line_end":102,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116164,"byte_end":116167,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Note that the underlying implementation differs between OSes. Only the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116168,"byte_end":116242,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/ most common address families are supported by the nix crate (due to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116243,"byte_end":116314,"line_start":105,"line_end":105,"column_start":1,"column_end":72}},{"value":"/ lack of time and complexity of testing). The address family is encoded","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116315,"byte_end":116389,"line_start":106,"line_end":106,"column_start":1,"column_end":75}},{"value":"/ in the specific variant of `SockAddr` returned for the fields `address`,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116390,"byte_end":116466,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ `netmask`, `broadcast`, and `destination`. For any entry not supported,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116467,"byte_end":116542,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/ the returned list will contain a `None` entry.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116543,"byte_end":116593,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116594,"byte_end":116597,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116598,"byte_end":116611,"line_start":111,"line_end":111,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116612,"byte_end":116619,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ let addrs = nix::ifaddrs::getifaddrs().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116620,"byte_end":116672,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/ for ifaddr in addrs {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116673,"byte_end":116698,"line_start":114,"line_end":114,"column_start":1,"column_end":26}},{"value":"/   match ifaddr.address {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116699,"byte_end":116727,"line_start":115,"line_end":115,"column_start":1,"column_end":29}},{"value":"/     Some(address) => {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116728,"byte_end":116754,"line_start":116,"line_end":116,"column_start":1,"column_end":27}},{"value":"/       println!(\"interface {} address {}\",","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116755,"byte_end":116800,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"/                ifaddr.interface_name, address);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116801,"byte_end":116852,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/     },","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116853,"byte_end":116863,"line_start":119,"line_end":119,"column_start":1,"column_end":11}},{"value":"/     None => {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116864,"byte_end":116881,"line_start":120,"line_end":120,"column_start":1,"column_end":18}},{"value":"/       println!(\"interface {} with unsupported address family\",","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116882,"byte_end":116948,"line_start":121,"line_end":121,"column_start":1,"column_end":67}},{"value":"/                ifaddr.interface_name);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116949,"byte_end":116991,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/     }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":116992,"byte_end":117001,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/   }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":117002,"byte_end":117009,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":117010,"byte_end":117015,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":117016,"byte_end":117023,"line_start":126,"line_end":126,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":243},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"kmod","qualname":"::kmod","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":3217},{"krate":0,"index":3239},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3230},{"krate":0,"index":3224},{"krate":0,"index":3222},{"krate":0,"index":3219},{"krate":0,"index":3240},{"krate":0,"index":3246},{"krate":0,"index":3248},{"krate":0,"index":3250},{"krate":0,"index":3252},{"krate":0,"index":3254},{"krate":0,"index":3262},{"krate":0,"index":3265},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3272},{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3288},{"krate":0,"index":250},{"krate":0,"index":3308},{"krate":0,"index":3330},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3321},{"krate":0,"index":3315},{"krate":0,"index":3313},{"krate":0,"index":3310},{"krate":0,"index":3331},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3353},{"krate":0,"index":3356},{"krate":0,"index":3358},{"krate":0,"index":3361},{"krate":0,"index":3363},{"krate":0,"index":3366},{"krate":0,"index":3368},{"krate":0,"index":3371},{"krate":0,"index":3373},{"krate":0,"index":3376},{"krate":0,"index":3379},{"krate":0,"index":252}],"decl_id":null,"docs":" Load and unload kernel modules.","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1194,"byte_end":1259,"line_start":46,"line_end":47,"column_start":1,"column_end":33}},{"value":"/ Load and unload kernel modules.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117520,"byte_end":117555,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117556,"byte_end":117559,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For more details see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117560,"byte_end":117584,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":249},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118891,"byte_end":118902,"line_start":46,"line_end":46,"column_start":8,"column_end":19},"name":"init_module","qualname":"::kmod::init_module","value":"pub fn init_module(&[u8], &CStr) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Loads a kernel module from a buffer.","sig":null,"attributes":[{"value":"/ Loads a kernel module from a buffer.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117680,"byte_end":117720,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117721,"byte_end":117724,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ It loads an ELF image into kernel space,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117725,"byte_end":117769,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ performs any necessary symbol relocations,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117770,"byte_end":117816,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"/ initializes module parameters to values provided by the caller,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117817,"byte_end":117884,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"/ and then runs the module's init function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117885,"byte_end":117930,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117931,"byte_end":117934,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This function requires `CAP_SYS_MODULE` privilege.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117935,"byte_end":117989,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117990,"byte_end":117993,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The `module_image` argument points to a buffer containing the binary image","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":117994,"byte_end":118072,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ to be loaded. The buffer should contain a valid ELF image","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118073,"byte_end":118134,"line_start":22,"line_end":22,"column_start":1,"column_end":62}},{"value":"/ built for the running kernel.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118135,"byte_end":118168,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118169,"byte_end":118172,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The `param_values` argument is a string containing space-delimited specifications","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118173,"byte_end":118258,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ of the values for module parameters.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118259,"byte_end":118299,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ Each of the parameter specifications has the form:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118300,"byte_end":118354,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118355,"byte_end":118358,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ `name[=value[,value...]]`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118359,"byte_end":118388,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118389,"byte_end":118392,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118393,"byte_end":118406,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118407,"byte_end":118410,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118411,"byte_end":118424,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118425,"byte_end":118447,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118448,"byte_end":118470,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use std::ffi::CString;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118471,"byte_end":118497,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/ use nix::kmod::init_module;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118498,"byte_end":118529,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118530,"byte_end":118533,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let mut f = File::open(\"mykernel.ko\").unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118534,"byte_end":118585,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/ let mut contents: Vec<u8> = Vec::new();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118586,"byte_end":118629,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/ f.read_to_end(&mut contents).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118630,"byte_end":118672,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/ init_module(&mut contents, &CString::new(\"who=Rust when=Now,12\").unwrap()).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118673,"byte_end":118761,"line_start":42,"line_end":42,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118762,"byte_end":118769,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118770,"byte_end":118773,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ See [`man init_module(2)`](http://man7.org/linux/man-pages/man2/init_module.2.html) for more information.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":118774,"byte_end":118883,"line_start":45,"line_end":45,"column_start":1,"column_end":110}}]},{"kind":"Struct","id":{"krate":0,"index":3217},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119280,"byte_end":119295,"line_start":61,"line_end":61,"column_start":16,"column_end":31},"name":"ModuleInitFlags","qualname":"::kmod::ModuleInitFlags","value":"ModuleInitFlags {  }","parent":null,"children":[{"krate":0,"index":3218}],"decl_id":null,"docs":" Flags used by the `finit_module` function.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3255},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119362,"byte_end":119392,"line_start":63,"line_end":63,"column_start":9,"column_end":39},"name":"MODULE_INIT_IGNORE_MODVERSIONS","qualname":"::kmod::ModuleInitFlags::MODULE_INIT_IGNORE_MODVERSIONS","value":"ModuleInitFlags","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":" Ignore symbol version hashes.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3256},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119443,"byte_end":119470,"line_start":65,"line_end":65,"column_start":9,"column_end":36},"name":"MODULE_INIT_IGNORE_VERMAGIC","qualname":"::kmod::ModuleInitFlags::MODULE_INIT_IGNORE_VERMAGIC","value":"ModuleInitFlags","parent":{"krate":0,"index":3254},"children":[],"decl_id":null,"docs":" Ignore kernel version magic.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":250},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119939,"byte_end":119951,"line_start":83,"line_end":83,"column_start":8,"column_end":20},"name":"finit_module","qualname":"::kmod::finit_module","value":"pub fn finit_module<T: AsRawFd>(&T, &CStr, ModuleInitFlags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Loads a kernel module from a given file descriptor.","sig":null,"attributes":[{"value":"/ Loads a kernel module from a given file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119482,"byte_end":119537,"line_start":69,"line_end":69,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119538,"byte_end":119541,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119542,"byte_end":119555,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119556,"byte_end":119559,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119560,"byte_end":119573,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119574,"byte_end":119596,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ use std::ffi::CString;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119597,"byte_end":119623,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/ use nix::kmod::{finit_module, ModuleInitFlags};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119624,"byte_end":119675,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119676,"byte_end":119679,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let f = File::open(\"mymod.ko\").unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119680,"byte_end":119724,"line_start":78,"line_end":78,"column_start":1,"column_end":45}},{"value":"/ finit_module(&f, &CString::new(\"\").unwrap(), ModuleInitFlags::empty()).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119725,"byte_end":119809,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119810,"byte_end":119817,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119818,"byte_end":119821,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ See [`man init_module(2)`](http://man7.org/linux/man-pages/man2/init_module.2.html) for more information.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":119822,"byte_end":119931,"line_start":82,"line_end":82,"column_start":1,"column_end":110}}]},{"kind":"Struct","id":{"krate":0,"index":3308},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120489,"byte_end":120506,"line_start":101,"line_end":101,"column_start":16,"column_end":33},"name":"DeleteModuleFlags","qualname":"::kmod::DeleteModuleFlags","value":"DeleteModuleFlags {  }","parent":null,"children":[{"krate":0,"index":3309}],"decl_id":null,"docs":" Flags used by `delete_module`.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3346},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120530,"byte_end":120540,"line_start":102,"line_end":102,"column_start":9,"column_end":19},"name":"O_NONBLOCK","qualname":"::kmod::DeleteModuleFlags::O_NONBLOCK","value":"DeleteModuleFlags","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3347},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120550,"byte_end":120557,"line_start":103,"line_end":103,"column_start":9,"column_end":16},"name":"O_TRUNC","qualname":"::kmod::DeleteModuleFlags::O_TRUNC","value":"DeleteModuleFlags","parent":{"krate":0,"index":3345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":252},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120967,"byte_end":120980,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"delete_module","qualname":"::kmod::delete_module","value":"pub fn delete_module(&CStr, DeleteModuleFlags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Unloads the kernel module with the given name.","sig":null,"attributes":[{"value":"/ Unloads the kernel module with the given name.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120569,"byte_end":120619,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120620,"byte_end":120623,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120624,"byte_end":120637,"line_start":109,"line_end":109,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120638,"byte_end":120641,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120642,"byte_end":120655,"line_start":111,"line_end":111,"column_start":1,"column_end":14}},{"value":"/ use std::ffi::CString;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120656,"byte_end":120682,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"/ use nix::kmod::{delete_module, DeleteModuleFlags};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120683,"byte_end":120737,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120738,"byte_end":120741,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ delete_module(&CString::new(\"mymod\").unwrap(), DeleteModuleFlags::O_NONBLOCK).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120742,"byte_end":120833,"line_start":115,"line_end":115,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120834,"byte_end":120841,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120842,"byte_end":120845,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ See [`man delete_module(2)`](http://man7.org/linux/man-pages/man2/delete_module.2.html) for more information.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/kmod.rs","byte_start":120846,"byte_end":120959,"line_start":118,"line_end":118,"column_start":1,"column_end":114}}]},{"kind":"Mod","id":{"krate":0,"index":253},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mount","qualname":"::mount","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":3399},{"krate":0,"index":3421},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3412},{"krate":0,"index":3406},{"krate":0,"index":3404},{"krate":0,"index":3401},{"krate":0,"index":3422},{"krate":0,"index":3454},{"krate":0,"index":3456},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3462},{"krate":0,"index":3496},{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3509},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3516},{"krate":0,"index":3519},{"krate":0,"index":3522},{"krate":0,"index":3620},{"krate":0,"index":3642},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3633},{"krate":0,"index":3627},{"krate":0,"index":3625},{"krate":0,"index":3622},{"krate":0,"index":3643},{"krate":0,"index":3650},{"krate":0,"index":3652},{"krate":0,"index":3654},{"krate":0,"index":3656},{"krate":0,"index":3658},{"krate":0,"index":3667},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":3677},{"krate":0,"index":3680},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3687},{"krate":0,"index":3690},{"krate":0,"index":3693},{"krate":0,"index":262},{"krate":0,"index":271},{"krate":0,"index":274}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1274,"byte_end":1339,"line_start":49,"line_end":50,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3399},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121278,"byte_end":121285,"line_start":7,"line_end":7,"column_start":16,"column_end":23},"name":"MsFlags","qualname":"::mount::MsFlags","value":"MsFlags {  }","parent":null,"children":[{"krate":0,"index":3400}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3463},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121333,"byte_end":121342,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"name":"MS_RDONLY","qualname":"::mount::MsFlags::MS_RDONLY","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Mount read-only\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3464},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121390,"byte_end":121399,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"name":"MS_NOSUID","qualname":"::mount::MsFlags::MS_NOSUID","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Ignore suid and sgid bits\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3465},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121461,"byte_end":121469,"line_start":13,"line_end":13,"column_start":9,"column_end":17},"name":"MS_NODEV","qualname":"::mount::MsFlags::MS_NODEV","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Disallow access to device special files\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3466},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121518,"byte_end":121527,"line_start":15,"line_end":15,"column_start":9,"column_end":18},"name":"MS_NOEXEC","qualname":"::mount::MsFlags::MS_NOEXEC","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Disallow program execution\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3467},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121575,"byte_end":121589,"line_start":17,"line_end":17,"column_start":9,"column_end":23},"name":"MS_SYNCHRONOUS","qualname":"::mount::MsFlags::MS_SYNCHRONOUS","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Writes are synced at once\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3468},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121639,"byte_end":121649,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"name":"MS_REMOUNT","qualname":"::mount::MsFlags::MS_REMOUNT","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Alter flags of a mounted FS\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3469},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121701,"byte_end":121712,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"name":"MS_MANDLOCK","qualname":"::mount::MsFlags::MS_MANDLOCK","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Allow mandatory locks on a FS\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3470},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121774,"byte_end":121784,"line_start":23,"line_end":23,"column_start":9,"column_end":19},"name":"MS_DIRSYNC","qualname":"::mount::MsFlags::MS_DIRSYNC","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Directory modifications are synchronous\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3471},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121833,"byte_end":121843,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"name":"MS_NOATIME","qualname":"::mount::MsFlags::MS_NOATIME","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Do not update access times\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3472},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121902,"byte_end":121915,"line_start":27,"line_end":27,"column_start":9,"column_end":22},"name":"MS_NODIRATIME","qualname":"::mount::MsFlags::MS_NODIRATIME","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Do not update directory access times\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3473},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":121985,"byte_end":121992,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"MS_BIND","qualname":"::mount::MsFlags::MS_BIND","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Linux 2.4.0 - Bind directory at different place\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3474},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122002,"byte_end":122009,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"MS_MOVE","qualname":"::mount::MsFlags::MS_MOVE","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3475},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122019,"byte_end":122025,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"MS_REC","qualname":"::mount::MsFlags::MS_REC","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3476},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122035,"byte_end":122044,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"name":"MS_SILENT","qualname":"::mount::MsFlags::MS_SILENT","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3477},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122054,"byte_end":122065,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"name":"MS_POSIXACL","qualname":"::mount::MsFlags::MS_POSIXACL","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3478},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122075,"byte_end":122088,"line_start":34,"line_end":34,"column_start":9,"column_end":22},"name":"MS_UNBINDABLE","qualname":"::mount::MsFlags::MS_UNBINDABLE","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3479},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122098,"byte_end":122108,"line_start":35,"line_end":35,"column_start":9,"column_end":19},"name":"MS_PRIVATE","qualname":"::mount::MsFlags::MS_PRIVATE","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3480},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122118,"byte_end":122126,"line_start":36,"line_end":36,"column_start":9,"column_end":17},"name":"MS_SLAVE","qualname":"::mount::MsFlags::MS_SLAVE","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3481},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122136,"byte_end":122145,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"name":"MS_SHARED","qualname":"::mount::MsFlags::MS_SHARED","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3482},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122155,"byte_end":122166,"line_start":38,"line_end":38,"column_start":9,"column_end":20},"name":"MS_RELATIME","qualname":"::mount::MsFlags::MS_RELATIME","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3483},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122176,"byte_end":122188,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"MS_KERNMOUNT","qualname":"::mount::MsFlags::MS_KERNMOUNT","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3484},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122198,"byte_end":122210,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"name":"MS_I_VERSION","qualname":"::mount::MsFlags::MS_I_VERSION","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3485},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122220,"byte_end":122234,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"name":"MS_STRICTATIME","qualname":"::mount::MsFlags::MS_STRICTATIME","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3486},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122244,"byte_end":122253,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"name":"MS_ACTIVE","qualname":"::mount::MsFlags::MS_ACTIVE","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3487},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122263,"byte_end":122272,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"name":"MS_NOUSER","qualname":"::mount::MsFlags::MS_NOUSER","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3488},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122282,"byte_end":122293,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"name":"MS_RMT_MASK","qualname":"::mount::MsFlags::MS_RMT_MASK","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3489},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122303,"byte_end":122313,"line_start":45,"line_end":45,"column_start":9,"column_end":19},"name":"MS_MGC_VAL","qualname":"::mount::MsFlags::MS_MGC_VAL","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3490},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122323,"byte_end":122333,"line_start":46,"line_end":46,"column_start":9,"column_end":19},"name":"MS_MGC_MSK","qualname":"::mount::MsFlags::MS_MGC_MSK","value":"MsFlags","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3620},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122376,"byte_end":122384,"line_start":51,"line_end":51,"column_start":16,"column_end":24},"name":"MntFlags","qualname":"::mount::MntFlags","value":"MntFlags {  }","parent":null,"children":[{"krate":0,"index":3621}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3659},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122402,"byte_end":122411,"line_start":52,"line_end":52,"column_start":9,"column_end":18},"name":"MNT_FORCE","qualname":"::mount::MntFlags::MNT_FORCE","value":"MntFlags","parent":{"krate":0,"index":3658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3660},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122421,"byte_end":122431,"line_start":53,"line_end":53,"column_start":9,"column_end":19},"name":"MNT_DETACH","qualname":"::mount::MntFlags::MNT_DETACH","value":"MntFlags","parent":{"krate":0,"index":3658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3661},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122441,"byte_end":122451,"line_start":54,"line_end":54,"column_start":9,"column_end":19},"name":"MNT_EXPIRE","qualname":"::mount::MntFlags::MNT_EXPIRE","value":"MntFlags","parent":{"krate":0,"index":3658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":262},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":122470,"byte_end":122475,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"mount","qualname":"::mount::mount","value":"pub fn mount<P1: ?Sized + NixPath, P2: ?Sized + NixPath, P3: ?Sized + NixPath,\n             P4: ?Sized +\n             NixPath>(Option<&P1>, &P2, Option<&P3>, MsFlags, Option<&P4>)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":271},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":123379,"byte_end":123385,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"umount","qualname":"::mount::umount","value":"pub fn umount<P: ?Sized + NixPath>(&P) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":274},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mount.rs","byte_start":123579,"byte_end":123586,"line_start":93,"line_end":93,"column_start":8,"column_end":15},"name":"umount2","qualname":"::mount::umount2","value":"pub fn umount2<P: ?Sized + NixPath>(&P, MntFlags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":277},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mqueue","qualname":"::mqueue","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":3716},{"krate":0,"index":3738},{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3731},{"krate":0,"index":3732},{"krate":0,"index":3729},{"krate":0,"index":3723},{"krate":0,"index":3721},{"krate":0,"index":3718},{"krate":0,"index":3739},{"krate":0,"index":3750},{"krate":0,"index":3752},{"krate":0,"index":3754},{"krate":0,"index":3756},{"krate":0,"index":3758},{"krate":0,"index":3771},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":3781},{"krate":0,"index":3784},{"krate":0,"index":3786},{"krate":0,"index":3789},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3832},{"krate":0,"index":3854},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3845},{"krate":0,"index":3839},{"krate":0,"index":3837},{"krate":0,"index":3834},{"krate":0,"index":3855},{"krate":0,"index":3860},{"krate":0,"index":3862},{"krate":0,"index":3864},{"krate":0,"index":3866},{"krate":0,"index":3868},{"krate":0,"index":3875},{"krate":0,"index":3878},{"krate":0,"index":3880},{"krate":0,"index":3883},{"krate":0,"index":3885},{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3895},{"krate":0,"index":3898},{"krate":0,"index":3901},{"krate":0,"index":3918},{"krate":0,"index":3921},{"krate":0,"index":3920},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" Posix Message Queue functions","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n          \"fushsia\", target_os = \"linux\", target_os = \"netbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1355,"byte_end":1520,"line_start":52,"line_end":56,"column_start":1,"column_end":34}},{"value":"/ Posix Message Queue functions","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":123803,"byte_end":123836,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":123837,"byte_end":123840,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [Further reading and details on the C API](http://man7.org/linux/man-pages/man7/mq_overview.7.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":123841,"byte_end":123944,"line_start":3,"line_end":3,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":3716},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124116,"byte_end":124124,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"MQ_OFlag","qualname":"::mqueue::MQ_OFlag","value":"MQ_OFlag {  }","parent":null,"children":[{"krate":0,"index":3717}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3759},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124148,"byte_end":124156,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"O_RDONLY","qualname":"::mqueue::MQ_OFlag::O_RDONLY","value":"MQ_OFlag","parent":{"krate":0,"index":3758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3760},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124166,"byte_end":124174,"line_start":16,"line_end":16,"column_start":9,"column_end":17},"name":"O_WRONLY","qualname":"::mqueue::MQ_OFlag::O_WRONLY","value":"MQ_OFlag","parent":{"krate":0,"index":3758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3761},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124184,"byte_end":124190,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"O_RDWR","qualname":"::mqueue::MQ_OFlag::O_RDWR","value":"MQ_OFlag","parent":{"krate":0,"index":3758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3762},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124200,"byte_end":124207,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"O_CREAT","qualname":"::mqueue::MQ_OFlag::O_CREAT","value":"MQ_OFlag","parent":{"krate":0,"index":3758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3763},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124217,"byte_end":124223,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"O_EXCL","qualname":"::mqueue::MQ_OFlag::O_EXCL","value":"MQ_OFlag","parent":{"krate":0,"index":3758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3764},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124233,"byte_end":124243,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"O_NONBLOCK","qualname":"::mqueue::MQ_OFlag::O_NONBLOCK","value":"MQ_OFlag","parent":{"krate":0,"index":3758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3765},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124253,"byte_end":124262,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"name":"O_CLOEXEC","qualname":"::mqueue::MQ_OFlag::O_CLOEXEC","value":"MQ_OFlag","parent":{"krate":0,"index":3758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3832},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124304,"byte_end":124310,"line_start":26,"line_end":26,"column_start":16,"column_end":22},"name":"FdFlag","qualname":"::mqueue::FdFlag","value":"FdFlag {  }","parent":null,"children":[{"krate":0,"index":3833}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3869},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124334,"byte_end":124344,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"name":"FD_CLOEXEC","qualname":"::mqueue::FdFlag::FD_CLOEXEC","value":"FdFlag","parent":{"krate":0,"index":3868},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3918},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124440,"byte_end":124446,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"MqAttr","qualname":"::mqueue::MqAttr","value":"MqAttr {  }","parent":null,"children":[{"krate":0,"index":3919}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124355,"byte_end":124365,"line_start":31,"line_end":31,"column_start":1,"column_end":11}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124389,"byte_end":124428,"line_start":33,"line_end":33,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124882,"byte_end":124885,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<MqAttr>::new","value":"pub fn new(c_long, c_long, c_long, c_long) -> MqAttr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":125305,"byte_end":125310,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"flags","qualname":"<MqAttr>::flags","value":"pub fn flags(&Self) -> c_long","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":294},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":125506,"byte_end":125513,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"mq_open","qualname":"::mqueue::mq_open","value":"pub fn mq_open(&CString, MQ_OFlag, Mode, Option<&MqAttr>) -> Result<mqd_t>","parent":null,"children":[],"decl_id":null,"docs":" Open a message queue","sig":null,"attributes":[{"value":"/ Open a message queue","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":125370,"byte_end":125394,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":125395,"byte_end":125398,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ See also [`mq_open(2)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mq_open.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":125399,"byte_end":125498,"line_start":70,"line_end":70,"column_start":1,"column_end":100}}]},{"kind":"Function","id":{"krate":0,"index":295},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126182,"byte_end":126191,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"mq_unlink","qualname":"::mqueue::mq_unlink","value":"pub fn mq_unlink(&CString) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Remove a message queue","sig":null,"attributes":[{"value":"/ Remove a message queue","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126040,"byte_end":126066,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126067,"byte_end":126070,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ See also [`mq_unlink(2)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mq_unlink.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126071,"byte_end":126174,"line_start":90,"line_end":90,"column_start":1,"column_end":104}}]},{"kind":"Function","id":{"krate":0,"index":296},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126456,"byte_end":126464,"line_start":99,"line_end":99,"column_start":8,"column_end":16},"name":"mq_close","qualname":"::mqueue::mq_close","value":"pub fn mq_close(mqd_t) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Close a message queue","sig":null,"attributes":[{"value":"/ Close a message queue","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126317,"byte_end":126342,"line_start":96,"line_end":96,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126343,"byte_end":126346,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ See also [`mq_close(2)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mq_close.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126347,"byte_end":126448,"line_start":98,"line_end":98,"column_start":1,"column_end":102}}]},{"kind":"Function","id":{"krate":0,"index":297},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126739,"byte_end":126749,"line_start":107,"line_end":107,"column_start":8,"column_end":18},"name":"mq_receive","qualname":"::mqueue::mq_receive","value":"pub fn mq_receive(mqd_t, &mut [u8], &mut u32) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receive a message from a message queue","sig":null,"attributes":[{"value":"/ Receive a message from a message queue","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126579,"byte_end":126621,"line_start":104,"line_end":104,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126622,"byte_end":126625,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ See also [`mq_receive(2)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mq_receive.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":126626,"byte_end":126731,"line_start":106,"line_end":106,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":299},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":127258,"byte_end":127265,"line_start":121,"line_end":121,"column_start":8,"column_end":15},"name":"mq_send","qualname":"::mqueue::mq_send","value":"pub fn mq_send(mqd_t, &[u8], u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a message to a message queue","sig":null,"attributes":[{"value":"/ Send a message to a message queue","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":127109,"byte_end":127146,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":127147,"byte_end":127150,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ See also [`mq_send(2)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mq_send.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":127151,"byte_end":127250,"line_start":120,"line_end":120,"column_start":1,"column_end":100}}]},{"kind":"Function","id":{"krate":0,"index":300},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":127698,"byte_end":127708,"line_start":134,"line_end":134,"column_start":8,"column_end":18},"name":"mq_getattr","qualname":"::mqueue::mq_getattr","value":"pub fn mq_getattr(mqd_t) -> Result<MqAttr>","parent":null,"children":[],"decl_id":null,"docs":" Get message queue attributes","sig":null,"attributes":[{"value":"/ Get message queue attributes","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":127548,"byte_end":127580,"line_start":131,"line_end":131,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":127581,"byte_end":127584,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ See also [`mq_getattr(2)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mq_getattr.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":127585,"byte_end":127690,"line_start":133,"line_end":133,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":302},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":128301,"byte_end":128311,"line_start":145,"line_end":145,"column_start":8,"column_end":18},"name":"mq_setattr","qualname":"::mqueue::mq_setattr","value":"pub fn mq_setattr(mqd_t, &MqAttr) -> Result<MqAttr>","parent":null,"children":[],"decl_id":null,"docs":" Set the attributes of the message queue. Only `O_NONBLOCK` can be set, everything else will be ignored\n Returns the old attributes\n It is recommend to use the `mq_set_nonblock()` and `mq_remove_nonblock()` convenience functions as they are easier to use","sig":null,"attributes":[{"value":"/ Set the attributes of the message queue. Only `O_NONBLOCK` can be set, everything else will be ignored","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":127929,"byte_end":128035,"line_start":140,"line_end":140,"column_start":1,"column_end":107}},{"value":"/ Returns the old attributes","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":128036,"byte_end":128066,"line_start":141,"line_end":141,"column_start":1,"column_end":31}},{"value":"/ It is recommend to use the `mq_set_nonblock()` and `mq_remove_nonblock()` convenience functions as they are easier to use","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":128067,"byte_end":128192,"line_start":142,"line_end":142,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":128193,"byte_end":128196,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mq_setattr.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":128197,"byte_end":128293,"line_start":144,"line_end":144,"column_start":1,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":304},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":128729,"byte_end":128744,"line_start":154,"line_end":154,"column_start":8,"column_end":23},"name":"mq_set_nonblock","qualname":"::mqueue::mq_set_nonblock","value":"pub fn mq_set_nonblock(mqd_t) -> Result<MqAttr>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function.\n Sets the `O_NONBLOCK` attribute for a given message queue descriptor\n Returns the old attributes\n","sig":null,"attributes":[{"value":"/ Convenience function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":128592,"byte_end":128617,"line_start":151,"line_end":151,"column_start":1,"column_end":26}},{"value":"/ Sets the `O_NONBLOCK` attribute for a given message queue descriptor","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":128618,"byte_end":128690,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"/ Returns the old attributes","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":128691,"byte_end":128721,"line_start":153,"line_end":153,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":305},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":129227,"byte_end":129245,"line_start":166,"line_end":166,"column_start":8,"column_end":26},"name":"mq_remove_nonblock","qualname":"::mqueue::mq_remove_nonblock","value":"pub fn mq_remove_nonblock(mqd_t) -> Result<MqAttr>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function.\n Removes `O_NONBLOCK` attribute for a given message queue descriptor\n Returns the old attributes\n","sig":null,"attributes":[{"value":"/ Convenience function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":129091,"byte_end":129116,"line_start":163,"line_end":163,"column_start":1,"column_end":26}},{"value":"/ Removes `O_NONBLOCK` attribute for a given message queue descriptor","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":129117,"byte_end":129188,"line_start":164,"line_end":164,"column_start":1,"column_end":72}},{"value":"/ Returns the old attributes","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":129189,"byte_end":129219,"line_start":165,"line_end":165,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":306},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":307}],"decl_id":null,"docs":" Functionality involving network interfaces\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1537,"byte_end":1558,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/ Functionality involving network interfaces","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/mod.rs","byte_start":129556,"byte_end":129602,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":307},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"if_","qualname":"::net::if_","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":3923},{"krate":0,"index":3945},{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3936},{"krate":0,"index":3930},{"krate":0,"index":3928},{"krate":0,"index":3925},{"krate":0,"index":3946},{"krate":0,"index":4015},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4023},{"krate":0,"index":4051},{"krate":0,"index":4054},{"krate":0,"index":4056},{"krate":0,"index":4059},{"krate":0,"index":4061},{"krate":0,"index":4064},{"krate":0,"index":4066},{"krate":0,"index":4069},{"krate":0,"index":4071},{"krate":0,"index":4074},{"krate":0,"index":4077}],"decl_id":null,"docs":" Network interface name resolution.","sig":null,"attributes":[{"value":"/ Network interface name resolution.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":129739,"byte_end":129777,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":129778,"byte_end":129781,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Uses Linux and/or POSIX functions to resolve interface names like \"eth0\"","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":129782,"byte_end":129858,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ or \"socan1\" into device numbers.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":129859,"byte_end":129895,"line_start":4,"line_end":4,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":314},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":130013,"byte_end":130027,"line_start":11,"line_end":11,"column_start":8,"column_end":22},"name":"if_nametoindex","qualname":"::net::if_::if_nametoindex","value":"pub fn if_nametoindex<P: ?Sized + NixPath>(&P) -> Result<c_uint>","parent":null,"children":[],"decl_id":null,"docs":" Resolve an interface into a interface number.\n","sig":null,"attributes":[{"value":"/ Resolve an interface into a interface number.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":129956,"byte_end":130005,"line_start":10,"line_end":10,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3923},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":130354,"byte_end":130368,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"name":"InterfaceFlags","qualname":"::net::if_::InterfaceFlags","value":"InterfaceFlags {  }","parent":null,"children":[{"krate":0,"index":3924}],"decl_id":null,"docs":" Standard interface flags, used by `getifaddrs`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4024},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":130516,"byte_end":130522,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"IFF_UP","qualname":"::net::if_::InterfaceFlags::IFF_UP","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Interface is running. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4025},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":130663,"byte_end":130676,"line_start":29,"line_end":29,"column_start":9,"column_end":22},"name":"IFF_BROADCAST","qualname":"::net::if_::InterfaceFlags::IFF_BROADCAST","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Valid broadcast address set. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4026},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":130813,"byte_end":130822,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"name":"IFF_DEBUG","qualname":"::net::if_::InterfaceFlags::IFF_DEBUG","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Internal debugging flag. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4027},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":130969,"byte_end":130981,"line_start":35,"line_end":35,"column_start":9,"column_end":21},"name":"IFF_LOOPBACK","qualname":"::net::if_::InterfaceFlags::IFF_LOOPBACK","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Interface is a loopback interface. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4028},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":131129,"byte_end":131144,"line_start":38,"line_end":38,"column_start":9,"column_end":24},"name":"IFF_POINTOPOINT","qualname":"::net::if_::InterfaceFlags::IFF_POINTOPOINT","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Interface is a point-to-point link. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4029},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":131559,"byte_end":131573,"line_start":48,"line_end":48,"column_start":9,"column_end":23},"name":"IFF_NOTRAILERS","qualname":"::net::if_::InterfaceFlags::IFF_NOTRAILERS","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Avoid use of trailers. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"solaris\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4030},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":132217,"byte_end":132228,"line_start":64,"line_end":64,"column_start":9,"column_end":20},"name":"IFF_RUNNING","qualname":"::net::if_::InterfaceFlags::IFF_RUNNING","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Resources allocated. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"fuchsia\", target_os = \"ios\", target_os =\n          \"linux\", target_os = \"macos\", target_os = \"netbsd\", target_os =\n          \"openbsd\", target_os = \"solaris\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4031},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":132389,"byte_end":132398,"line_start":67,"line_end":67,"column_start":9,"column_end":18},"name":"IFF_NOARP","qualname":"::net::if_::InterfaceFlags::IFF_NOARP","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" No arp protocol, L2 destination address not set. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4032},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":132544,"byte_end":132555,"line_start":70,"line_end":70,"column_start":9,"column_end":20},"name":"IFF_PROMISC","qualname":"::net::if_::InterfaceFlags::IFF_PROMISC","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Interface is in promiscuous mode. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4033},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":132698,"byte_end":132710,"line_start":73,"line_end":73,"column_start":9,"column_end":21},"name":"IFF_ALLMULTI","qualname":"::net::if_::InterfaceFlags::IFF_ALLMULTI","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Receive all multicast packets. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4034},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":132944,"byte_end":132954,"line_start":77,"line_end":77,"column_start":9,"column_end":19},"name":"IFF_MASTER","qualname":"::net::if_::InterfaceFlags::IFF_MASTER","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Master of a load balancing bundle. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4035},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":133571,"byte_end":133580,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"name":"IFF_SLAVE","qualname":"::net::if_::InterfaceFlags::IFF_SLAVE","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Slave of a load balancing bundle. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4036},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":134018,"byte_end":134031,"line_start":102,"line_end":102,"column_start":9,"column_end":22},"name":"IFF_MULTICAST","qualname":"::net::if_::InterfaceFlags::IFF_MULTICAST","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Supports multicast. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4037},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":134679,"byte_end":134690,"line_start":117,"line_end":117,"column_start":9,"column_end":20},"name":"IFF_PORTSEL","qualname":"::net::if_::InterfaceFlags::IFF_PORTSEL","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Is able to select media type via ifmap. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4038},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":135319,"byte_end":135332,"line_start":132,"line_end":132,"column_start":9,"column_end":22},"name":"IFF_AUTOMEDIA","qualname":"::net::if_::InterfaceFlags::IFF_AUTOMEDIA","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Auto media selection active. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4039},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":136222,"byte_end":136233,"line_start":153,"line_end":153,"column_start":9,"column_end":20},"name":"IFF_DYNAMIC","qualname":"::net::if_::InterfaceFlags::IFF_DYNAMIC","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" The addresses are lost when the interface goes down. (see\n [`netdevice(7)`](http://man7.org/linux/man-pages/man7/netdevice.7.html))\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4040},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":136445,"byte_end":136457,"line_start":159,"line_end":159,"column_start":9,"column_end":21},"name":"IFF_LOWER_UP","qualname":"::net::if_::InterfaceFlags::IFF_LOWER_UP","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Driver signals L1 up. Volatile.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4041},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":136902,"byte_end":136913,"line_start":171,"line_end":171,"column_start":9,"column_end":20},"name":"IFF_DORMANT","qualname":"::net::if_::InterfaceFlags::IFF_DORMANT","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Driver signals dormant. Volatile.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4042},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":137256,"byte_end":137264,"line_start":180,"line_end":180,"column_start":9,"column_end":17},"name":"IFF_ECHO","qualname":"::net::if_::InterfaceFlags::IFF_ECHO","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Echo sent packets. Volatile.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4043},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":138675,"byte_end":138684,"line_start":219,"line_end":219,"column_start":9,"column_end":18},"name":"IFF_NO_PI","qualname":"::net::if_::InterfaceFlags::IFF_NO_PI","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Do not provide packet information\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4044},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":138842,"byte_end":138849,"line_start":222,"line_end":222,"column_start":9,"column_end":16},"name":"IFF_TUN","qualname":"::net::if_::InterfaceFlags::IFF_TUN","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" TUN device (no Ethernet headers) \n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4045},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/if_.rs","byte_start":138984,"byte_end":138991,"line_start":225,"line_end":225,"column_start":9,"column_end":16},"name":"IFF_TAP","qualname":"::net::if_::InterfaceFlags::IFF_TAP","value":"InterfaceFlags","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" TAP device\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":317},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"poll","qualname":"::poll","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":4200},{"krate":0,"index":4203},{"krate":0,"index":4202},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":4205},{"krate":0,"index":4227},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4218},{"krate":0,"index":4212},{"krate":0,"index":4210},{"krate":0,"index":4207},{"krate":0,"index":4228},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":4246},{"krate":0,"index":4248},{"krate":0,"index":4250},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4271},{"krate":0,"index":4274},{"krate":0,"index":4276},{"krate":0,"index":4279},{"krate":0,"index":4281},{"krate":0,"index":4284},{"krate":0,"index":4286},{"krate":0,"index":4289},{"krate":0,"index":4292},{"krate":0,"index":330},{"krate":0,"index":331}],"decl_id":null,"docs":" Wait for events to trigger on specific file descriptors\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1572,"byte_end":1593,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/ Wait for events to trigger on specific file descriptors","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":140347,"byte_end":140406,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4200},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141176,"byte_end":141182,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"name":"PollFd","qualname":"::poll::PollFd","value":"PollFd {  }","parent":null,"children":[{"krate":0,"index":4201}],"decl_id":null,"docs":" This is a wrapper around `libc::pollfd`.","sig":null,"attributes":[{"value":"/ This is a wrapper around `libc::pollfd`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":140751,"byte_end":140795,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":140796,"byte_end":140799,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It's meant to be used as an argument to the [`poll`](fn.poll.html) and","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":140800,"byte_end":140874,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ [`ppoll`](fn.ppoll.html) functions to specify the events of interest","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":140875,"byte_end":140947,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ for a specific file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":140948,"byte_end":140983,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":140984,"byte_end":140987,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ After a call to `poll` or `ppoll`, the events that occured can be","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":140988,"byte_end":141057,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ retrieved by calling [`revents()`](#method.revents) on the `PollFd`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141058,"byte_end":141130,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141131,"byte_end":141141,"line_start":21,"line_end":21,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141341,"byte_end":141344,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<PollFd>::new","value":"pub fn new(RawFd, EventFlags) -> PollFd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollFd` specifying the events of interest\n for a given file descriptor.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollFd` specifying the events of interest","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141232,"byte_end":141292,"line_start":28,"line_end":28,"column_start":5,"column_end":65}},{"value":"/ for a given file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141297,"byte_end":141329,"line_start":29,"line_end":29,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141678,"byte_end":141685,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"revents","qualname":"<PollFd>::revents","value":"pub fn revents(&Self) -> Option<EventFlags>","parent":null,"children":[],"decl_id":null,"docs":" Returns the events that occured in the last call to `poll` or `ppoll`.\n","sig":null,"attributes":[{"value":"/ Returns the events that occured in the last call to `poll` or `ppoll`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141592,"byte_end":141666,"line_start":40,"line_end":40,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":4205},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":142459,"byte_end":142469,"line_start":65,"line_end":65,"column_start":16,"column_end":26},"name":"EventFlags","qualname":"::poll::EventFlags","value":"EventFlags {  }","parent":null,"children":[{"krate":0,"index":4206}],"decl_id":null,"docs":" These flags define the different events that can be monitored by `poll` and `ppoll`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4251},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":142530,"byte_end":142536,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"POLLIN","qualname":"::poll::EventFlags::POLLIN","value":"EventFlags","parent":{"krate":0,"index":4250},"children":[],"decl_id":null,"docs":" There is data to read.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4252},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":143154,"byte_end":143161,"line_start":79,"line_end":79,"column_start":9,"column_end":16},"name":"POLLPRI","qualname":"::poll::EventFlags::POLLPRI","value":"EventFlags","parent":{"krate":0,"index":4250},"children":[],"decl_id":null,"docs":" There is some exceptional condition on the file descriptor.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4253},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":143346,"byte_end":143353,"line_start":83,"line_end":83,"column_start":9,"column_end":16},"name":"POLLOUT","qualname":"::poll::EventFlags::POLLOUT","value":"EventFlags","parent":{"krate":0,"index":4250},"children":[],"decl_id":null,"docs":" Writing is now possible, though a write larger that the\n available space in a socket or pipe will still block (unless\n `O_NONBLOCK` is set).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4254},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":143422,"byte_end":143432,"line_start":85,"line_end":85,"column_start":9,"column_end":19},"name":"POLLRDNORM","qualname":"::poll::EventFlags::POLLRDNORM","value":"EventFlags","parent":{"krate":0,"index":4250},"children":[],"decl_id":null,"docs":" Equivalent to [`POLLIN`](constant.POLLIN.html)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4255},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":143503,"byte_end":143513,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"name":"POLLWRNORM","qualname":"::poll::EventFlags::POLLWRNORM","value":"EventFlags","parent":{"krate":0,"index":4250},"children":[],"decl_id":null,"docs":" Equivalent to [`POLLOUT`](constant.POLLOUT.html)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4256},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":143595,"byte_end":143605,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"name":"POLLRDBAND","qualname":"::poll::EventFlags::POLLRDBAND","value":"EventFlags","parent":{"krate":0,"index":4250},"children":[],"decl_id":null,"docs":" Priority band data can be read (generally unused on Linux).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4257},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":143657,"byte_end":143667,"line_start":91,"line_end":91,"column_start":9,"column_end":19},"name":"POLLWRBAND","qualname":"::poll::EventFlags::POLLWRBAND","value":"EventFlags","parent":{"krate":0,"index":4250},"children":[],"decl_id":null,"docs":" Priority data may be written.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4258},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":144002,"byte_end":144009,"line_start":97,"line_end":97,"column_start":9,"column_end":16},"name":"POLLERR","qualname":"::poll::EventFlags::POLLERR","value":"EventFlags","parent":{"krate":0,"index":4250},"children":[],"decl_id":null,"docs":" Error condition (only returned in\n [`PollFd::revents`](struct.PollFd.html#method.revents);\n ignored in [`PollFd::new`](struct.PollFd.html#method.new)).\n This bit is also set for a file descriptor referring to the\n write end of a pipe when the read end has been closed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4259},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":144520,"byte_end":144527,"line_start":105,"line_end":105,"column_start":9,"column_end":16},"name":"POLLHUP","qualname":"::poll::EventFlags::POLLHUP","value":"EventFlags","parent":{"krate":0,"index":4250},"children":[],"decl_id":null,"docs":" Hang up (only returned in [`PollFd::revents`](struct.PollFd.html#method.revents);\n ignored in [`PollFd::new`](struct.PollFd.html#method.new)).\n Note that when reading from a channel such as a pipe or a stream\n socket, this event merely indicates that the peer closed its\n end of the channel.  Subsequent reads from the channel will\n return 0 (end of file) only after all outstanding data in the\n channel has been consumed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4260},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":144738,"byte_end":144746,"line_start":109,"line_end":109,"column_start":9,"column_end":17},"name":"POLLNVAL","qualname":"::poll::EventFlags::POLLNVAL","value":"EventFlags","parent":{"krate":0,"index":4250},"children":[],"decl_id":null,"docs":" Invalid request: `fd` not open (only returned in\n [`PollFd::revents`](struct.PollFd.html#method.revents);\n ignored in [`PollFd::new`](struct.PollFd.html#method.new)).\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":330},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145778,"byte_end":145782,"line_start":133,"line_end":133,"column_start":8,"column_end":12},"name":"poll","qualname":"::poll::poll","value":"pub fn poll(&mut [PollFd], libc::c_int) -> Result<libc::c_int>","parent":null,"children":[],"decl_id":null,"docs":" `poll` waits for one of a set of file descriptors to become ready to perform I/O.\n ([`poll(2)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/poll.html))","sig":null,"attributes":[{"value":"/ `poll` waits for one of a set of file descriptors to become ready to perform I/O.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":144757,"byte_end":144842,"line_start":113,"line_end":113,"column_start":1,"column_end":86}},{"value":"/ ([`poll(2)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/poll.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":144843,"byte_end":144929,"line_start":114,"line_end":114,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":144930,"byte_end":144933,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ `fds` contains all [`PollFd`](struct.PollFd.html) to poll.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":144934,"byte_end":144996,"line_start":116,"line_end":116,"column_start":1,"column_end":63}},{"value":"/ The function will return as soon as any event occur for any of these `PollFd`s.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":144997,"byte_end":145080,"line_start":117,"line_end":117,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145081,"byte_end":145084,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ The `timeout` argument specifies the number of milliseconds that `poll()`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145085,"byte_end":145162,"line_start":119,"line_end":119,"column_start":1,"column_end":78}},{"value":"/ should block waiting for a file descriptor to become ready.  The call","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145163,"byte_end":145236,"line_start":120,"line_end":120,"column_start":1,"column_end":74}},{"value":"/ will block until either:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145237,"byte_end":145265,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145266,"byte_end":145269,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ *  a file descriptor becomes ready;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145270,"byte_end":145309,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/ *  the call is interrupted by a signal handler; or","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145310,"byte_end":145364,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/ *  the timeout expires.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145365,"byte_end":145392,"line_start":125,"line_end":125,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145393,"byte_end":145396,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Note that the timeout interval will be rounded up to the system clock","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145397,"byte_end":145470,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ granularity, and kernel scheduling delays mean that the blocking","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145471,"byte_end":145539,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"/ interval may overrun by a small amount.  Specifying a negative value","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145540,"byte_end":145612,"line_start":129,"line_end":129,"column_start":1,"column_end":73}},{"value":"/ in timeout means an infinite timeout.  Specifying a timeout of zero","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145613,"byte_end":145684,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/ causes `poll()` to return immediately, even if no file descriptors are","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145685,"byte_end":145759,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ ready.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":145760,"byte_end":145770,"line_start":132,"line_end":132,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":331},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":146471,"byte_end":146476,"line_start":151,"line_end":151,"column_start":8,"column_end":13},"name":"ppoll","qualname":"::poll::ppoll","value":"pub fn ppoll(&mut [PollFd], TimeSpec, SigSet) -> Result<libc::c_int>","parent":null,"children":[],"decl_id":null,"docs":" `ppoll()` allows an application to safely wait until either a file\n descriptor becomes ready or until a signal is caught.\n ([`poll(2)`](http://man7.org/linux/man-pages/man2/poll.2.html))","sig":null,"attributes":[{"value":"/ `ppoll()` allows an application to safely wait until either a file","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":146039,"byte_end":146109,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ descriptor becomes ready or until a signal is caught.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":146110,"byte_end":146167,"line_start":144,"line_end":144,"column_start":1,"column_end":58}},{"value":"/ ([`poll(2)`](http://man7.org/linux/man-pages/man2/poll.2.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":146168,"byte_end":146235,"line_start":145,"line_end":145,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":146236,"byte_end":146239,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ `ppoll` behaves like `poll`, but let you specify what signals may interrupt it","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":146240,"byte_end":146322,"line_start":147,"line_end":147,"column_start":1,"column_end":83}},{"value":"/ with the `sigmask` argument.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":146323,"byte_end":146355,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":146356,"byte_end":146359,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":146360,"byte_end":146463,"line_start":150,"line_end":150,"column_start":1,"column_end":104}}]},{"kind":"Mod","id":{"krate":0,"index":332},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pty","qualname":"::pty","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":4336},{"krate":0,"index":4340},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":357}],"decl_id":null,"docs":" Create master and slave virtual pseudo-terminals (PTYs)\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1608,"byte_end":1629,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/ Create master and slave virtual pseudo-terminals (PTYs)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":146798,"byte_end":146857,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4336},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147346,"byte_end":147359,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"OpenptyResult","qualname":"::pty::OpenptyResult","value":"OpenptyResult { master, slave }","parent":null,"children":[{"krate":0,"index":4337},{"krate":0,"index":4338}],"decl_id":null,"docs":" Representation of a master/slave pty pair","sig":null,"attributes":[{"value":"/ Representation of a master/slave pty pair","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147079,"byte_end":147124,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147125,"byte_end":147128,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is returned by `openpty`.  Note that this type does *not* implement `Drop`, so the user","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147129,"byte_end":147225,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ must manually close the file descriptors.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147226,"byte_end":147271,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147295,"byte_end":147334,"line_start":21,"line_end":21,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4337},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147416,"byte_end":147422,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"master","qualname":"::pty::OpenptyResult::master","value":"i32","parent":{"krate":0,"index":4336},"children":[],"decl_id":null,"docs":" The master port in a virtual pty pair\n","sig":null,"attributes":[{"value":"/ The master port in a virtual pty pair","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147366,"byte_end":147407,"line_start":23,"line_end":23,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":4338},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147484,"byte_end":147489,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"slave","qualname":"::pty::OpenptyResult::slave","value":"i32","parent":{"krate":0,"index":4336},"children":[],"decl_id":null,"docs":" The slave port in a virtual pty pair\n","sig":null,"attributes":[{"value":"/ The slave port in a virtual pty pair","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147435,"byte_end":147475,"line_start":25,"line_end":25,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":4342},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147873,"byte_end":147882,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"PtyMaster","qualname":"::pty::PtyMaster","value":"","parent":null,"children":[],"decl_id":null,"docs":" Representation of the Master device in a master/slave pty pair","sig":null,"attributes":[{"value":"/ Representation of the Master device in a master/slave pty pair","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147502,"byte_end":147568,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147569,"byte_end":147572,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ While this datatype is a thin wrapper around `RawFd`, it enforces that the available PTY","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147573,"byte_end":147665,"line_start":32,"line_end":32,"column_start":1,"column_end":93}},{"value":"/ functions are given the correct file descriptor. Additionally this type implements `Drop`,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147666,"byte_end":147760,"line_start":33,"line_end":33,"column_start":1,"column_end":95}},{"value":"/ so that when it's consumed or goes out of scope, it's automatically cleaned-up.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147761,"byte_end":147844,"line_start":34,"line_end":34,"column_start":1,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149181,"byte_end":149188,"line_start":74,"line_end":74,"column_start":8,"column_end":15},"name":"grantpt","qualname":"::pty::grantpt","value":"pub fn grantpt(&PtyMaster) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Grant access to a slave pseudoterminal (see\n [`grantpt(3)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/grantpt.html))","sig":null,"attributes":[{"value":"/ Grant access to a slave pseudoterminal (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":148822,"byte_end":148869,"line_start":68,"line_end":68,"column_start":1,"column_end":48}},{"value":"/ [`grantpt(3)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/grantpt.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":148870,"byte_end":148961,"line_start":69,"line_end":69,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":148962,"byte_end":148965,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ `grantpt()` changes the mode and owner of the slave pseudoterminal device corresponding to the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":148966,"byte_end":149064,"line_start":71,"line_end":71,"column_start":1,"column_end":99}},{"value":"/ master pseudoterminal referred to by `fd`. This is a necessary step towards opening the slave.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149065,"byte_end":149163,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149164,"byte_end":149173,"line_start":73,"line_end":73,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":352},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150375,"byte_end":150387,"line_start":116,"line_end":116,"column_start":8,"column_end":20},"name":"posix_openpt","qualname":"::pty::posix_openpt","value":"pub fn posix_openpt(fcntl::OFlag) -> Result<PtyMaster>","parent":null,"children":[],"decl_id":null,"docs":" Open a pseudoterminal device (see\n [`posix_openpt(3)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/posix_openpt.html))","sig":null,"attributes":[{"value":"/ Open a pseudoterminal device (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149331,"byte_end":149368,"line_start":82,"line_end":82,"column_start":1,"column_end":38}},{"value":"/ [`posix_openpt(3)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/posix_openpt.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149369,"byte_end":149470,"line_start":83,"line_end":83,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149471,"byte_end":149474,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ `posix_openpt()` returns a file descriptor to an existing unused pseuterminal master device.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149475,"byte_end":149571,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149572,"byte_end":149575,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149576,"byte_end":149590,"line_start":87,"line_end":87,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149591,"byte_end":149594,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ A common use case with this function is to open both a master and slave PTY pair. This can be","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149595,"byte_end":149692,"line_start":89,"line_end":89,"column_start":1,"column_end":98}},{"value":"/ done as follows:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149693,"byte_end":149713,"line_start":90,"line_end":90,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149714,"byte_end":149717,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149718,"byte_end":149725,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149726,"byte_end":149750,"line_start":93,"line_end":93,"column_start":1,"column_end":25}},{"value":"/ use nix::fcntl::{OFlag, open};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149751,"byte_end":149785,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/ use nix::pty::{grantpt, posix_openpt, ptsname, unlockpt};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149786,"byte_end":149847,"line_start":95,"line_end":95,"column_start":1,"column_end":62}},{"value":"/ use nix::sys::stat::Mode;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149848,"byte_end":149877,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149878,"byte_end":149881,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # #[allow(dead_code)]","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149882,"byte_end":149907,"line_start":98,"line_end":98,"column_start":1,"column_end":26}},{"value":"/ # fn run() -> nix::Result<()> {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149908,"byte_end":149943,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/ // Open a new PTY master","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149944,"byte_end":149972,"line_start":100,"line_end":100,"column_start":1,"column_end":29}},{"value":"/ let master_fd = posix_openpt(OFlag::O_RDWR)?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":149973,"byte_end":150022,"line_start":101,"line_end":101,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150023,"byte_end":150026,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ // Allow a slave to be generated for it","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150027,"byte_end":150070,"line_start":103,"line_end":103,"column_start":1,"column_end":44}},{"value":"/ grantpt(&master_fd)?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150071,"byte_end":150096,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/ unlockpt(&master_fd)?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150097,"byte_end":150123,"line_start":105,"line_end":105,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150124,"byte_end":150127,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ // Get the name of the slave","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150128,"byte_end":150160,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/ let slave_name = unsafe { ptsname(&master_fd) }?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150161,"byte_end":150214,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150215,"byte_end":150218,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ // Try to open the slave","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150219,"byte_end":150247,"line_start":110,"line_end":110,"column_start":1,"column_end":29}},{"value":"/ let _slave_fd = open(Path::new(&slave_name), OFlag::O_RDWR, Mode::empty())?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150248,"byte_end":150328,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ # Ok(())","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150329,"byte_end":150341,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150342,"byte_end":150349,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150350,"byte_end":150357,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150358,"byte_end":150367,"line_start":115,"line_end":115,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":353},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151279,"byte_end":151286,"line_start":145,"line_end":145,"column_start":15,"column_end":22},"name":"ptsname","qualname":"::pty::ptsname","value":"pub unsafe fn ptsname(&PtyMaster) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the slave pseudoterminal (see\n [`ptsname(3)`](http://man7.org/linux/man-pages/man3/ptsname.3.html))","sig":null,"attributes":[{"value":"/ Get the name of the slave pseudoterminal (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150586,"byte_end":150635,"line_start":128,"line_end":128,"column_start":1,"column_end":50}},{"value":"/ [`ptsname(3)`](http://man7.org/linux/man-pages/man3/ptsname.3.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150636,"byte_end":150708,"line_start":129,"line_end":129,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150709,"byte_end":150712,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ `ptsname()` returns the name of the slave pseudoterminal device corresponding to the master","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150713,"byte_end":150808,"line_start":131,"line_end":131,"column_start":1,"column_end":96}},{"value":"/ referred to by `fd`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150809,"byte_end":150833,"line_start":132,"line_end":132,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150834,"byte_end":150837,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This value is useful for opening the slave pty once the master has already been opened with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150838,"byte_end":150933,"line_start":134,"line_end":134,"column_start":1,"column_end":96}},{"value":"/ `posix_openpt()`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150934,"byte_end":150955,"line_start":135,"line_end":135,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150956,"byte_end":150959,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150960,"byte_end":150972,"line_start":137,"line_end":137,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150973,"byte_end":150976,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ `ptsname()` mutates global variables and is *not* threadsafe.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":150977,"byte_end":151042,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/ Mutating global variables is always considered `unsafe` by Rust and this","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151043,"byte_end":151119,"line_start":140,"line_end":140,"column_start":1,"column_end":77}},{"value":"/ function is marked as `unsafe` to reflect that.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151120,"byte_end":151171,"line_start":141,"line_end":141,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151172,"byte_end":151175,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ For a threadsafe and non-`unsafe` alternative on Linux, see `ptsname_r()`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151176,"byte_end":151254,"line_start":143,"line_end":143,"column_start":1,"column_end":79}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151255,"byte_end":151264,"line_start":144,"line_end":144,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":354},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":152112,"byte_end":152121,"line_start":166,"line_end":166,"column_start":8,"column_end":17},"name":"ptsname_r","qualname":"::pty::ptsname_r","value":"pub fn ptsname_r(&PtyMaster) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the slave pseudoterminal (see\n [`ptsname(3)`](http://man7.org/linux/man-pages/man3/ptsname.3.html))","sig":null,"attributes":[{"value":"/ Get the name of the slave pseudoterminal (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151531,"byte_end":151580,"line_start":155,"line_end":155,"column_start":1,"column_end":50}},{"value":"/ [`ptsname(3)`](http://man7.org/linux/man-pages/man3/ptsname.3.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151581,"byte_end":151653,"line_start":156,"line_end":156,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151654,"byte_end":151657,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ `ptsname_r()` returns the name of the slave pseudoterminal device corresponding to the master","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151658,"byte_end":151755,"line_start":158,"line_end":158,"column_start":1,"column_end":98}},{"value":"/ referred to by `fd`. This is the threadsafe version of `ptsname()`, but it is not part of the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151756,"byte_end":151853,"line_start":159,"line_end":159,"column_start":1,"column_end":98}},{"value":"/ POSIX standard and is instead a Linux-specific extension.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151854,"byte_end":151915,"line_start":160,"line_end":160,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151916,"byte_end":151919,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ This value is useful for opening the slave ptty once the master has already been opened with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":151920,"byte_end":152016,"line_start":162,"line_end":162,"column_start":1,"column_end":97}},{"value":"/ `posix_openpt()`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":152017,"byte_end":152038,"line_start":163,"line_end":163,"column_start":1,"column_end":22}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":152039,"byte_end":152094,"line_start":164,"line_end":164,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":152095,"byte_end":152104,"line_start":165,"line_end":165,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":356},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153100,"byte_end":153108,"line_start":189,"line_end":189,"column_start":8,"column_end":16},"name":"unlockpt","qualname":"::pty::unlockpt","value":"pub fn unlockpt(&PtyMaster) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Unlock a pseudoterminal master/slave pseudoterminal pair (see\n [`unlockpt(3)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/unlockpt.html))","sig":null,"attributes":[{"value":"/ Unlock a pseudoterminal master/slave pseudoterminal pair (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":152713,"byte_end":152778,"line_start":182,"line_end":182,"column_start":1,"column_end":66}},{"value":"/ [`unlockpt(3)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/unlockpt.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":152779,"byte_end":152872,"line_start":183,"line_end":183,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":152873,"byte_end":152876,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ `unlockpt()` unlocks the slave pseudoterminal device corresponding to the master pseudoterminal","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":152877,"byte_end":152976,"line_start":185,"line_end":185,"column_start":1,"column_end":100}},{"value":"/ referred to by `fd`. This must be called before trying to open the slave side of a","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":152977,"byte_end":153063,"line_start":186,"line_end":186,"column_start":1,"column_end":87}},{"value":"/ pseuoterminal.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153064,"byte_end":153082,"line_start":187,"line_end":187,"column_start":1,"column_end":19}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153083,"byte_end":153092,"line_start":188,"line_end":188,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":357},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153683,"byte_end":153690,"line_start":206,"line_end":206,"column_start":8,"column_end":15},"name":"openpty","qualname":"::pty::openpty","value":"pub fn openpty<'a, 'b, T: Into<Option<&'a Winsize>>,\n               U: Into<Option<&'b Termios>>>(T, U) -> Result<OpenptyResult>","parent":null,"children":[],"decl_id":null,"docs":" Create a new pseudoterminal, returning the slave and master file descriptors\n in `OpenptyResult`\n (see [`openpty`](http://man7.org/linux/man-pages/man3/openpty.3.html)).","sig":null,"attributes":[{"value":"/ Create a new pseudoterminal, returning the slave and master file descriptors","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153253,"byte_end":153333,"line_start":198,"line_end":198,"column_start":1,"column_end":81}},{"value":"/ in `OpenptyResult`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153334,"byte_end":153356,"line_start":199,"line_end":199,"column_start":1,"column_end":23}},{"value":"/ (see [`openpty`](http://man7.org/linux/man-pages/man3/openpty.3.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153357,"byte_end":153432,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153433,"byte_end":153436,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ If `winsize` is not `None`, the window size of the slave will be set to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153437,"byte_end":153512,"line_start":202,"line_end":202,"column_start":1,"column_end":76}},{"value":"/ the values in `winsize`. If `termios` is not `None`, the pseudoterminal's","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153513,"byte_end":153590,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/ terminal settings of the slave will be set to the values in `termios`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153591,"byte_end":153665,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":153666,"byte_end":153675,"line_start":205,"line_end":205,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":363},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sched","qualname":"::sched","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":4347},{"krate":0,"index":4369},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4360},{"krate":0,"index":4354},{"krate":0,"index":4352},{"krate":0,"index":4349},{"krate":0,"index":4370},{"krate":0,"index":4397},{"krate":0,"index":4399},{"krate":0,"index":4401},{"krate":0,"index":4403},{"krate":0,"index":4405},{"krate":0,"index":4434},{"krate":0,"index":4437},{"krate":0,"index":4439},{"krate":0,"index":4442},{"krate":0,"index":4444},{"krate":0,"index":4447},{"krate":0,"index":4449},{"krate":0,"index":4452},{"krate":0,"index":4454},{"krate":0,"index":4457},{"krate":0,"index":4460},{"krate":0,"index":376},{"krate":0,"index":4543},{"krate":0,"index":4546},{"krate":0,"index":4545},{"krate":0,"index":378},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":387}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1643,"byte_end":1708,"line_start":64,"line_end":65,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4347},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156088,"byte_end":156098,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"CloneFlags","qualname":"::sched::CloneFlags","value":"CloneFlags {  }","parent":null,"children":[{"krate":0,"index":4348}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4406},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156116,"byte_end":156124,"line_start":13,"line_end":13,"column_start":9,"column_end":17},"name":"CLONE_VM","qualname":"::sched::CloneFlags::CLONE_VM","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4407},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156134,"byte_end":156142,"line_start":14,"line_end":14,"column_start":9,"column_end":17},"name":"CLONE_FS","qualname":"::sched::CloneFlags::CLONE_FS","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4408},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156152,"byte_end":156163,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"name":"CLONE_FILES","qualname":"::sched::CloneFlags::CLONE_FILES","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4409},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156173,"byte_end":156186,"line_start":16,"line_end":16,"column_start":9,"column_end":22},"name":"CLONE_SIGHAND","qualname":"::sched::CloneFlags::CLONE_SIGHAND","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4410},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156196,"byte_end":156208,"line_start":17,"line_end":17,"column_start":9,"column_end":21},"name":"CLONE_PTRACE","qualname":"::sched::CloneFlags::CLONE_PTRACE","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4411},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156218,"byte_end":156229,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"name":"CLONE_VFORK","qualname":"::sched::CloneFlags::CLONE_VFORK","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4412},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156239,"byte_end":156251,"line_start":19,"line_end":19,"column_start":9,"column_end":21},"name":"CLONE_PARENT","qualname":"::sched::CloneFlags::CLONE_PARENT","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4413},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156261,"byte_end":156273,"line_start":20,"line_end":20,"column_start":9,"column_end":21},"name":"CLONE_THREAD","qualname":"::sched::CloneFlags::CLONE_THREAD","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4414},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156283,"byte_end":156294,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"name":"CLONE_NEWNS","qualname":"::sched::CloneFlags::CLONE_NEWNS","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4415},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156304,"byte_end":156317,"line_start":22,"line_end":22,"column_start":9,"column_end":22},"name":"CLONE_SYSVSEM","qualname":"::sched::CloneFlags::CLONE_SYSVSEM","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4416},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156327,"byte_end":156339,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"name":"CLONE_SETTLS","qualname":"::sched::CloneFlags::CLONE_SETTLS","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4417},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156349,"byte_end":156368,"line_start":24,"line_end":24,"column_start":9,"column_end":28},"name":"CLONE_PARENT_SETTID","qualname":"::sched::CloneFlags::CLONE_PARENT_SETTID","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4418},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156378,"byte_end":156398,"line_start":25,"line_end":25,"column_start":9,"column_end":29},"name":"CLONE_CHILD_CLEARTID","qualname":"::sched::CloneFlags::CLONE_CHILD_CLEARTID","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4419},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156408,"byte_end":156422,"line_start":26,"line_end":26,"column_start":9,"column_end":23},"name":"CLONE_DETACHED","qualname":"::sched::CloneFlags::CLONE_DETACHED","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4420},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156432,"byte_end":156446,"line_start":27,"line_end":27,"column_start":9,"column_end":23},"name":"CLONE_UNTRACED","qualname":"::sched::CloneFlags::CLONE_UNTRACED","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4421},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156456,"byte_end":156474,"line_start":28,"line_end":28,"column_start":9,"column_end":27},"name":"CLONE_CHILD_SETTID","qualname":"::sched::CloneFlags::CLONE_CHILD_SETTID","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4422},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156484,"byte_end":156499,"line_start":29,"line_end":29,"column_start":9,"column_end":24},"name":"CLONE_NEWCGROUP","qualname":"::sched::CloneFlags::CLONE_NEWCGROUP","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4423},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156509,"byte_end":156521,"line_start":30,"line_end":30,"column_start":9,"column_end":21},"name":"CLONE_NEWUTS","qualname":"::sched::CloneFlags::CLONE_NEWUTS","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4424},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156531,"byte_end":156543,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"name":"CLONE_NEWIPC","qualname":"::sched::CloneFlags::CLONE_NEWIPC","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4425},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156553,"byte_end":156566,"line_start":32,"line_end":32,"column_start":9,"column_end":22},"name":"CLONE_NEWUSER","qualname":"::sched::CloneFlags::CLONE_NEWUSER","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4426},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156576,"byte_end":156588,"line_start":33,"line_end":33,"column_start":9,"column_end":21},"name":"CLONE_NEWPID","qualname":"::sched::CloneFlags::CLONE_NEWPID","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4427},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156598,"byte_end":156610,"line_start":34,"line_end":34,"column_start":9,"column_end":21},"name":"CLONE_NEWNET","qualname":"::sched::CloneFlags::CLONE_NEWNET","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4428},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156620,"byte_end":156628,"line_start":35,"line_end":35,"column_start":9,"column_end":17},"name":"CLONE_IO","qualname":"::sched::CloneFlags::CLONE_IO","value":"CloneFlags","parent":{"krate":0,"index":4405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":376},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156648,"byte_end":156655,"line_start":39,"line_end":39,"column_start":10,"column_end":17},"name":"CloneCb","qualname":"::sched::CloneCb","value":"Box<FnMut() -> isize + 'a>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4543},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156776,"byte_end":156782,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"CpuSet","qualname":"::sched::CpuSet","value":"CpuSet {  }","parent":null,"children":[{"krate":0,"index":4544}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156691,"byte_end":156701,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156725,"byte_end":156764,"line_start":43,"line_end":43,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156843,"byte_end":156846,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<CpuSet>::new","value":"pub fn new() -> CpuSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156932,"byte_end":156938,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"is_set","qualname":"<CpuSet>::is_set","value":"pub fn is_set(&Self, usize) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":157191,"byte_end":157194,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"set","qualname":"<CpuSet>::set","value":"pub fn set(&mut Self, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":157451,"byte_end":157456,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"unset","qualname":"<CpuSet>::unset","value":"pub fn unset(&mut Self, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":383},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":157711,"byte_end":157728,"line_start":78,"line_end":78,"column_start":8,"column_end":25},"name":"sched_setaffinity","qualname":"::sched::sched_setaffinity","value":"pub fn sched_setaffinity(Pid, &CpuSet) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":384},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":158013,"byte_end":158018,"line_start":88,"line_end":88,"column_start":8,"column_end":13},"name":"clone","qualname":"::sched::clone","value":"pub fn clone(CloneCb, &mut [u8], CloneFlags, Option<c_int>) -> Result<Pid>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":386},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":158830,"byte_end":158837,"line_start":111,"line_end":111,"column_start":8,"column_end":15},"name":"unshare","qualname":"::sched::unshare","value":"pub fn unshare(CloneFlags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":387},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":158971,"byte_end":158976,"line_start":117,"line_end":117,"column_start":8,"column_end":13},"name":"setns","qualname":"::sched::setns","value":"pub fn setns(RawFd, CloneFlags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":388},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sys","qualname":"::sys","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":490},{"krate":0,"index":512},{"krate":0,"index":519},{"krate":0,"index":559},{"krate":0,"index":567},{"krate":0,"index":596},{"krate":0,"index":602},{"krate":0,"index":645},{"krate":0,"index":695},{"krate":0,"index":705},{"krate":0,"index":756},{"krate":0,"index":767},{"krate":0,"index":852},{"krate":0,"index":883},{"krate":0,"index":1313},{"krate":0,"index":1366},{"krate":0,"index":1378},{"krate":0,"index":1407},{"krate":0,"index":1428},{"krate":0,"index":1499},{"krate":0,"index":1619},{"krate":0,"index":1661},{"krate":0,"index":1677}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":389},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aio","qualname":"::sys::aio","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":10014},{"krate":0,"index":405},{"krate":0,"index":10016},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":4548},{"krate":0,"index":4571},{"krate":0,"index":4570},{"krate":0,"index":4568},{"krate":0,"index":4565},{"krate":0,"index":4566},{"krate":0,"index":4562},{"krate":0,"index":4560},{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4555},{"krate":0,"index":4573},{"krate":0,"index":4599},{"krate":0,"index":4598},{"krate":0,"index":4596},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4590},{"krate":0,"index":4588},{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4583},{"krate":0,"index":4601},{"krate":0,"index":4624},{"krate":0,"index":4623},{"krate":0,"index":4621},{"krate":0,"index":4618},{"krate":0,"index":4619},{"krate":0,"index":4615},{"krate":0,"index":4613},{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4608},{"krate":0,"index":4626},{"krate":0,"index":4642},{"krate":0,"index":4641},{"krate":0,"index":4639},{"krate":0,"index":4636},{"krate":0,"index":4637},{"krate":0,"index":413},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":435},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":477},{"krate":0,"index":484},{"krate":0,"index":487}],"decl_id":null,"docs":" POSIX Asynchronous I/O","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159118,"byte_end":159310,"line_start":1,"line_end":6,"column_start":1,"column_end":34}},{"value":"/ POSIX Asynchronous I/O","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":160959,"byte_end":160985,"line_start":2,"line_end":2,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":160986,"byte_end":160989,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The POSIX AIO interface is used for asynchronous I/O on files and disk-like","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":160990,"byte_end":161069,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ devices.  It supports [`read`](struct.AioCb.html#method.read),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161070,"byte_end":161136,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/ [`write`](struct.AioCb.html#method.write), and","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161137,"byte_end":161187,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/ [`fsync`](struct.AioCb.html#method.fsync) operations.  Completion","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161188,"byte_end":161257,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ notifications can optionally be delivered via","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161258,"byte_end":161307,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/ [signals](../signal/enum.SigevNotify.html#variant.SigevSignal), via the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161308,"byte_end":161383,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ [`aio_suspend`](fn.aio_suspend.html) function, or via polling.  Some","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161384,"byte_end":161456,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ platforms support other completion","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161457,"byte_end":161495,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ notifications, such as","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161496,"byte_end":161522,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/ [kevent](../signal/enum.SigevNotify.html#variant.SigevKevent).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161523,"byte_end":161589,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161590,"byte_end":161593,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Multiple operations may be submitted in a batch with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161594,"byte_end":161650,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/ [`lio_listio`](fn.lio_listio.html), though the standard does not guarantee","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161651,"byte_end":161729,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ that they will be executed atomically.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161730,"byte_end":161772,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161773,"byte_end":161776,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Outstanding operations may be cancelled with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161777,"byte_end":161825,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/ [`cancel`](struct.AioCb.html#method.cancel) or","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161826,"byte_end":161876,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`aio_cancel_all`](fn.aio_cancel_all.html), though the operating system may","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161877,"byte_end":161956,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ not support this for all filesystems and devices.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":161957,"byte_end":162010,"line_start":22,"line_end":22,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4549},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":162542,"byte_end":162548,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"name":"O_SYNC","qualname":"::sys::aio::AioFsyncMode::O_SYNC","value":"AioFsyncMode::O_SYNC","parent":{"krate":0,"index":4548},"children":[],"decl_id":null,"docs":" do it like `fsync`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4552},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":162828,"byte_end":162835,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"name":"O_DSYNC","qualname":"::sys::aio::AioFsyncMode::O_DSYNC","value":"AioFsyncMode::O_DSYNC","parent":{"krate":0,"index":4548},"children":[],"decl_id":null,"docs":" on supported operating systems only, do it like `fdatasync`\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":4548},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":162488,"byte_end":162500,"line_start":43,"line_end":43,"column_start":14,"column_end":26},"name":"AioFsyncMode","qualname":"::sys::aio::AioFsyncMode","value":"pub enum AioFsyncMode {\n\n    #[doc = r\" do it like `fsync`\"]\n    O_SYNC = ,\n\n    #[doc = r\" on supported operating systems only, do it like `fdatasync`\"]\n    #[cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n              target_os = \"netbsd\", target_os = \"openbsd\"))]\n    O_DSYNC = ,\n}","parent":null,"children":[{"krate":0,"index":4549},{"krate":0,"index":4552}],"decl_id":null,"docs":" Mode for `AioCb::fsync`.  Controls whether only data or both data and\n metadata are synced.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4574},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163130,"byte_end":163137,"line_start":62,"line_end":62,"column_start":9,"column_end":16},"name":"LIO_NOP","qualname":"::sys::aio::LioOpcode::LIO_NOP","value":"LioOpcode::LIO_NOP","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4577},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163147,"byte_end":163156,"line_start":63,"line_end":63,"column_start":9,"column_end":18},"name":"LIO_WRITE","qualname":"::sys::aio::LioOpcode::LIO_WRITE","value":"LioOpcode::LIO_WRITE","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4580},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163166,"byte_end":163174,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"LIO_READ","qualname":"::sys::aio::LioOpcode::LIO_READ","value":"LioOpcode::LIO_READ","parent":{"krate":0,"index":4573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4573},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163110,"byte_end":163119,"line_start":61,"line_end":61,"column_start":14,"column_end":23},"name":"LioOpcode","qualname":"::sys::aio::LioOpcode","value":"pub enum LioOpcode { LIO_NOP = , LIO_WRITE = , LIO_READ = , }","parent":null,"children":[{"krate":0,"index":4574},{"krate":0,"index":4577},{"krate":0,"index":4580}],"decl_id":null,"docs":" When used with [`lio_listio`](fn.lio_listio.html), determines whether a\n given `aiocb` should be used for a read operation, a write operation, or\n ignored.  Has no effect for any other aio functions.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4602},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163428,"byte_end":163436,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"name":"LIO_WAIT","qualname":"::sys::aio::LioMode::LIO_WAIT","value":"LioMode::LIO_WAIT","parent":{"krate":0,"index":4601},"children":[],"decl_id":null,"docs":" Requests that [`lio_listio`](fn.lio_listio.html) block until all\n requested operations have been completed\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4605},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163526,"byte_end":163536,"line_start":76,"line_end":76,"column_start":9,"column_end":19},"name":"LIO_NOWAIT","qualname":"::sys::aio::LioMode::LIO_NOWAIT","value":"LioMode::LIO_NOWAIT","parent":{"krate":0,"index":4601},"children":[],"decl_id":null,"docs":" Requests that [`lio_listio`](fn.lio_listio.html) return immediately\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4601},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163280,"byte_end":163287,"line_start":71,"line_end":71,"column_start":14,"column_end":21},"name":"LioMode","qualname":"::sys::aio::LioMode","value":"pub enum LioMode {\n\n    #[doc =\n      r\" Requests that [`lio_listio`](fn.lio_listio.html) block until all\"]\n    #[doc = r\" requested operations have been completed\"]\n    LIO_WAIT = ,\n\n    #[doc =\n      r\" Requests that [`lio_listio`](fn.lio_listio.html) return immediately\"]\n    LIO_NOWAIT = ,\n}","parent":null,"children":[{"krate":0,"index":4602},{"krate":0,"index":4605}],"decl_id":null,"docs":" Mode for [`lio_listio`](fn.lio_listio.html)\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4627},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163801,"byte_end":163812,"line_start":86,"line_end":86,"column_start":5,"column_end":16},"name":"AioCanceled","qualname":"::sys::aio::AioCancelStat::AioCanceled","value":"AioCancelStat::AioCanceled","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":" All outstanding requests were canceled\n","sig":null,"attributes":[{"value":"/ All outstanding requests were canceled","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163754,"byte_end":163796,"line_start":85,"line_end":85,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4630},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163940,"byte_end":163954,"line_start":89,"line_end":89,"column_start":5,"column_end":19},"name":"AioNotCanceled","qualname":"::sys::aio::AioCancelStat::AioNotCanceled","value":"AioCancelStat::AioNotCanceled","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":" Some requests were not canceled.  Their status should be checked with\n `AioCb::error`\n","sig":null,"attributes":[{"value":"/ Some requests were not canceled.  Their status should be checked with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163839,"byte_end":163912,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `AioCb::error`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163917,"byte_end":163935,"line_start":88,"line_end":88,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4633},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164034,"byte_end":164044,"line_start":91,"line_end":91,"column_start":5,"column_end":15},"name":"AioAllDone","qualname":"::sys::aio::AioCancelStat::AioAllDone","value":"AioCancelStat::AioAllDone","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":" All of the requests have already finished\n","sig":null,"attributes":[{"value":"/ All of the requests have already finished","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163984,"byte_end":164029,"line_start":90,"line_end":90,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":4626},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163734,"byte_end":163747,"line_start":84,"line_end":84,"column_start":10,"column_end":23},"name":"AioCancelStat","qualname":"::sys::aio::AioCancelStat","value":"pub enum AioCancelStat {\n\n    /// All outstanding requests were canceled\n    AioCanceled = ,\n\n    /// Some requests were not canceled.  Their status should be checked with\n    /// `AioCb::error`\n    AioNotCanceled = ,\n\n    /// All of the requests have already finished\n    AioAllDone = ,\n}","parent":null,"children":[{"krate":0,"index":4627},{"krate":0,"index":4630},{"krate":0,"index":4633}],"decl_id":null,"docs":" Return values for [`AioCb::cancel`](struct.AioCb.html#method.cancel) and\n [`aio_cancel_all`](fn.aio_cancel_all.html)\n","sig":null,"attributes":[{"value":"/ Return values for [`AioCb::cancel`](struct.AioCb.html#method.cancel) and","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163547,"byte_end":163623,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ [`aio_cancel_all`](fn.aio_cancel_all.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163624,"byte_end":163670,"line_start":81,"line_end":81,"column_start":1,"column_end":47}},{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":163671,"byte_end":163683,"line_start":82,"line_end":82,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":415},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164369,"byte_end":164373,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"None","qualname":"::sys::aio::Buffer::None","value":"Buffer::None","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" No buffer to own.","sig":null,"attributes":[{"value":"/ No buffer to own.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164209,"byte_end":164230,"line_start":97,"line_end":97,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164235,"byte_end":164238,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Used for operations like `aio_fsync` that have no data, or for unsafe","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164243,"byte_end":164316,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ operations that work with raw pointers.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164321,"byte_end":164364,"line_start":100,"line_end":100,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164416,"byte_end":164423,"line_start":103,"line_end":103,"column_start":5,"column_end":12},"name":"Phantom","qualname":"::sys::aio::Buffer::Phantom","value":"Buffer::Phantom(PhantomData<&'a mut [u8]>)","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Keeps a reference to a slice\n","sig":null,"attributes":[{"value":"/ Keeps a reference to a slice","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164379,"byte_end":164411,"line_start":102,"line_end":102,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":420},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164512,"byte_end":164522,"line_start":105,"line_end":105,"column_start":5,"column_end":15},"name":"BoxedSlice","qualname":"::sys::aio::Buffer::BoxedSlice","value":"Buffer::BoxedSlice(Box<Borrow<[u8]>>)","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Generic thing that keeps a buffer from dropping\n","sig":null,"attributes":[{"value":"/ Generic thing that keeps a buffer from dropping","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164456,"byte_end":164507,"line_start":104,"line_end":104,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":423},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164611,"byte_end":164624,"line_start":107,"line_end":107,"column_start":5,"column_end":18},"name":"BoxedMutSlice","qualname":"::sys::aio::Buffer::BoxedMutSlice","value":"Buffer::BoxedMutSlice(Box<BorrowMut<[u8]>>)","parent":{"krate":0,"index":413},"children":[],"decl_id":null,"docs":" Generic thing that keeps a mutable buffer from dropping\n","sig":null,"attributes":[{"value":"/ Generic thing that keeps a mutable buffer from dropping","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164547,"byte_end":164606,"line_start":106,"line_end":106,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":413},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164192,"byte_end":164198,"line_start":96,"line_end":96,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::sys::aio::Buffer","value":"pub enum Buffer<'a> {\n\n    /// No buffer to own.\n    ///\n    /// Used for operations like `aio_fsync` that have no data, or for unsafe\n    /// operations that work with raw pointers.\n    None,\n\n    /// Keeps a reference to a slice\n    Phantom(PhantomData<&'a mut [u8]>),\n\n    /// Generic thing that keeps a buffer from dropping\n    BoxedSlice(Box<Borrow<[u8]>>),\n\n    /// Generic thing that keeps a mutable buffer from dropping\n    BoxedMutSlice(Box<BorrowMut<[u8]>>),\n}","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423}],"decl_id":null,"docs":" Owns (uniquely or shared) a memory buffer to keep it from `Drop`ing while\n the kernel has a pointer to it.\n","sig":null,"attributes":[{"value":"/ Owns (uniquely or shared) a memory buffer to keep it from `Drop`ing while","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164069,"byte_end":164146,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ the kernel has a pointer to it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164147,"byte_end":164182,"line_start":95,"line_end":95,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":429},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":165619,"byte_end":165624,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"AioCb","qualname":"::sys::aio::AioCb","value":"AioCb {  }","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"decl_id":null,"docs":" AIO Control Block.","sig":null,"attributes":[{"value":"/ AIO Control Block.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":165484,"byte_end":165506,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":165507,"byte_end":165510,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The basic structure used by all aio functions.  Each `AioCb` represents one","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":165511,"byte_end":165590,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ I/O request.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":165591,"byte_end":165607,"line_start":135,"line_end":135,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166241,"byte_end":166247,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"buffer","qualname":"<AioCb>::buffer","value":"pub fn buffer(&mut Self) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Remove the inner `Buffer` and return it","sig":null,"attributes":[{"value":"/ Remove the inner `Buffer` and return it","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166087,"byte_end":166130,"line_start":150,"line_end":150,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166135,"byte_end":166138,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this method while the `AioCb` is still in","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166143,"byte_end":166211,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/ progress.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166216,"byte_end":166229,"line_start":153,"line_end":153,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166711,"byte_end":166722,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"boxed_slice","qualname":"<AioCb>::boxed_slice","value":"pub fn boxed_slice(&mut Self) -> Option<Box<Borrow<[u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Remove the inner boxed slice, if any, and return it.","sig":null,"attributes":[{"value":"/ Remove the inner boxed slice, if any, and return it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166411,"byte_end":166467,"line_start":161,"line_end":161,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166472,"byte_end":166475,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The returned value will be the argument that was passed to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166480,"byte_end":166542,"line_start":163,"line_end":163,"column_start":5,"column_end":67}},{"value":"/ `from_boxed_slice` when this `AioCb` was created.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166547,"byte_end":166600,"line_start":164,"line_end":164,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166605,"byte_end":166608,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this method while the `AioCb` is still in","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166613,"byte_end":166681,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ progress.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166686,"byte_end":166699,"line_start":167,"line_end":167,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":167581,"byte_end":167596,"line_start":190,"line_end":190,"column_start":12,"column_end":27},"name":"boxed_mut_slice","qualname":"<AioCb>::boxed_mut_slice","value":"pub fn boxed_mut_slice(&mut Self) -> Option<Box<BorrowMut<[u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Remove the inner boxed mutable slice, if any, and return it.","sig":null,"attributes":[{"value":"/ Remove the inner boxed mutable slice, if any, and return it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":167269,"byte_end":167333,"line_start":183,"line_end":183,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":167338,"byte_end":167341,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The returned value will be the argument that was passed to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":167346,"byte_end":167408,"line_start":185,"line_end":185,"column_start":5,"column_end":67}},{"value":"/ `from_boxed_mut_slice` when this `AioCb` was created.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":167413,"byte_end":167470,"line_start":186,"line_end":186,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":167475,"byte_end":167478,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this method while the `AioCb` is still in","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":167483,"byte_end":167551,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ progress.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":167556,"byte_end":167569,"line_start":189,"line_end":189,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168234,"byte_end":168236,"line_start":206,"line_end":206,"column_start":12,"column_end":14},"name":"fd","qualname":"<AioCb>::fd","value":"pub fn fd(&Self) -> RawFd","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying file descriptor associated with the `AioCb`\n","sig":null,"attributes":[{"value":"/ Returns the underlying file descriptor associated with the `AioCb`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168152,"byte_end":168222,"line_start":205,"line_end":205,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169796,"byte_end":169803,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"from_fd","qualname":"<AioCb>::from_fd","value":"pub fn from_fd(RawFd, libc::c_int, SigevNotify) -> AioCb","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `AioCb` with no associated buffer.","sig":null,"attributes":[{"value":"/ Constructs a new `AioCb` with no associated buffer.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168296,"byte_end":168351,"line_start":210,"line_end":210,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168356,"byte_end":168359,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The resulting `AioCb` structure is suitable for use with `AioCb::fsync`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168364,"byte_end":168440,"line_start":212,"line_end":212,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168445,"byte_end":168448,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168453,"byte_end":168469,"line_start":214,"line_end":214,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168474,"byte_end":168477,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `fd`:           File descriptor.  Required for all aio functions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168482,"byte_end":168553,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ * `prio`:         If POSIX Prioritized IO is supported, then the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168558,"byte_end":168626,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/                   operation will be prioritized at the process's","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168631,"byte_end":168699,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/                   priority level minus `prio`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168704,"byte_end":168754,"line_start":219,"line_end":219,"column_start":5,"column_end":55}},{"value":"/ * `sigev_notify`: Determines how you will be notified of event","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168759,"byte_end":168825,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"/                    completion.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168830,"byte_end":168864,"line_start":221,"line_end":221,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168869,"byte_end":168872,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168877,"byte_end":168891,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168896,"byte_end":168899,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Create an `AioCb` from a raw file descriptor and use it for an","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168904,"byte_end":168970,"line_start":225,"line_end":225,"column_start":5,"column_end":71}},{"value":"/ [`fsync`](#method.fsync) operation.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":168975,"byte_end":169014,"line_start":226,"line_end":226,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169019,"byte_end":169022,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169027,"byte_end":169034,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169039,"byte_end":169067,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169072,"byte_end":169095,"line_start":230,"line_end":230,"column_start":5,"column_end":28}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169100,"byte_end":169128,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ # use nix::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169133,"byte_end":169154,"line_start":232,"line_end":232,"column_start":5,"column_end":26}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169159,"byte_end":169186,"line_start":233,"line_end":233,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify::SigevNone;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169191,"byte_end":169242,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/ # use std::{thread, time};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169247,"byte_end":169277,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169282,"byte_end":169319,"line_start":236,"line_end":236,"column_start":5,"column_end":42}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169324,"byte_end":169353,"line_start":237,"line_end":237,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169358,"byte_end":169375,"line_start":238,"line_end":238,"column_start":5,"column_end":22}},{"value":"/ let f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169380,"byte_end":169412,"line_start":239,"line_end":239,"column_start":5,"column_end":37}},{"value":"/ let mut aiocb = AioCb::from_fd( f.as_raw_fd(), 0, SigevNone);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169417,"byte_end":169482,"line_start":240,"line_end":240,"column_start":5,"column_end":70}},{"value":"/ aiocb.fsync(AioFsyncMode::O_SYNC).expect(\"aio_fsync failed early\");","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169487,"byte_end":169558,"line_start":241,"line_end":241,"column_start":5,"column_end":76}},{"value":"/ while (aiocb.error() == Err(Error::from(Errno::EINPROGRESS))) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169563,"byte_end":169630,"line_start":242,"line_end":242,"column_start":5,"column_end":72}},{"value":"/     thread::sleep(time::Duration::from_millis(10));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169635,"byte_end":169690,"line_start":243,"line_end":243,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169695,"byte_end":169700,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ aiocb.aio_return().expect(\"aio_fsync failed late\");","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169705,"byte_end":169760,"line_start":245,"line_end":245,"column_start":5,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169765,"byte_end":169772,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":169777,"byte_end":169784,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172578,"byte_end":172592,"line_start":322,"line_end":322,"column_start":12,"column_end":26},"name":"from_mut_slice","qualname":"<AioCb>::from_mut_slice","value":"pub fn from_mut_slice(RawFd, off_t, &'a mut [u8], libc::c_int, SigevNotify,\n                      LioOpcode) -> AioCb","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `AioCb` from a mutable slice.","sig":null,"attributes":[{"value":"/ Constructs a new `AioCb` from a mutable slice.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170197,"byte_end":170247,"line_start":263,"line_end":263,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170252,"byte_end":170255,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The resulting `AioCb` will be suitable for both read and write","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170260,"byte_end":170326,"line_start":265,"line_end":265,"column_start":5,"column_end":71}},{"value":"/ operations, but only if the borrow checker can guarantee that the slice","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170331,"byte_end":170406,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ will outlive the `AioCb`.  That will usually be the case if the `AioCb`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170411,"byte_end":170486,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ is stack-allocated.  If the borrow checker gives you trouble, try using","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170491,"byte_end":170566,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ [`from_boxed_mut_slice`](#method.from_boxed_mut_slice) instead.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170571,"byte_end":170638,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170643,"byte_end":170646,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170651,"byte_end":170667,"line_start":271,"line_end":271,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170672,"byte_end":170675,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ * `fd`:           File descriptor.  Required for all aio functions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170680,"byte_end":170751,"line_start":273,"line_end":273,"column_start":5,"column_end":76}},{"value":"/ * `offs`:         File offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170756,"byte_end":170789,"line_start":274,"line_end":274,"column_start":5,"column_end":38}},{"value":"/ * `buf`:          A memory buffer","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170794,"byte_end":170831,"line_start":275,"line_end":275,"column_start":5,"column_end":42}},{"value":"/ * `prio`:         If POSIX Prioritized IO is supported, then the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170836,"byte_end":170904,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/                   operation will be prioritized at the process's","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170909,"byte_end":170977,"line_start":277,"line_end":277,"column_start":5,"column_end":73}},{"value":"/                   priority level minus `prio`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":170982,"byte_end":171031,"line_start":278,"line_end":278,"column_start":5,"column_end":54}},{"value":"/ * `sigev_notify`: Determines how you will be notified of event","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171036,"byte_end":171102,"line_start":279,"line_end":279,"column_start":5,"column_end":71}},{"value":"/                   completion.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171107,"byte_end":171140,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/ * `opcode`:       This field is only used for `lio_listio`.  It","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171145,"byte_end":171212,"line_start":281,"line_end":281,"column_start":5,"column_end":72}},{"value":"/                   determines which operation to use for this individual","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171217,"byte_end":171292,"line_start":282,"line_end":282,"column_start":5,"column_end":80}},{"value":"/                   aiocb","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171297,"byte_end":171324,"line_start":283,"line_end":283,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171329,"byte_end":171332,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171337,"byte_end":171351,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171356,"byte_end":171359,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Create an `AioCb` from a mutable slice and read into it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171364,"byte_end":171424,"line_start":287,"line_end":287,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171429,"byte_end":171432,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171437,"byte_end":171444,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171449,"byte_end":171477,"line_start":290,"line_end":290,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171482,"byte_end":171505,"line_start":291,"line_end":291,"column_start":5,"column_end":28}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171510,"byte_end":171538,"line_start":292,"line_end":292,"column_start":5,"column_end":33}},{"value":"/ # use nix::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171543,"byte_end":171564,"line_start":293,"line_end":293,"column_start":5,"column_end":26}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171569,"byte_end":171596,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171601,"byte_end":171641,"line_start":295,"line_end":295,"column_start":5,"column_end":45}},{"value":"/ # use std::{thread, time};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171646,"byte_end":171676,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171681,"byte_end":171706,"line_start":297,"line_end":297,"column_start":5,"column_end":30}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171711,"byte_end":171748,"line_start":298,"line_end":298,"column_start":5,"column_end":42}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171753,"byte_end":171782,"line_start":299,"line_end":299,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171787,"byte_end":171804,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"/ const INITIAL: &[u8] = b\"abcdef123456\";","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171809,"byte_end":171852,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ const LEN: usize = 4;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171857,"byte_end":171882,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"/ let mut rbuf = vec![0; LEN];","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171887,"byte_end":171919,"line_start":303,"line_end":303,"column_start":5,"column_end":37}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171924,"byte_end":171960,"line_start":304,"line_end":304,"column_start":5,"column_end":41}},{"value":"/ f.write_all(INITIAL).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":171965,"byte_end":171999,"line_start":305,"line_end":305,"column_start":5,"column_end":39}},{"value":"/ {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172004,"byte_end":172009,"line_start":306,"line_end":306,"column_start":5,"column_end":10}},{"value":"/     let mut aiocb = AioCb::from_mut_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172014,"byte_end":172075,"line_start":307,"line_end":307,"column_start":5,"column_end":66}},{"value":"/         2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172080,"byte_end":172105,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"/         &mut rbuf,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172110,"byte_end":172132,"line_start":309,"line_end":309,"column_start":5,"column_end":27}},{"value":"/         0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172137,"byte_end":172164,"line_start":310,"line_end":310,"column_start":5,"column_end":32}},{"value":"/         SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172169,"byte_end":172204,"line_start":311,"line_end":311,"column_start":5,"column_end":40}},{"value":"/         LioOpcode::LIO_NOP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172209,"byte_end":172241,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/     aiocb.read().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172246,"byte_end":172276,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/     while (aiocb.error() == Err(Error::from(Errno::EINPROGRESS))) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172281,"byte_end":172352,"line_start":314,"line_end":314,"column_start":5,"column_end":76}},{"value":"/         thread::sleep(time::Duration::from_millis(10));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172357,"byte_end":172416,"line_start":315,"line_end":315,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172421,"byte_end":172430,"line_start":316,"line_end":316,"column_start":5,"column_end":14}},{"value":"/     assert_eq!(aiocb.aio_return().unwrap() as usize, LEN);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172435,"byte_end":172497,"line_start":317,"line_end":317,"column_start":5,"column_end":67}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172502,"byte_end":172507,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(rbuf, b\"cdef\");","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172512,"byte_end":172542,"line_start":319,"line_end":319,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172547,"byte_end":172554,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":172559,"byte_end":172566,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":177294,"byte_end":177310,"line_start":451,"line_end":451,"column_start":12,"column_end":28},"name":"from_boxed_slice","qualname":"<AioCb>::from_boxed_slice","value":"pub fn from_boxed_slice(RawFd, off_t, Box<Borrow<[u8]>>, libc::c_int,\n                        SigevNotify, LioOpcode) -> AioCb","parent":null,"children":[],"decl_id":null,"docs":" The safest and most flexible way to create an `AioCb`.","sig":null,"attributes":[{"value":"/ The safest and most flexible way to create an `AioCb`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173173,"byte_end":173231,"line_start":339,"line_end":339,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173236,"byte_end":173239,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Unlike [`from_slice`], this method returns a structure suitable for","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173244,"byte_end":173315,"line_start":341,"line_end":341,"column_start":5,"column_end":76}},{"value":"/ placement on the heap.  It may be used for write operations, but not","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173320,"byte_end":173392,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ read operations.  Unlike `from_ptr`, this method will ensure that the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173397,"byte_end":173470,"line_start":343,"line_end":343,"column_start":5,"column_end":78}},{"value":"/ buffer doesn't `drop` while the kernel is still processing it.  Any","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173475,"byte_end":173546,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ object that can be borrowed as a boxed slice will work.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173551,"byte_end":173610,"line_start":345,"line_end":345,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173615,"byte_end":173618,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173623,"byte_end":173639,"line_start":347,"line_end":347,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173644,"byte_end":173647,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ * `fd`:           File descriptor.  Required for all aio functions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173652,"byte_end":173723,"line_start":349,"line_end":349,"column_start":5,"column_end":76}},{"value":"/ * `offs`:         File offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173728,"byte_end":173761,"line_start":350,"line_end":350,"column_start":5,"column_end":38}},{"value":"/ * `buf`:          A boxed slice-like object","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173766,"byte_end":173813,"line_start":351,"line_end":351,"column_start":5,"column_end":52}},{"value":"/ * `prio`:         If POSIX Prioritized IO is supported, then the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173818,"byte_end":173886,"line_start":352,"line_end":352,"column_start":5,"column_end":73}},{"value":"/                   operation will be prioritized at the process's","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173891,"byte_end":173959,"line_start":353,"line_end":353,"column_start":5,"column_end":73}},{"value":"/                   priority level minus `prio`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":173964,"byte_end":174013,"line_start":354,"line_end":354,"column_start":5,"column_end":54}},{"value":"/ * `sigev_notify`: Determines how you will be notified of event","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174018,"byte_end":174084,"line_start":355,"line_end":355,"column_start":5,"column_end":71}},{"value":"/                   completion.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174089,"byte_end":174122,"line_start":356,"line_end":356,"column_start":5,"column_end":38}},{"value":"/ * `opcode`:       This field is only used for `lio_listio`.  It","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174127,"byte_end":174194,"line_start":357,"line_end":357,"column_start":5,"column_end":72}},{"value":"/                   determines which operation to use for this individual","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174199,"byte_end":174274,"line_start":358,"line_end":358,"column_start":5,"column_end":80}},{"value":"/                   aiocb","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174279,"byte_end":174306,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174311,"byte_end":174314,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174319,"byte_end":174333,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174338,"byte_end":174341,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Create an `AioCb` from a Vector and use it for writing","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174346,"byte_end":174404,"line_start":363,"line_end":363,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174409,"byte_end":174412,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174417,"byte_end":174424,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174429,"byte_end":174457,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174462,"byte_end":174485,"line_start":367,"line_end":367,"column_start":5,"column_end":28}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174490,"byte_end":174518,"line_start":368,"line_end":368,"column_start":5,"column_end":33}},{"value":"/ # use nix::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174523,"byte_end":174544,"line_start":369,"line_end":369,"column_start":5,"column_end":26}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174549,"byte_end":174576,"line_start":370,"line_end":370,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174581,"byte_end":174621,"line_start":371,"line_end":371,"column_start":5,"column_end":45}},{"value":"/ # use std::{thread, time};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174626,"byte_end":174656,"line_start":372,"line_end":372,"column_start":5,"column_end":35}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174661,"byte_end":174686,"line_start":373,"line_end":373,"column_start":5,"column_end":30}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174691,"byte_end":174728,"line_start":374,"line_end":374,"column_start":5,"column_end":42}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174733,"byte_end":174762,"line_start":375,"line_end":375,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174767,"byte_end":174784,"line_start":376,"line_end":376,"column_start":5,"column_end":22}},{"value":"/ let wbuf = Box::new(Vec::from(\"CDEF\"));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174789,"byte_end":174832,"line_start":377,"line_end":377,"column_start":5,"column_end":48}},{"value":"/ let expected_len = wbuf.len();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174837,"byte_end":174871,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174876,"byte_end":174912,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ let mut aiocb = AioCb::from_boxed_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174917,"byte_end":174976,"line_start":380,"line_end":380,"column_start":5,"column_end":64}},{"value":"/     2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":174981,"byte_end":175002,"line_start":381,"line_end":381,"column_start":5,"column_end":26}},{"value":"/     wbuf,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175007,"byte_end":175020,"line_start":382,"line_end":382,"column_start":5,"column_end":18}},{"value":"/     0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175025,"byte_end":175048,"line_start":383,"line_end":383,"column_start":5,"column_end":28}},{"value":"/     SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175053,"byte_end":175084,"line_start":384,"line_end":384,"column_start":5,"column_end":36}},{"value":"/     LioOpcode::LIO_NOP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175089,"byte_end":175117,"line_start":385,"line_end":385,"column_start":5,"column_end":33}},{"value":"/ aiocb.write().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175122,"byte_end":175149,"line_start":386,"line_end":386,"column_start":5,"column_end":32}},{"value":"/ while (aiocb.error() == Err(Error::from(Errno::EINPROGRESS))) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175154,"byte_end":175221,"line_start":387,"line_end":387,"column_start":5,"column_end":72}},{"value":"/     thread::sleep(time::Duration::from_millis(10));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175226,"byte_end":175281,"line_start":388,"line_end":388,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175286,"byte_end":175291,"line_start":389,"line_end":389,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(aiocb.aio_return().unwrap() as usize, expected_len);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175296,"byte_end":175363,"line_start":390,"line_end":390,"column_start":5,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175368,"byte_end":175375,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175380,"byte_end":175387,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175392,"byte_end":175395,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Create an `AioCb` from a `Bytes` object","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175400,"byte_end":175443,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175448,"byte_end":175451,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175456,"byte_end":175463,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ # extern crate bytes;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175468,"byte_end":175493,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175498,"byte_end":175526,"line_start":398,"line_end":398,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175531,"byte_end":175554,"line_start":399,"line_end":399,"column_start":5,"column_end":28}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175559,"byte_end":175582,"line_start":400,"line_end":400,"column_start":5,"column_end":28}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175587,"byte_end":175614,"line_start":401,"line_end":401,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175619,"byte_end":175659,"line_start":402,"line_end":402,"column_start":5,"column_end":45}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175664,"byte_end":175701,"line_start":403,"line_end":403,"column_start":5,"column_end":42}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175706,"byte_end":175735,"line_start":404,"line_end":404,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175740,"byte_end":175757,"line_start":405,"line_end":405,"column_start":5,"column_end":22}},{"value":"/ let wbuf = Box::new(Bytes::from(&b\"CDEF\"[..]));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175762,"byte_end":175813,"line_start":406,"line_end":406,"column_start":5,"column_end":56}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175818,"byte_end":175854,"line_start":407,"line_end":407,"column_start":5,"column_end":41}},{"value":"/ let mut aiocb = AioCb::from_boxed_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175859,"byte_end":175918,"line_start":408,"line_end":408,"column_start":5,"column_end":64}},{"value":"/     2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175923,"byte_end":175944,"line_start":409,"line_end":409,"column_start":5,"column_end":26}},{"value":"/     wbuf,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175949,"byte_end":175962,"line_start":410,"line_end":410,"column_start":5,"column_end":18}},{"value":"/     0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175967,"byte_end":175990,"line_start":411,"line_end":411,"column_start":5,"column_end":28}},{"value":"/     SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":175995,"byte_end":176026,"line_start":412,"line_end":412,"column_start":5,"column_end":36}},{"value":"/     LioOpcode::LIO_NOP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176031,"byte_end":176059,"line_start":413,"line_end":413,"column_start":5,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176064,"byte_end":176071,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176076,"byte_end":176083,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176088,"byte_end":176091,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ If a library needs to work with buffers that aren't `Box`ed, it can","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176096,"byte_end":176167,"line_start":417,"line_end":417,"column_start":5,"column_end":76}},{"value":"/ create a `Box`ed container for use with this method.  Here's an example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176172,"byte_end":176247,"line_start":418,"line_end":418,"column_start":5,"column_end":80}},{"value":"/ using an un`Box`ed `Bytes` object.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176252,"byte_end":176290,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176295,"byte_end":176298,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176303,"byte_end":176310,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ # extern crate bytes;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176315,"byte_end":176340,"line_start":422,"line_end":422,"column_start":5,"column_end":30}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176345,"byte_end":176373,"line_start":423,"line_end":423,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176378,"byte_end":176401,"line_start":424,"line_end":424,"column_start":5,"column_end":28}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176406,"byte_end":176429,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176434,"byte_end":176461,"line_start":426,"line_end":426,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176466,"byte_end":176506,"line_start":427,"line_end":427,"column_start":5,"column_end":45}},{"value":"/ # use std::borrow::Borrow;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176511,"byte_end":176541,"line_start":428,"line_end":428,"column_start":5,"column_end":35}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176546,"byte_end":176583,"line_start":429,"line_end":429,"column_start":5,"column_end":42}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176588,"byte_end":176617,"line_start":430,"line_end":430,"column_start":5,"column_end":34}},{"value":"/ struct BytesContainer(Bytes);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176622,"byte_end":176655,"line_start":431,"line_end":431,"column_start":5,"column_end":38}},{"value":"/ impl Borrow<[u8]> for BytesContainer {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176660,"byte_end":176702,"line_start":432,"line_end":432,"column_start":5,"column_end":47}},{"value":"/     fn borrow(&self) -> &[u8] {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176707,"byte_end":176742,"line_start":433,"line_end":433,"column_start":5,"column_end":40}},{"value":"/         self.0.as_ref()","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176747,"byte_end":176774,"line_start":434,"line_end":434,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176779,"byte_end":176788,"line_start":435,"line_end":435,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176793,"byte_end":176798,"line_start":436,"line_end":436,"column_start":5,"column_end":10}},{"value":"/ fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176803,"byte_end":176818,"line_start":437,"line_end":437,"column_start":5,"column_end":20}},{"value":"/     let wbuf = Bytes::from(&b\"CDEF\"[..]);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176823,"byte_end":176868,"line_start":438,"line_end":438,"column_start":5,"column_end":50}},{"value":"/     let boxed_wbuf = Box::new(BytesContainer(wbuf));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176873,"byte_end":176929,"line_start":439,"line_end":439,"column_start":5,"column_end":61}},{"value":"/     let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176934,"byte_end":176974,"line_start":440,"line_end":440,"column_start":5,"column_end":45}},{"value":"/     let mut aiocb = AioCb::from_boxed_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":176979,"byte_end":177042,"line_start":441,"line_end":441,"column_start":5,"column_end":68}},{"value":"/         2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":177047,"byte_end":177072,"line_start":442,"line_end":442,"column_start":5,"column_end":30}},{"value":"/         boxed_wbuf,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":177077,"byte_end":177100,"line_start":443,"line_end":443,"column_start":5,"column_end":28}},{"value":"/         0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":177105,"byte_end":177132,"line_start":444,"line_end":444,"column_start":5,"column_end":32}},{"value":"/         SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":177137,"byte_end":177172,"line_start":445,"line_end":445,"column_start":5,"column_end":40}},{"value":"/         LioOpcode::LIO_NOP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":177177,"byte_end":177209,"line_start":446,"line_end":446,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":177214,"byte_end":177219,"line_start":447,"line_end":447,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":177224,"byte_end":177231,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":177236,"byte_end":177239,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ [`from_slice`]: #method.from_slice","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":177244,"byte_end":177282,"line_start":450,"line_end":450,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179691,"byte_end":179711,"line_start":518,"line_end":518,"column_start":12,"column_end":32},"name":"from_boxed_mut_slice","qualname":"<AioCb>::from_boxed_mut_slice","value":"pub fn from_boxed_mut_slice(RawFd, off_t, Box<BorrowMut<[u8]>>, libc::c_int,\n                            SigevNotify, LioOpcode) -> AioCb","parent":null,"children":[],"decl_id":null,"docs":" The safest and most flexible way to create an `AioCb` for reading.","sig":null,"attributes":[{"value":"/ The safest and most flexible way to create an `AioCb` for reading.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178024,"byte_end":178094,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178099,"byte_end":178102,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ Like [`from_boxed_slice`], but the slice is a mutable one.  More","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178107,"byte_end":178175,"line_start":474,"line_end":474,"column_start":5,"column_end":73}},{"value":"/ flexible than [`from_mut_slice`], because a wide range of objects can be","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178180,"byte_end":178256,"line_start":475,"line_end":475,"column_start":5,"column_end":81}},{"value":"/ used.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178261,"byte_end":178270,"line_start":476,"line_end":476,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178275,"byte_end":178278,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178283,"byte_end":178297,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178302,"byte_end":178305,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Create an `AioCb` from a Vector and use it for reading","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178310,"byte_end":178368,"line_start":480,"line_end":480,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178373,"byte_end":178376,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178381,"byte_end":178388,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178393,"byte_end":178421,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178426,"byte_end":178449,"line_start":484,"line_end":484,"column_start":5,"column_end":28}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178454,"byte_end":178482,"line_start":485,"line_end":485,"column_start":5,"column_end":33}},{"value":"/ # use nix::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178487,"byte_end":178508,"line_start":486,"line_end":486,"column_start":5,"column_end":26}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178513,"byte_end":178540,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178545,"byte_end":178585,"line_start":488,"line_end":488,"column_start":5,"column_end":45}},{"value":"/ # use std::{thread, time};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178590,"byte_end":178620,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178625,"byte_end":178650,"line_start":490,"line_end":490,"column_start":5,"column_end":30}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178655,"byte_end":178692,"line_start":491,"line_end":491,"column_start":5,"column_end":42}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178697,"byte_end":178726,"line_start":492,"line_end":492,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178731,"byte_end":178748,"line_start":493,"line_end":493,"column_start":5,"column_end":22}},{"value":"/ const INITIAL: &[u8] = b\"abcdef123456\";","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178753,"byte_end":178796,"line_start":494,"line_end":494,"column_start":5,"column_end":48}},{"value":"/ const LEN: usize = 4;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178801,"byte_end":178826,"line_start":495,"line_end":495,"column_start":5,"column_end":30}},{"value":"/ let rbuf = Box::new(vec![0; LEN]);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178831,"byte_end":178869,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178874,"byte_end":178910,"line_start":497,"line_end":497,"column_start":5,"column_end":41}},{"value":"/ f.write_all(INITIAL).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178915,"byte_end":178949,"line_start":498,"line_end":498,"column_start":5,"column_end":39}},{"value":"/ let mut aiocb = AioCb::from_boxed_mut_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":178954,"byte_end":179017,"line_start":499,"line_end":499,"column_start":5,"column_end":68}},{"value":"/     2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179022,"byte_end":179043,"line_start":500,"line_end":500,"column_start":5,"column_end":26}},{"value":"/     rbuf,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179048,"byte_end":179061,"line_start":501,"line_end":501,"column_start":5,"column_end":18}},{"value":"/     0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179066,"byte_end":179089,"line_start":502,"line_end":502,"column_start":5,"column_end":28}},{"value":"/     SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179094,"byte_end":179125,"line_start":503,"line_end":503,"column_start":5,"column_end":36}},{"value":"/     LioOpcode::LIO_NOP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179130,"byte_end":179158,"line_start":504,"line_end":504,"column_start":5,"column_end":33}},{"value":"/ aiocb.read().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179163,"byte_end":179189,"line_start":505,"line_end":505,"column_start":5,"column_end":31}},{"value":"/ while (aiocb.error() == Err(Error::from(Errno::EINPROGRESS))) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179194,"byte_end":179261,"line_start":506,"line_end":506,"column_start":5,"column_end":72}},{"value":"/     thread::sleep(time::Duration::from_millis(10));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179266,"byte_end":179321,"line_start":507,"line_end":507,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179326,"byte_end":179331,"line_start":508,"line_end":508,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(aiocb.aio_return().unwrap() as usize, LEN);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179336,"byte_end":179394,"line_start":509,"line_end":509,"column_start":5,"column_end":63}},{"value":"/ let mut buffer = aiocb.boxed_mut_slice().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179399,"byte_end":179453,"line_start":510,"line_end":510,"column_start":5,"column_end":59}},{"value":"/ const EXPECT: &[u8] = b\"cdef\";","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179458,"byte_end":179492,"line_start":511,"line_end":511,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(buffer.borrow_mut(), EXPECT);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179497,"byte_end":179541,"line_start":512,"line_end":512,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179546,"byte_end":179553,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179558,"byte_end":179565,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179570,"byte_end":179573,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ [`from_boxed_slice`]: #method.from_boxed_slice","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179578,"byte_end":179628,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/ [`from_mut_slice`]: #method.from_mut_slice","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":179633,"byte_end":179679,"line_start":517,"line_end":517,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181904,"byte_end":181916,"line_start":567,"line_end":567,"column_start":19,"column_end":31},"name":"from_mut_ptr","qualname":"<AioCb>::from_mut_ptr","value":"pub unsafe fn from_mut_ptr(RawFd, off_t, *mut c_void, usize, libc::c_int,\n                           SigevNotify, LioOpcode) -> AioCb","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `AioCb` from a mutable raw pointer","sig":null,"attributes":[{"value":"/ Constructs a new `AioCb` from a mutable raw pointer","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180509,"byte_end":180564,"line_start":540,"line_end":540,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180569,"byte_end":180572,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Unlike `from_mut_slice`, this method returns a structure suitable for","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180577,"byte_end":180650,"line_start":542,"line_end":542,"column_start":5,"column_end":78}},{"value":"/ placement on the heap.  It may be used for both reads and writes.  Due","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180655,"byte_end":180729,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ to its unsafety, this method is not recommended.  It is most useful when","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180734,"byte_end":180810,"line_start":544,"line_end":544,"column_start":5,"column_end":81}},{"value":"/ heap allocation is required but for some reason the data cannot be","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180815,"byte_end":180885,"line_start":545,"line_end":545,"column_start":5,"column_end":75}},{"value":"/ wrapped in a `struct` that implements `BorrowMut<[u8]>`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180890,"byte_end":180949,"line_start":546,"line_end":546,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180954,"byte_end":180957,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180962,"byte_end":180978,"line_start":548,"line_end":548,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180983,"byte_end":180986,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ * `fd`:           File descriptor.  Required for all aio functions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":180991,"byte_end":181062,"line_start":550,"line_end":550,"column_start":5,"column_end":76}},{"value":"/ * `offs`:         File offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181067,"byte_end":181100,"line_start":551,"line_end":551,"column_start":5,"column_end":38}},{"value":"/ * `buf`:          Pointer to the memory buffer","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181105,"byte_end":181155,"line_start":552,"line_end":552,"column_start":5,"column_end":55}},{"value":"/ * `len`:          Length of the buffer pointed to by `buf`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181160,"byte_end":181222,"line_start":553,"line_end":553,"column_start":5,"column_end":67}},{"value":"/ * `prio`:         If POSIX Prioritized IO is supported, then the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181227,"byte_end":181295,"line_start":554,"line_end":554,"column_start":5,"column_end":73}},{"value":"/                   operation will be prioritized at the process's","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181300,"byte_end":181368,"line_start":555,"line_end":555,"column_start":5,"column_end":73}},{"value":"/                   priority level minus `prio`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181373,"byte_end":181422,"line_start":556,"line_end":556,"column_start":5,"column_end":54}},{"value":"/ * `sigev_notify`: Determines how you will be notified of event","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181427,"byte_end":181493,"line_start":557,"line_end":557,"column_start":5,"column_end":71}},{"value":"/                   completion.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181498,"byte_end":181531,"line_start":558,"line_end":558,"column_start":5,"column_end":38}},{"value":"/ * `opcode`:       This field is only used for `lio_listio`.  It","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181536,"byte_end":181603,"line_start":559,"line_end":559,"column_start":5,"column_end":72}},{"value":"/                   determines which operation to use for this individual","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181608,"byte_end":181683,"line_start":560,"line_end":560,"column_start":5,"column_end":80}},{"value":"/                   aiocb","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181688,"byte_end":181715,"line_start":561,"line_end":561,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181720,"byte_end":181723,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181728,"byte_end":181740,"line_start":563,"line_end":563,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181745,"byte_end":181748,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the storage pointed to by `buf` outlives the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181753,"byte_end":181829,"line_start":565,"line_end":565,"column_start":5,"column_end":81}},{"value":"/ `AioCb`.  The lifetime checker can't help here.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":181834,"byte_end":181885,"line_start":566,"line_end":566,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183818,"byte_end":183826,"line_start":612,"line_end":612,"column_start":19,"column_end":27},"name":"from_ptr","qualname":"<AioCb>::from_ptr","value":"pub unsafe fn from_ptr(RawFd, off_t, *const c_void, usize, libc::c_int,\n                       SigevNotify, LioOpcode) -> AioCb","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `AioCb` from a raw pointer.","sig":null,"attributes":[{"value":"/ Constructs a new `AioCb` from a raw pointer.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182480,"byte_end":182528,"line_start":585,"line_end":585,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182533,"byte_end":182536,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Unlike `from_slice`, this method returns a structure suitable for","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182541,"byte_end":182610,"line_start":587,"line_end":587,"column_start":5,"column_end":74}},{"value":"/ placement on the heap.  Due to its unsafety, this method is not","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182615,"byte_end":182682,"line_start":588,"line_end":588,"column_start":5,"column_end":72}},{"value":"/ recommended.  It is most useful when heap allocation is required but for","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182687,"byte_end":182763,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ some reason the data cannot be wrapped in a `struct` that implements","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182768,"byte_end":182840,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ `Borrow<[u8]>`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182845,"byte_end":182863,"line_start":591,"line_end":591,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182868,"byte_end":182871,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182876,"byte_end":182892,"line_start":593,"line_end":593,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182897,"byte_end":182900,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ * `fd`:           File descriptor.  Required for all aio functions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182905,"byte_end":182976,"line_start":595,"line_end":595,"column_start":5,"column_end":76}},{"value":"/ * `offs`:         File offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":182981,"byte_end":183014,"line_start":596,"line_end":596,"column_start":5,"column_end":38}},{"value":"/ * `buf`:          Pointer to the memory buffer","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183019,"byte_end":183069,"line_start":597,"line_end":597,"column_start":5,"column_end":55}},{"value":"/ * `len`:          Length of the buffer pointed to by `buf`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183074,"byte_end":183136,"line_start":598,"line_end":598,"column_start":5,"column_end":67}},{"value":"/ * `prio`:         If POSIX Prioritized IO is supported, then the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183141,"byte_end":183209,"line_start":599,"line_end":599,"column_start":5,"column_end":73}},{"value":"/                   operation will be prioritized at the process's","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183214,"byte_end":183282,"line_start":600,"line_end":600,"column_start":5,"column_end":73}},{"value":"/                   priority level minus `prio`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183287,"byte_end":183336,"line_start":601,"line_end":601,"column_start":5,"column_end":54}},{"value":"/ * `sigev_notify`: Determines how you will be notified of event","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183341,"byte_end":183407,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/                   completion.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183412,"byte_end":183445,"line_start":603,"line_end":603,"column_start":5,"column_end":38}},{"value":"/ * `opcode`:       This field is only used for `lio_listio`.  It","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183450,"byte_end":183517,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/                   determines which operation to use for this individual","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183522,"byte_end":183597,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/                   aiocb","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183602,"byte_end":183629,"line_start":606,"line_end":606,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183634,"byte_end":183637,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183642,"byte_end":183654,"line_start":608,"line_end":608,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183659,"byte_end":183662,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that the storage pointed to by `buf` outlives the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183667,"byte_end":183743,"line_start":610,"line_end":610,"column_start":5,"column_end":81}},{"value":"/ `AioCb`.  The lifetime checker can't help here.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":183748,"byte_end":183799,"line_start":611,"line_end":611,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":186273,"byte_end":186283,"line_start":675,"line_end":675,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<AioCb>::from_slice","value":"pub fn from_slice(RawFd, off_t, &'a [u8], libc::c_int, SigevNotify, LioOpcode)\n-> AioCb","parent":null,"children":[],"decl_id":null,"docs":" Like `from_mut_slice`, but works on constant slices rather than\n mutable slices.","sig":null,"attributes":[{"value":"/ Like `from_mut_slice`, but works on constant slices rather than","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184529,"byte_end":184596,"line_start":632,"line_end":632,"column_start":5,"column_end":72}},{"value":"/ mutable slices.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184601,"byte_end":184620,"line_start":633,"line_end":633,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184625,"byte_end":184628,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ An `AioCb` created this way cannot be used with `read`, and its","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184633,"byte_end":184700,"line_start":635,"line_end":635,"column_start":5,"column_end":72}},{"value":"/ `LioOpcode` cannot be set to `LIO_READ`.  This method is useful when","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184705,"byte_end":184777,"line_start":636,"line_end":636,"column_start":5,"column_end":77}},{"value":"/ writing a const buffer with `AioCb::write`, since `from_mut_slice` can't","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184782,"byte_end":184858,"line_start":637,"line_end":637,"column_start":5,"column_end":81}},{"value":"/ work with const buffers.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184863,"byte_end":184891,"line_start":638,"line_end":638,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184896,"byte_end":184899,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184904,"byte_end":184918,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184923,"byte_end":184926,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ Construct an `AioCb` from a slice and use it for writing.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184931,"byte_end":184992,"line_start":642,"line_end":642,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":184997,"byte_end":185000,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185005,"byte_end":185012,"line_start":644,"line_end":644,"column_start":5,"column_end":12}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185017,"byte_end":185045,"line_start":645,"line_end":645,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185050,"byte_end":185073,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185078,"byte_end":185106,"line_start":647,"line_end":647,"column_start":5,"column_end":33}},{"value":"/ # use nix::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185111,"byte_end":185132,"line_start":648,"line_end":648,"column_start":5,"column_end":26}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185137,"byte_end":185164,"line_start":649,"line_end":649,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185169,"byte_end":185209,"line_start":650,"line_end":650,"column_start":5,"column_end":45}},{"value":"/ # use std::{thread, time};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185214,"byte_end":185244,"line_start":651,"line_end":651,"column_start":5,"column_end":35}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185249,"byte_end":185286,"line_start":652,"line_end":652,"column_start":5,"column_end":42}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185291,"byte_end":185320,"line_start":653,"line_end":653,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185325,"byte_end":185342,"line_start":654,"line_end":654,"column_start":5,"column_end":22}},{"value":"/ const WBUF: &[u8] = b\"abcdef123456\";","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185347,"byte_end":185387,"line_start":655,"line_end":655,"column_start":5,"column_end":45}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185392,"byte_end":185428,"line_start":656,"line_end":656,"column_start":5,"column_end":41}},{"value":"/ let mut aiocb = AioCb::from_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185433,"byte_end":185486,"line_start":657,"line_end":657,"column_start":5,"column_end":58}},{"value":"/     2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185491,"byte_end":185512,"line_start":658,"line_end":658,"column_start":5,"column_end":26}},{"value":"/     WBUF,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185517,"byte_end":185530,"line_start":659,"line_end":659,"column_start":5,"column_end":18}},{"value":"/     0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185535,"byte_end":185558,"line_start":660,"line_end":660,"column_start":5,"column_end":28}},{"value":"/     SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185563,"byte_end":185594,"line_start":661,"line_end":661,"column_start":5,"column_end":36}},{"value":"/     LioOpcode::LIO_NOP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185599,"byte_end":185627,"line_start":662,"line_end":662,"column_start":5,"column_end":33}},{"value":"/ aiocb.write().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185632,"byte_end":185659,"line_start":663,"line_end":663,"column_start":5,"column_end":32}},{"value":"/ while (aiocb.error() == Err(Error::from(Errno::EINPROGRESS))) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185664,"byte_end":185731,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/     thread::sleep(time::Duration::from_millis(10));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185736,"byte_end":185791,"line_start":665,"line_end":665,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185796,"byte_end":185801,"line_start":666,"line_end":666,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(aiocb.aio_return().unwrap() as usize, WBUF.len());","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185806,"byte_end":185871,"line_start":667,"line_end":667,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185876,"byte_end":185883,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":185888,"byte_end":185895,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":187747,"byte_end":187763,"line_start":710,"line_end":710,"column_start":12,"column_end":28},"name":"set_sigev_notify","qualname":"<AioCb>::set_sigev_notify","value":"pub fn set_sigev_notify(&mut Self, SigevNotify)","parent":null,"children":[],"decl_id":null,"docs":" Update the notification settings for an existing `aiocb`\n","sig":null,"attributes":[{"value":"/ Update the notification settings for an existing `aiocb`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":187675,"byte_end":187735,"line_start":709,"line_end":709,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189674,"byte_end":189680,"line_start":763,"line_end":763,"column_start":12,"column_end":18},"name":"cancel","qualname":"<AioCb>::cancel","value":"pub fn cancel(&mut Self) -> Result<AioCancelStat>","parent":null,"children":[],"decl_id":null,"docs":" Cancels an outstanding AIO request.","sig":null,"attributes":[{"value":"/ Cancels an outstanding AIO request.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":187889,"byte_end":187928,"line_start":714,"line_end":714,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":187933,"byte_end":187936,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ The operating system is not required to implement cancellation for all","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":187941,"byte_end":188015,"line_start":716,"line_end":716,"column_start":5,"column_end":79}},{"value":"/ file and device types.  Even if it does, there is no guarantee that the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188020,"byte_end":188095,"line_start":717,"line_end":717,"column_start":5,"column_end":80}},{"value":"/ operation has not already completed.  So the caller must check the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188100,"byte_end":188170,"line_start":718,"line_end":718,"column_start":5,"column_end":75}},{"value":"/ result and handle operations that were not canceled or that have already","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188175,"byte_end":188251,"line_start":719,"line_end":719,"column_start":5,"column_end":81}},{"value":"/ completed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188256,"byte_end":188270,"line_start":720,"line_end":720,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188275,"byte_end":188278,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188283,"byte_end":188297,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188302,"byte_end":188305,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Cancel an outstanding aio operation.  Note that we must still call","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188310,"byte_end":188380,"line_start":724,"line_end":724,"column_start":5,"column_end":75}},{"value":"/ `aio_return` to free resources, even though we don't care about the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188385,"byte_end":188456,"line_start":725,"line_end":725,"column_start":5,"column_end":76}},{"value":"/ result.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188461,"byte_end":188472,"line_start":726,"line_end":726,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188477,"byte_end":188480,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188485,"byte_end":188492,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188497,"byte_end":188525,"line_start":729,"line_end":729,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188530,"byte_end":188553,"line_start":730,"line_end":730,"column_start":5,"column_end":28}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188558,"byte_end":188586,"line_start":731,"line_end":731,"column_start":5,"column_end":33}},{"value":"/ # use nix::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188591,"byte_end":188612,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188617,"byte_end":188644,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188649,"byte_end":188689,"line_start":734,"line_end":734,"column_start":5,"column_end":45}},{"value":"/ # use std::{thread, time};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188694,"byte_end":188724,"line_start":735,"line_end":735,"column_start":5,"column_end":35}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188729,"byte_end":188754,"line_start":736,"line_end":736,"column_start":5,"column_end":30}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188759,"byte_end":188796,"line_start":737,"line_end":737,"column_start":5,"column_end":42}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188801,"byte_end":188830,"line_start":738,"line_end":738,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188835,"byte_end":188852,"line_start":739,"line_end":739,"column_start":5,"column_end":22}},{"value":"/ let wbuf = b\"CDEF\";","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188857,"byte_end":188880,"line_start":740,"line_end":740,"column_start":5,"column_end":28}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188885,"byte_end":188921,"line_start":741,"line_end":741,"column_start":5,"column_end":41}},{"value":"/ let mut aiocb = AioCb::from_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188926,"byte_end":188979,"line_start":742,"line_end":742,"column_start":5,"column_end":58}},{"value":"/     2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":188984,"byte_end":189005,"line_start":743,"line_end":743,"column_start":5,"column_end":26}},{"value":"/     &wbuf[..],","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189010,"byte_end":189028,"line_start":744,"line_end":744,"column_start":5,"column_end":23}},{"value":"/     0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189033,"byte_end":189056,"line_start":745,"line_end":745,"column_start":5,"column_end":28}},{"value":"/     SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189061,"byte_end":189092,"line_start":746,"line_end":746,"column_start":5,"column_end":36}},{"value":"/     LioOpcode::LIO_NOP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189097,"byte_end":189125,"line_start":747,"line_end":747,"column_start":5,"column_end":33}},{"value":"/ aiocb.write().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189130,"byte_end":189157,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/ let cs = aiocb.cancel().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189162,"byte_end":189199,"line_start":749,"line_end":749,"column_start":5,"column_end":42}},{"value":"/ if cs == AioCancelStat::AioNotCanceled {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189204,"byte_end":189248,"line_start":750,"line_end":750,"column_start":5,"column_end":49}},{"value":"/     while (aiocb.error() == Err(Error::from(Errno::EINPROGRESS))) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189253,"byte_end":189324,"line_start":751,"line_end":751,"column_start":5,"column_end":76}},{"value":"/         thread::sleep(time::Duration::from_millis(10));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189329,"byte_end":189388,"line_start":752,"line_end":752,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189393,"byte_end":189402,"line_start":753,"line_end":753,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189407,"byte_end":189412,"line_start":754,"line_end":754,"column_start":5,"column_end":10}},{"value":"/ // Must call `aio_return`, but ignore the result","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189417,"byte_end":189469,"line_start":755,"line_end":755,"column_start":5,"column_end":57}},{"value":"/ let _ = aiocb.aio_return();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189474,"byte_end":189505,"line_start":756,"line_end":756,"column_start":5,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189510,"byte_end":189517,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189522,"byte_end":189529,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189534,"byte_end":189537,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189542,"byte_end":189558,"line_start":760,"line_end":760,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189563,"byte_end":189566,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ [aio_cancel](http://pubs.opengroup.org/onlinepubs/9699919799/functions/aio_cancel.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":189571,"byte_end":189662,"line_start":762,"line_end":762,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191549,"byte_end":191554,"line_start":813,"line_end":813,"column_start":12,"column_end":17},"name":"error","qualname":"<AioCb>::error","value":"pub fn error(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve error status of an asynchronous operation.","sig":null,"attributes":[{"value":"/ Retrieve error status of an asynchronous operation.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190123,"byte_end":190178,"line_start":773,"line_end":773,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190183,"byte_end":190186,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ If the request has not yet completed, returns `EINPROGRESS`.  Otherwise,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190191,"byte_end":190267,"line_start":775,"line_end":775,"column_start":5,"column_end":81}},{"value":"/ returns `Ok` or any other error.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190272,"byte_end":190308,"line_start":776,"line_end":776,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190313,"byte_end":190316,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190321,"byte_end":190335,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190340,"byte_end":190343,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Issue an aio operation and use `error` to poll for completion.  Polling","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190348,"byte_end":190423,"line_start":780,"line_end":780,"column_start":5,"column_end":80}},{"value":"/ is an alternative to `aio_suspend`, used by most of the other examples.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190428,"byte_end":190503,"line_start":781,"line_end":781,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190508,"byte_end":190511,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190516,"byte_end":190523,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190528,"byte_end":190556,"line_start":784,"line_end":784,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190561,"byte_end":190584,"line_start":785,"line_end":785,"column_start":5,"column_end":28}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190589,"byte_end":190617,"line_start":786,"line_end":786,"column_start":5,"column_end":33}},{"value":"/ # use nix::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190622,"byte_end":190643,"line_start":787,"line_end":787,"column_start":5,"column_end":26}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190648,"byte_end":190675,"line_start":788,"line_end":788,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190680,"byte_end":190720,"line_start":789,"line_end":789,"column_start":5,"column_end":45}},{"value":"/ # use std::{thread, time};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190725,"byte_end":190755,"line_start":790,"line_end":790,"column_start":5,"column_end":35}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190760,"byte_end":190797,"line_start":791,"line_end":791,"column_start":5,"column_end":42}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190802,"byte_end":190831,"line_start":792,"line_end":792,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190836,"byte_end":190853,"line_start":793,"line_end":793,"column_start":5,"column_end":22}},{"value":"/ const WBUF: &[u8] = b\"abcdef123456\";","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190858,"byte_end":190898,"line_start":794,"line_end":794,"column_start":5,"column_end":45}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190903,"byte_end":190939,"line_start":795,"line_end":795,"column_start":5,"column_end":41}},{"value":"/ let mut aiocb = AioCb::from_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":190944,"byte_end":190997,"line_start":796,"line_end":796,"column_start":5,"column_end":58}},{"value":"/     2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191002,"byte_end":191023,"line_start":797,"line_end":797,"column_start":5,"column_end":26}},{"value":"/     WBUF,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191028,"byte_end":191041,"line_start":798,"line_end":798,"column_start":5,"column_end":18}},{"value":"/     0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191046,"byte_end":191069,"line_start":799,"line_end":799,"column_start":5,"column_end":28}},{"value":"/     SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191074,"byte_end":191105,"line_start":800,"line_end":800,"column_start":5,"column_end":36}},{"value":"/     LioOpcode::LIO_NOP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191110,"byte_end":191138,"line_start":801,"line_end":801,"column_start":5,"column_end":33}},{"value":"/ aiocb.write().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191143,"byte_end":191170,"line_start":802,"line_end":802,"column_start":5,"column_end":32}},{"value":"/ while (aiocb.error() == Err(Error::from(Errno::EINPROGRESS))) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191175,"byte_end":191242,"line_start":803,"line_end":803,"column_start":5,"column_end":72}},{"value":"/     thread::sleep(time::Duration::from_millis(10));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191247,"byte_end":191302,"line_start":804,"line_end":804,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191307,"byte_end":191312,"line_start":805,"line_end":805,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(aiocb.aio_return().unwrap() as usize, WBUF.len());","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191317,"byte_end":191382,"line_start":806,"line_end":806,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191387,"byte_end":191394,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191399,"byte_end":191406,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191411,"byte_end":191414,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191419,"byte_end":191435,"line_start":810,"line_end":810,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191440,"byte_end":191443,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ [aio_error](http://pubs.opengroup.org/onlinepubs/9699919799/functions/aio_error.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191448,"byte_end":191537,"line_start":812,"line_end":812,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":192077,"byte_end":192082,"line_start":827,"line_end":827,"column_start":12,"column_end":17},"name":"fsync","qualname":"<AioCb>::fsync","value":"pub fn fsync(&mut Self, AioFsyncMode) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" An asynchronous version of `fsync(2)`.","sig":null,"attributes":[{"value":"/ An asynchronous version of `fsync(2)`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191892,"byte_end":191934,"line_start":822,"line_end":822,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191939,"byte_end":191942,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191947,"byte_end":191963,"line_start":824,"line_end":824,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191968,"byte_end":191971,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ [aio_fsync](http://pubs.opengroup.org/onlinepubs/9699919799/functions/aio_fsync.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":191976,"byte_end":192065,"line_start":826,"line_end":826,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":192505,"byte_end":192515,"line_start":840,"line_end":840,"column_start":12,"column_end":22},"name":"lio_opcode","qualname":"<AioCb>::lio_opcode","value":"pub fn lio_opcode(&Self) -> Option<LioOpcode>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `aiocb`'s `LioOpcode` field","sig":null,"attributes":[{"value":"/ Returns the `aiocb`'s `LioOpcode` field","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":192348,"byte_end":192391,"line_start":836,"line_end":836,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":192396,"byte_end":192399,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ If the value cannot be represented as an `LioOpcode`, returns `None`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":192404,"byte_end":192476,"line_start":838,"line_end":838,"column_start":5,"column_end":77}},{"value":"/ instead.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":192481,"byte_end":192493,"line_start":839,"line_end":839,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193074,"byte_end":193080,"line_start":854,"line_end":854,"column_start":12,"column_end":18},"name":"nbytes","qualname":"<AioCb>::nbytes","value":"pub fn nbytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the requested length of the aio operation in bytes","sig":null,"attributes":[{"value":"/ Returns the requested length of the aio operation in bytes","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":192802,"byte_end":192864,"line_start":849,"line_end":849,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":192869,"byte_end":192872,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This method returns the *requested* length of the operation.  To get the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":192877,"byte_end":192953,"line_start":851,"line_end":851,"column_start":5,"column_end":81}},{"value":"/ number of bytes actually read or written by a completed operation, use","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":192958,"byte_end":193032,"line_start":852,"line_end":852,"column_start":5,"column_end":79}},{"value":"/ `aio_return` instead.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193037,"byte_end":193062,"line_start":853,"line_end":853,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193201,"byte_end":193207,"line_start":859,"line_end":859,"column_start":12,"column_end":18},"name":"offset","qualname":"<AioCb>::offset","value":"pub fn offset(&Self) -> off_t","parent":null,"children":[],"decl_id":null,"docs":" Returns the file offset stored in the `AioCb`\n","sig":null,"attributes":[{"value":"/ Returns the file offset stored in the `AioCb`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193140,"byte_end":193189,"line_start":858,"line_end":858,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193318,"byte_end":193326,"line_start":864,"line_end":864,"column_start":12,"column_end":20},"name":"priority","qualname":"<AioCb>::priority","value":"pub fn priority(&Self) -> libc::c_int","parent":null,"children":[],"decl_id":null,"docs":" Returns the priority of the `AioCb`\n","sig":null,"attributes":[{"value":"/ Returns the priority of the `AioCb`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193267,"byte_end":193306,"line_start":863,"line_end":863,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193595,"byte_end":193599,"line_start":873,"line_end":873,"column_start":12,"column_end":16},"name":"read","qualname":"<AioCb>::read","value":"pub fn read(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously reads from a file descriptor into a buffer","sig":null,"attributes":[{"value":"/ Asynchronously reads from a file descriptor into a buffer","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193393,"byte_end":193454,"line_start":868,"line_end":868,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193459,"byte_end":193462,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193467,"byte_end":193483,"line_start":870,"line_end":870,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193488,"byte_end":193491,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ [aio_read](http://pubs.opengroup.org/onlinepubs/9699919799/functions/aio_read.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193496,"byte_end":193583,"line_start":872,"line_end":872,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193949,"byte_end":193957,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"sigevent","qualname":"<AioCb>::sigevent","value":"pub fn sigevent(&Self) -> SigEvent","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SigEvent` stored in the `AioCb`\n","sig":null,"attributes":[{"value":"/ Returns the `SigEvent` stored in the `AioCb`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":193889,"byte_end":193937,"line_start":883,"line_end":883,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194536,"byte_end":194546,"line_start":898,"line_end":898,"column_start":12,"column_end":22},"name":"aio_return","qualname":"<AioCb>::aio_return","value":"pub fn aio_return(&mut Self) -> Result<isize>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve return status of an asynchronous operation.","sig":null,"attributes":[{"value":"/ Retrieve return status of an asynchronous operation.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194039,"byte_end":194095,"line_start":888,"line_end":888,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194100,"byte_end":194103,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ Should only be called once for each `AioCb`, after `AioCb::error`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194108,"byte_end":194177,"line_start":890,"line_end":890,"column_start":5,"column_end":74}},{"value":"/ indicates that it has completed.  The result is the same as for the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194182,"byte_end":194253,"line_start":891,"line_end":891,"column_start":5,"column_end":76}},{"value":"/ synchronous `read(2)`, `write(2)`, of `fsync(2)` functions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194258,"byte_end":194321,"line_start":892,"line_end":892,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194326,"byte_end":194329,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194334,"byte_end":194350,"line_start":894,"line_end":894,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194355,"byte_end":194358,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ [aio_return](http://pubs.opengroup.org/onlinepubs/9699919799/functions/aio_return.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194363,"byte_end":194454,"line_start":896,"line_end":896,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194930,"byte_end":194935,"line_start":909,"line_end":909,"column_start":12,"column_end":17},"name":"write","qualname":"<AioCb>::write","value":"pub fn write(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously writes from a buffer to a file descriptor","sig":null,"attributes":[{"value":"/ Asynchronously writes from a buffer to a file descriptor","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194727,"byte_end":194787,"line_start":904,"line_end":904,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194792,"byte_end":194795,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194800,"byte_end":194816,"line_start":906,"line_end":906,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194821,"byte_end":194824,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ [aio_write](http://pubs.opengroup.org/onlinepubs/9699919799/functions/aio_write.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":194829,"byte_end":194918,"line_start":908,"line_end":908,"column_start":5,"column_end":94}}]},{"kind":"Function","id":{"krate":0,"index":464},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196410,"byte_end":196424,"line_start":962,"line_end":962,"column_start":8,"column_end":22},"name":"aio_cancel_all","qualname":"::sys::aio::aio_cancel_all","value":"pub fn aio_cancel_all(RawFd) -> Result<AioCancelStat>","parent":null,"children":[],"decl_id":null,"docs":" Cancels outstanding AIO requests for a given file descriptor.","sig":null,"attributes":[{"value":"/ Cancels outstanding AIO requests for a given file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195155,"byte_end":195220,"line_start":920,"line_end":920,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195221,"byte_end":195224,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195225,"byte_end":195239,"line_start":922,"line_end":922,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195240,"byte_end":195243,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/ Issue an aio operation, then cancel all outstanding operations on that file","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195244,"byte_end":195323,"line_start":924,"line_end":924,"column_start":1,"column_end":80}},{"value":"/ descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195324,"byte_end":195339,"line_start":925,"line_end":925,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195340,"byte_end":195343,"line_start":926,"line_end":926,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195344,"byte_end":195351,"line_start":927,"line_end":927,"column_start":1,"column_end":8}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195352,"byte_end":195380,"line_start":928,"line_end":928,"column_start":1,"column_end":29}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195381,"byte_end":195404,"line_start":929,"line_end":929,"column_start":1,"column_end":24}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195405,"byte_end":195433,"line_start":930,"line_end":930,"column_start":1,"column_end":29}},{"value":"/ # use nix::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195434,"byte_end":195455,"line_start":931,"line_end":931,"column_start":1,"column_end":22}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195456,"byte_end":195483,"line_start":932,"line_end":932,"column_start":1,"column_end":28}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195484,"byte_end":195524,"line_start":933,"line_end":933,"column_start":1,"column_end":41}},{"value":"/ # use std::{thread, time};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195525,"byte_end":195555,"line_start":934,"line_end":934,"column_start":1,"column_end":31}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195556,"byte_end":195581,"line_start":935,"line_end":935,"column_start":1,"column_end":26}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195582,"byte_end":195619,"line_start":936,"line_end":936,"column_start":1,"column_end":38}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195620,"byte_end":195649,"line_start":937,"line_end":937,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195650,"byte_end":195667,"line_start":938,"line_end":938,"column_start":1,"column_end":18}},{"value":"/ let wbuf = b\"CDEF\";","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195668,"byte_end":195691,"line_start":939,"line_end":939,"column_start":1,"column_end":24}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195692,"byte_end":195728,"line_start":940,"line_end":940,"column_start":1,"column_end":37}},{"value":"/ let mut aiocb = AioCb::from_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195729,"byte_end":195782,"line_start":941,"line_end":941,"column_start":1,"column_end":54}},{"value":"/     2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195783,"byte_end":195804,"line_start":942,"line_end":942,"column_start":1,"column_end":22}},{"value":"/     &wbuf[..],","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195805,"byte_end":195823,"line_start":943,"line_end":943,"column_start":1,"column_end":19}},{"value":"/     0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195824,"byte_end":195847,"line_start":944,"line_end":944,"column_start":1,"column_end":24}},{"value":"/     SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195848,"byte_end":195879,"line_start":945,"line_end":945,"column_start":1,"column_end":32}},{"value":"/     LioOpcode::LIO_NOP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195880,"byte_end":195908,"line_start":946,"line_end":946,"column_start":1,"column_end":29}},{"value":"/ aiocb.write().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195909,"byte_end":195936,"line_start":947,"line_end":947,"column_start":1,"column_end":28}},{"value":"/ let cs = aio_cancel_all(f.as_raw_fd()).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195937,"byte_end":195989,"line_start":948,"line_end":948,"column_start":1,"column_end":53}},{"value":"/ if cs == AioCancelStat::AioNotCanceled {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":195990,"byte_end":196034,"line_start":949,"line_end":949,"column_start":1,"column_end":45}},{"value":"/     while (aiocb.error() == Err(Error::from(Errno::EINPROGRESS))) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196035,"byte_end":196106,"line_start":950,"line_end":950,"column_start":1,"column_end":72}},{"value":"/         thread::sleep(time::Duration::from_millis(10));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196107,"byte_end":196166,"line_start":951,"line_end":951,"column_start":1,"column_end":60}},{"value":"/     }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196167,"byte_end":196176,"line_start":952,"line_end":952,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196177,"byte_end":196182,"line_start":953,"line_end":953,"column_start":1,"column_end":6}},{"value":"/ // Must call `aio_return`, but ignore the result","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196183,"byte_end":196235,"line_start":954,"line_end":954,"column_start":1,"column_end":53}},{"value":"/ let _ = aiocb.aio_return();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196236,"byte_end":196267,"line_start":955,"line_end":955,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196268,"byte_end":196275,"line_start":956,"line_end":956,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196276,"byte_end":196283,"line_start":957,"line_end":957,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196284,"byte_end":196287,"line_start":958,"line_end":958,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196288,"byte_end":196304,"line_start":959,"line_end":959,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196305,"byte_end":196308,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ [`aio_cancel`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/aio_cancel.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196309,"byte_end":196402,"line_start":961,"line_end":961,"column_start":1,"column_end":94}}]},{"kind":"Function","id":{"krate":0,"index":465},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":198151,"byte_end":198162,"line_start":1009,"line_end":1009,"column_start":8,"column_end":19},"name":"aio_suspend","qualname":"::sys::aio::aio_suspend","value":"pub fn aio_suspend(&[&AioCb], Option<TimeSpec>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Suspends the calling process until at least one of the specified `AioCb`s\n has completed, a signal is delivered, or the timeout has passed.","sig":null,"attributes":[{"value":"/ Suspends the calling process until at least one of the specified `AioCb`s","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196807,"byte_end":196884,"line_start":972,"line_end":972,"column_start":1,"column_end":78}},{"value":"/ has completed, a signal is delivered, or the timeout has passed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196885,"byte_end":196953,"line_start":973,"line_end":973,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196954,"byte_end":196957,"line_start":974,"line_end":974,"column_start":1,"column_end":4}},{"value":"/ If `timeout` is `None`, `aio_suspend` will block indefinitely.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":196958,"byte_end":197024,"line_start":975,"line_end":975,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197025,"byte_end":197028,"line_start":976,"line_end":976,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197029,"byte_end":197043,"line_start":977,"line_end":977,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197044,"byte_end":197047,"line_start":978,"line_end":978,"column_start":1,"column_end":4}},{"value":"/ Use `aio_suspend` to block until an aio operation completes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197048,"byte_end":197112,"line_start":979,"line_end":979,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197113,"byte_end":197116,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197379,"byte_end":197392,"line_start":985,"line_end":985,"column_start":1,"column_end":14}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197393,"byte_end":197421,"line_start":986,"line_end":986,"column_start":1,"column_end":29}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197422,"byte_end":197445,"line_start":987,"line_end":987,"column_start":1,"column_end":24}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197446,"byte_end":197473,"line_start":988,"line_end":988,"column_start":1,"column_end":28}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197474,"byte_end":197514,"line_start":989,"line_end":989,"column_start":1,"column_end":41}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197515,"byte_end":197552,"line_start":990,"line_end":990,"column_start":1,"column_end":38}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197553,"byte_end":197582,"line_start":991,"line_end":991,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197583,"byte_end":197600,"line_start":992,"line_end":992,"column_start":1,"column_end":18}},{"value":"/ const WBUF: &[u8] = b\"abcdef123456\";","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197601,"byte_end":197641,"line_start":993,"line_end":993,"column_start":1,"column_end":41}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197642,"byte_end":197678,"line_start":994,"line_end":994,"column_start":1,"column_end":37}},{"value":"/ let mut aiocb = AioCb::from_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197679,"byte_end":197732,"line_start":995,"line_end":995,"column_start":1,"column_end":54}},{"value":"/     2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197733,"byte_end":197754,"line_start":996,"line_end":996,"column_start":1,"column_end":22}},{"value":"/     WBUF,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197755,"byte_end":197768,"line_start":997,"line_end":997,"column_start":1,"column_end":14}},{"value":"/     0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197769,"byte_end":197792,"line_start":998,"line_end":998,"column_start":1,"column_end":24}},{"value":"/     SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197793,"byte_end":197824,"line_start":999,"line_end":999,"column_start":1,"column_end":32}},{"value":"/     LioOpcode::LIO_NOP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197825,"byte_end":197853,"line_start":1000,"line_end":1000,"column_start":1,"column_end":29}},{"value":"/ aiocb.write().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197854,"byte_end":197881,"line_start":1001,"line_end":1001,"column_start":1,"column_end":28}},{"value":"/ aio_suspend(&[&aiocb], None).expect(\"aio_suspend failed\");","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197882,"byte_end":197944,"line_start":1002,"line_end":1002,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(aiocb.aio_return().unwrap() as usize, WBUF.len());","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":197945,"byte_end":198010,"line_start":1003,"line_end":1003,"column_start":1,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":198011,"byte_end":198018,"line_start":1004,"line_end":1004,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":198019,"byte_end":198026,"line_start":1005,"line_end":1005,"column_start":1,"column_end":8}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":198027,"byte_end":198043,"line_start":1006,"line_end":1006,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":198044,"byte_end":198047,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ [`aio_suspend`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/aio_suspend.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":198048,"byte_end":198143,"line_start":1008,"line_end":1008,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":472},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199757,"byte_end":199762,"line_start":1050,"line_end":1050,"column_start":12,"column_end":17},"name":"LioCb","qualname":"::sys::aio::LioCb","value":"LioCb { aiocbs }","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476}],"decl_id":null,"docs":" LIO Control Block.","sig":null,"attributes":[{"value":"/ LIO Control Block.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199584,"byte_end":199606,"line_start":1046,"line_end":1046,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199607,"byte_end":199610,"line_start":1047,"line_end":1047,"column_start":1,"column_end":4}},{"value":"/ The basic structure used to issue multiple AIO operations simultaneously.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199611,"byte_end":199688,"line_start":1048,"line_end":1048,"column_start":1,"column_end":78}},{"value":"cfg(not(any(target_os = \"ios\", target_os = \"macos\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199689,"byte_end":199745,"line_start":1049,"line_end":1049,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":474},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199971,"byte_end":199977,"line_start":1056,"line_end":1056,"column_start":9,"column_end":15},"name":"aiocbs","qualname":"::sys::aio::LioCb::aiocbs","value":"std::vec::Vec<sys::aio::AioCb<'a>>","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":" A collection of [`AioCb`]s.  All of these will be issued simultaneously\n by the [`listio`] method.","sig":null,"attributes":[{"value":"/ A collection of [`AioCb`]s.  All of these will be issued simultaneously","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199773,"byte_end":199848,"line_start":1051,"line_end":1051,"column_start":5,"column_end":80}},{"value":"/ by the [`listio`] method.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199853,"byte_end":199882,"line_start":1052,"line_end":1052,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199887,"byte_end":199890,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ [`AioCb`]: struct.AioCb.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199895,"byte_end":199927,"line_start":1054,"line_end":1054,"column_start":5,"column_end":37}},{"value":"/ [`listio`]: #method.listio","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199932,"byte_end":199962,"line_start":1055,"line_end":1055,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":200570,"byte_end":200583,"line_start":1073,"line_end":1073,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LioCb>::with_capacity","value":"pub fn with_capacity(usize) -> LioCb","parent":null,"children":[],"decl_id":null,"docs":" Initialize an empty `LioCb`\n","sig":null,"attributes":[{"value":"/ Initialize an empty `LioCb`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":200527,"byte_end":200558,"line_start":1072,"line_end":1072,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202672,"byte_end":202678,"line_start":1128,"line_end":1128,"column_start":12,"column_end":18},"name":"listio","qualname":"<LioCb>::listio","value":"pub fn listio(&mut Self, LioMode, SigevNotify) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Submits multiple asynchronous I/O requests with a single system call.","sig":null,"attributes":[{"value":"/ Submits multiple asynchronous I/O requests with a single system call.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":200801,"byte_end":200874,"line_start":1081,"line_end":1081,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":200879,"byte_end":200882,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ They are not guaranteed to complete atomically, and the order in which","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":200887,"byte_end":200961,"line_start":1083,"line_end":1083,"column_start":5,"column_end":79}},{"value":"/ the requests are carried out is not specified.  Reads, writes, and","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":200966,"byte_end":201036,"line_start":1084,"line_end":1084,"column_start":5,"column_end":75}},{"value":"/ fsyncs may be freely mixed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201041,"byte_end":201072,"line_start":1085,"line_end":1085,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201077,"byte_end":201080,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ This function is useful for reducing the context-switch overhead of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201085,"byte_end":201156,"line_start":1087,"line_end":1087,"column_start":5,"column_end":76}},{"value":"/ submitting many AIO operations.  It can also be used with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201161,"byte_end":201222,"line_start":1088,"line_end":1088,"column_start":5,"column_end":66}},{"value":"/ `LioMode::LIO_WAIT` to block on the result of several independent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201227,"byte_end":201296,"line_start":1089,"line_end":1089,"column_start":5,"column_end":74}},{"value":"/ operations.  Used that way, it is often useful in programs that","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201301,"byte_end":201368,"line_start":1090,"line_end":1090,"column_start":5,"column_end":72}},{"value":"/ otherwise make little use of AIO.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201373,"byte_end":201410,"line_start":1091,"line_end":1091,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201415,"byte_end":201418,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201423,"byte_end":201437,"line_start":1093,"line_end":1093,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201442,"byte_end":201445,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ Use `listio` to submit an aio operation and wait for its completion.  In","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201450,"byte_end":201526,"line_start":1095,"line_end":1095,"column_start":5,"column_end":81}},{"value":"/ this case, there is no need to use [`aio_suspend`] to wait or","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201531,"byte_end":201596,"line_start":1096,"line_end":1096,"column_start":5,"column_end":70}},{"value":"/ [`AioCb::error`] to poll.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201601,"byte_end":201630,"line_start":1097,"line_end":1097,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201635,"byte_end":201638,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201643,"byte_end":201650,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201655,"byte_end":201683,"line_start":1100,"line_end":1100,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201688,"byte_end":201711,"line_start":1101,"line_end":1101,"column_start":5,"column_end":28}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201716,"byte_end":201743,"line_start":1102,"line_end":1102,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201748,"byte_end":201788,"line_start":1103,"line_end":1103,"column_start":5,"column_end":45}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201793,"byte_end":201830,"line_start":1104,"line_end":1104,"column_start":5,"column_end":42}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201835,"byte_end":201864,"line_start":1105,"line_end":1105,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201869,"byte_end":201886,"line_start":1106,"line_end":1106,"column_start":5,"column_end":22}},{"value":"/ const WBUF: &[u8] = b\"abcdef123456\";","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201891,"byte_end":201931,"line_start":1107,"line_end":1107,"column_start":5,"column_end":45}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201936,"byte_end":201972,"line_start":1108,"line_end":1108,"column_start":5,"column_end":41}},{"value":"/ let mut liocb = LioCb::with_capacity(1);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":201977,"byte_end":202021,"line_start":1109,"line_end":1109,"column_start":5,"column_end":49}},{"value":"/ liocb.aiocbs.push(AioCb::from_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202026,"byte_end":202081,"line_start":1110,"line_end":1110,"column_start":5,"column_end":60}},{"value":"/     2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202086,"byte_end":202107,"line_start":1111,"line_end":1111,"column_start":5,"column_end":26}},{"value":"/     WBUF,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202112,"byte_end":202125,"line_start":1112,"line_end":1112,"column_start":5,"column_end":18}},{"value":"/     0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202130,"byte_end":202153,"line_start":1113,"line_end":1113,"column_start":5,"column_end":28}},{"value":"/     SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202158,"byte_end":202189,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/     LioOpcode::LIO_WRITE));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202194,"byte_end":202225,"line_start":1115,"line_end":1115,"column_start":5,"column_end":36}},{"value":"/ liocb.listio(LioMode::LIO_WAIT,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202230,"byte_end":202265,"line_start":1116,"line_end":1116,"column_start":5,"column_end":40}},{"value":"/              SigevNotify::SigevNone).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202270,"byte_end":202320,"line_start":1117,"line_end":1117,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(liocb.aio_return(0).unwrap() as usize, WBUF.len());","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202325,"byte_end":202391,"line_start":1118,"line_end":1118,"column_start":5,"column_end":71}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202396,"byte_end":202403,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202408,"byte_end":202415,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202420,"byte_end":202423,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202428,"byte_end":202444,"line_start":1122,"line_end":1122,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202449,"byte_end":202452,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ [`lio_listio`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/lio_listio.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202457,"byte_end":202550,"line_start":1124,"line_end":1124,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202555,"byte_end":202558,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ [`aio_suspend`]: fn.aio_suspend.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202563,"byte_end":202603,"line_start":1126,"line_end":1126,"column_start":5,"column_end":45}},{"value":"/ [`AioCb::error`]: struct.AioCb.html#method.error","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":202608,"byte_end":202660,"line_start":1127,"line_end":1127,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":205579,"byte_end":205594,"line_start":1197,"line_end":1197,"column_start":12,"column_end":27},"name":"listio_resubmit","qualname":"<LioCb>::listio_resubmit","value":"pub fn listio_resubmit(&mut Self, LioMode, SigevNotify) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resubmits any incomplete operations with [`lio_listio`].","sig":null,"attributes":[{"value":"/ Resubmits any incomplete operations with [`lio_listio`].","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203263,"byte_end":203323,"line_start":1144,"line_end":1144,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203328,"byte_end":203331,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ Sometimes, due to system resource limitations, an `lio_listio` call will","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203336,"byte_end":203412,"line_start":1146,"line_end":1146,"column_start":5,"column_end":81}},{"value":"/ return `EIO`, or `EAGAIN`.  Or, if a signal is received, it may return","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203417,"byte_end":203491,"line_start":1147,"line_end":1147,"column_start":5,"column_end":79}},{"value":"/ `EINTR`.  In any of these cases, only a subset of its constituent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203496,"byte_end":203565,"line_start":1148,"line_end":1148,"column_start":5,"column_end":74}},{"value":"/ operations will actually have been initiated.  `listio_resubmit` will","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203570,"byte_end":203643,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ resubmit any operations that are still uninitiated.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203648,"byte_end":203703,"line_start":1150,"line_end":1150,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203708,"byte_end":203711,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ After calling `listio_resubmit`, results should be collected by","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203716,"byte_end":203783,"line_start":1152,"line_end":1152,"column_start":5,"column_end":72}},{"value":"/ [`LioCb::aio_return`].","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203788,"byte_end":203814,"line_start":1153,"line_end":1153,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203819,"byte_end":203822,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203827,"byte_end":203841,"line_start":1155,"line_end":1155,"column_start":5,"column_end":19}},{"value":"/ ```no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203846,"byte_end":203859,"line_start":1156,"line_end":1156,"column_start":5,"column_end":18}},{"value":"/ # extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203864,"byte_end":203892,"line_start":1157,"line_end":1157,"column_start":5,"column_end":33}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203897,"byte_end":203920,"line_start":1158,"line_end":1158,"column_start":5,"column_end":28}},{"value":"/ # use nix::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203925,"byte_end":203946,"line_start":1159,"line_end":1159,"column_start":5,"column_end":26}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203951,"byte_end":203979,"line_start":1160,"line_end":1160,"column_start":5,"column_end":33}},{"value":"/ # use nix::sys::aio::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":203984,"byte_end":204011,"line_start":1161,"line_end":1161,"column_start":5,"column_end":32}},{"value":"/ # use nix::sys::signal::SigevNotify;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204016,"byte_end":204056,"line_start":1162,"line_end":1162,"column_start":5,"column_end":45}},{"value":"/ # use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204061,"byte_end":204098,"line_start":1163,"line_end":1163,"column_start":5,"column_end":42}},{"value":"/ # use std::{thread, time};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204103,"byte_end":204133,"line_start":1164,"line_end":1164,"column_start":5,"column_end":35}},{"value":"/ # use tempfile::tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204138,"byte_end":204167,"line_start":1165,"line_end":1165,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204172,"byte_end":204189,"line_start":1166,"line_end":1166,"column_start":5,"column_end":22}},{"value":"/ const WBUF: &[u8] = b\"abcdef123456\";","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204194,"byte_end":204234,"line_start":1167,"line_end":1167,"column_start":5,"column_end":45}},{"value":"/ let mut f = tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204239,"byte_end":204275,"line_start":1168,"line_end":1168,"column_start":5,"column_end":41}},{"value":"/ let mut liocb = LioCb::with_capacity(1);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204280,"byte_end":204324,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ liocb.aiocbs.push(AioCb::from_slice( f.as_raw_fd(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204329,"byte_end":204384,"line_start":1170,"line_end":1170,"column_start":5,"column_end":60}},{"value":"/     2,   //offset","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204389,"byte_end":204410,"line_start":1171,"line_end":1171,"column_start":5,"column_end":26}},{"value":"/     WBUF,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204415,"byte_end":204428,"line_start":1172,"line_end":1172,"column_start":5,"column_end":18}},{"value":"/     0,   //priority","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204433,"byte_end":204456,"line_start":1173,"line_end":1173,"column_start":5,"column_end":28}},{"value":"/     SigevNotify::SigevNone,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204461,"byte_end":204492,"line_start":1174,"line_end":1174,"column_start":5,"column_end":36}},{"value":"/     LioOpcode::LIO_WRITE));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204497,"byte_end":204528,"line_start":1175,"line_end":1175,"column_start":5,"column_end":36}},{"value":"/ let mut err = liocb.listio(LioMode::LIO_WAIT, SigevNotify::SigevNone);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204533,"byte_end":204607,"line_start":1176,"line_end":1176,"column_start":5,"column_end":79}},{"value":"/ while err == Err(Error::Sys(Errno::EIO)) ||","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204612,"byte_end":204659,"line_start":1177,"line_end":1177,"column_start":5,"column_end":52}},{"value":"/       err == Err(Error::Sys(Errno::EAGAIN)) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204664,"byte_end":204713,"line_start":1178,"line_end":1178,"column_start":5,"column_end":54}},{"value":"/     thread::sleep(time::Duration::from_millis(10));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204718,"byte_end":204773,"line_start":1179,"line_end":1179,"column_start":5,"column_end":60}},{"value":"/     err = liocb.listio_resubmit(LioMode::LIO_WAIT, SigevNotify::SigevNone);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204778,"byte_end":204857,"line_start":1180,"line_end":1180,"column_start":5,"column_end":84}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204862,"byte_end":204867,"line_start":1181,"line_end":1181,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(liocb.aio_return(0).unwrap() as usize, WBUF.len());","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204872,"byte_end":204938,"line_start":1182,"line_end":1182,"column_start":5,"column_end":71}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204943,"byte_end":204950,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204955,"byte_end":204962,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204967,"byte_end":204970,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204975,"byte_end":204991,"line_start":1186,"line_end":1186,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":204996,"byte_end":204999,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ [`lio_listio`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/lio_listio.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":205004,"byte_end":205097,"line_start":1188,"line_end":1188,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":205102,"byte_end":205105,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ [`lio_listio`]: http://pubs.opengroup.org/onlinepubs/9699919799/functions/lio_listio.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":205110,"byte_end":205203,"line_start":1190,"line_end":1190,"column_start":5,"column_end":98}},{"value":"/ [`LioCb::aio_return`]: struct.LioCb.html#method.aio_return","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":205208,"byte_end":205270,"line_start":1191,"line_end":1191,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207451,"byte_end":207461,"line_start":1243,"line_end":1243,"column_start":12,"column_end":22},"name":"aio_return","qualname":"<LioCb>::aio_return","value":"pub fn aio_return(&mut Self, usize) -> Result<isize>","parent":null,"children":[],"decl_id":null,"docs":" Collect final status for an individual `AioCb` submitted as part of an\n `LioCb`.","sig":null,"attributes":[{"value":"/ Collect final status for an individual `AioCb` submitted as part of an","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207058,"byte_end":207132,"line_start":1235,"line_end":1235,"column_start":5,"column_end":79}},{"value":"/ `LioCb`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207137,"byte_end":207149,"line_start":1236,"line_end":1236,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207154,"byte_end":207157,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ This is just like [`AioCb::aio_return`], except it takes into account","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207162,"byte_end":207235,"line_start":1238,"line_end":1238,"column_start":5,"column_end":78}},{"value":"/ operations that were restarted by [`LioCb::listio_resubmit`]","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207240,"byte_end":207304,"line_start":1239,"line_end":1239,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207309,"byte_end":207312,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ [`AioCb::aio_return`]: struct.AioCb.html#method.aio_return","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207317,"byte_end":207379,"line_start":1241,"line_end":1241,"column_start":5,"column_end":67}},{"value":"/ [`LioCb::listio_resubmit`]: #method.listio_resubmit","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207384,"byte_end":207439,"line_start":1242,"line_end":1242,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":208061,"byte_end":208066,"line_start":1259,"line_end":1259,"column_start":12,"column_end":17},"name":"error","qualname":"<LioCb>::error","value":"pub fn error(&mut Self, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve error status of an individual `AioCb` submitted as part of an\n `LioCb`.","sig":null,"attributes":[{"value":"/ Retrieve error status of an individual `AioCb` submitted as part of an","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207683,"byte_end":207757,"line_start":1251,"line_end":1251,"column_start":5,"column_end":79}},{"value":"/ `LioCb`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207762,"byte_end":207774,"line_start":1252,"line_end":1252,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207779,"byte_end":207782,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ This is just like [`AioCb::error`], except it takes into account","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207787,"byte_end":207855,"line_start":1254,"line_end":1254,"column_start":5,"column_end":73}},{"value":"/ operations that were restarted by [`LioCb::listio_resubmit`]","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207860,"byte_end":207924,"line_start":1255,"line_end":1255,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207929,"byte_end":207932,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ [`AioCb::error`]: struct.AioCb.html#method.error","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207937,"byte_end":207989,"line_start":1257,"line_end":1257,"column_start":5,"column_end":57}},{"value":"/ [`LioCb::listio_resubmit`]: #method.listio_resubmit","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":207994,"byte_end":208049,"line_start":1258,"line_end":1258,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":490},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"epoll","qualname":"::sys::epoll","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":4644},{"krate":0,"index":4666},{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4659},{"krate":0,"index":4660},{"krate":0,"index":4657},{"krate":0,"index":4651},{"krate":0,"index":4649},{"krate":0,"index":4646},{"krate":0,"index":4667},{"krate":0,"index":4686},{"krate":0,"index":4688},{"krate":0,"index":4690},{"krate":0,"index":4692},{"krate":0,"index":4694},{"krate":0,"index":4715},{"krate":0,"index":4718},{"krate":0,"index":4720},{"krate":0,"index":4723},{"krate":0,"index":4725},{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":4733},{"krate":0,"index":4735},{"krate":0,"index":4738},{"krate":0,"index":4741},{"krate":0,"index":4800},{"krate":0,"index":4822},{"krate":0,"index":4821},{"krate":0,"index":4819},{"krate":0,"index":4816},{"krate":0,"index":4817},{"krate":0,"index":4813},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4824},{"krate":0,"index":4846},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4837},{"krate":0,"index":4831},{"krate":0,"index":4829},{"krate":0,"index":4826},{"krate":0,"index":4847},{"krate":0,"index":4852},{"krate":0,"index":4854},{"krate":0,"index":4856},{"krate":0,"index":4858},{"krate":0,"index":4860},{"krate":0,"index":4867},{"krate":0,"index":4870},{"krate":0,"index":4872},{"krate":0,"index":4875},{"krate":0,"index":4877},{"krate":0,"index":4880},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4887},{"krate":0,"index":4890},{"krate":0,"index":4893},{"krate":0,"index":4910},{"krate":0,"index":4913},{"krate":0,"index":4912},{"krate":0,"index":500},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":510}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159325,"byte_end":159380,"line_start":9,"line_end":9,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4644},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":208997,"byte_end":209007,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"EpollFlags","qualname":"::sys::epoll::EpollFlags","value":"EpollFlags {  }","parent":null,"children":[{"krate":0,"index":4645}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4695},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209025,"byte_end":209032,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"EPOLLIN","qualname":"::sys::epoll::EpollFlags::EPOLLIN","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4696},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209042,"byte_end":209050,"line_start":12,"line_end":12,"column_start":9,"column_end":17},"name":"EPOLLPRI","qualname":"::sys::epoll::EpollFlags::EPOLLPRI","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4697},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209060,"byte_end":209068,"line_start":13,"line_end":13,"column_start":9,"column_end":17},"name":"EPOLLOUT","qualname":"::sys::epoll::EpollFlags::EPOLLOUT","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4698},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209078,"byte_end":209089,"line_start":14,"line_end":14,"column_start":9,"column_end":20},"name":"EPOLLRDNORM","qualname":"::sys::epoll::EpollFlags::EPOLLRDNORM","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4699},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209099,"byte_end":209110,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"name":"EPOLLRDBAND","qualname":"::sys::epoll::EpollFlags::EPOLLRDBAND","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4700},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209120,"byte_end":209131,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"name":"EPOLLWRNORM","qualname":"::sys::epoll::EpollFlags::EPOLLWRNORM","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4701},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209141,"byte_end":209152,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"name":"EPOLLWRBAND","qualname":"::sys::epoll::EpollFlags::EPOLLWRBAND","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4702},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209162,"byte_end":209170,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"name":"EPOLLMSG","qualname":"::sys::epoll::EpollFlags::EPOLLMSG","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4703},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209180,"byte_end":209188,"line_start":19,"line_end":19,"column_start":9,"column_end":17},"name":"EPOLLERR","qualname":"::sys::epoll::EpollFlags::EPOLLERR","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4704},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209198,"byte_end":209206,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"name":"EPOLLHUP","qualname":"::sys::epoll::EpollFlags::EPOLLHUP","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4705},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209216,"byte_end":209226,"line_start":21,"line_end":21,"column_start":9,"column_end":19},"name":"EPOLLRDHUP","qualname":"::sys::epoll::EpollFlags::EPOLLRDHUP","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4706},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209306,"byte_end":209320,"line_start":23,"line_end":23,"column_start":9,"column_end":23},"name":"EPOLLEXCLUSIVE","qualname":"::sys::epoll::EpollFlags::EPOLLEXCLUSIVE","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4707},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209372,"byte_end":209383,"line_start":25,"line_end":25,"column_start":9,"column_end":20},"name":"EPOLLWAKEUP","qualname":"::sys::epoll::EpollFlags::EPOLLWAKEUP","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_arch = \"mips\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4708},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209393,"byte_end":209405,"line_start":26,"line_end":26,"column_start":9,"column_end":21},"name":"EPOLLONESHOT","qualname":"::sys::epoll::EpollFlags::EPOLLONESHOT","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4709},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209415,"byte_end":209422,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"EPOLLET","qualname":"::sys::epoll::EpollFlags::EPOLLET","value":"EpollFlags","parent":{"krate":0,"index":4694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4801},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209521,"byte_end":209532,"line_start":34,"line_end":34,"column_start":5,"column_end":16},"name":"EpollCtlAdd","qualname":"::sys::epoll::EpollOp::EpollCtlAdd","value":"EpollOp::EpollCtlAdd","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4804},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209560,"byte_end":209571,"line_start":35,"line_end":35,"column_start":5,"column_end":16},"name":"EpollCtlDel","qualname":"::sys::epoll::EpollOp::EpollCtlDel","value":"EpollOp::EpollCtlDel","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4807},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209599,"byte_end":209610,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"EpollCtlMod","qualname":"::sys::epoll::EpollOp::EpollCtlMod","value":"EpollOp::EpollCtlMod","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4800},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209507,"byte_end":209514,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"name":"EpollOp","qualname":"::sys::epoll::EpollOp","value":"pub enum EpollOp { EpollCtlAdd = , EpollCtlDel = , EpollCtlMod = , }","parent":null,"children":[{"krate":0,"index":4801},{"krate":0,"index":4804},{"krate":0,"index":4807}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209485,"byte_end":209497,"line_start":32,"line_end":32,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":4824},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209668,"byte_end":209684,"line_start":40,"line_end":40,"column_start":16,"column_end":32},"name":"EpollCreateFlags","qualname":"::sys::epoll::EpollCreateFlags","value":"EpollCreateFlags {  }","parent":null,"children":[{"krate":0,"index":4825}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4861},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209702,"byte_end":209715,"line_start":41,"line_end":41,"column_start":9,"column_end":22},"name":"EPOLL_CLOEXEC","qualname":"::sys::epoll::EpollCreateFlags::EPOLL_CLOEXEC","value":"EpollCreateFlags","parent":{"krate":0,"index":4860},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4910},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209811,"byte_end":209821,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"EpollEvent","qualname":"::sys::epoll::EpollEvent","value":"EpollEvent {  }","parent":null,"children":[{"krate":0,"index":4911}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209726,"byte_end":209765,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209789,"byte_end":209799,"line_start":47,"line_end":47,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209886,"byte_end":209889,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<EpollEvent>::new","value":"pub fn new(EpollFlags, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":210041,"byte_end":210046,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"empty","qualname":"<EpollEvent>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":210124,"byte_end":210130,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"events","qualname":"<EpollEvent>::events","value":"pub fn events(&Self) -> EpollFlags","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":210239,"byte_end":210243,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"data","qualname":"<EpollEvent>::data","value":"pub fn data(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":210309,"byte_end":210321,"line_start":71,"line_end":71,"column_start":8,"column_end":20},"name":"epoll_create","qualname":"::sys::epoll::epoll_create","value":"pub fn epoll_create() -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":210292,"byte_end":210301,"line_start":70,"line_end":70,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":210438,"byte_end":210451,"line_start":78,"line_end":78,"column_start":8,"column_end":21},"name":"epoll_create1","qualname":"::sys::epoll::epoll_create1","value":"pub fn epoll_create1(EpollCreateFlags) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":210421,"byte_end":210430,"line_start":77,"line_end":77,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":210600,"byte_end":210609,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"epoll_ctl","qualname":"::sys::epoll::epoll_ctl","value":"pub fn epoll_ctl<'a, T>(RawFd, EpollOp, RawFd, T) -> Result<()> where\nT: Into<Option<&'a mut EpollEvent>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":210583,"byte_end":210592,"line_start":84,"line_end":84,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":211222,"byte_end":211232,"line_start":104,"line_end":104,"column_start":8,"column_end":18},"name":"epoll_wait","qualname":"::sys::epoll::epoll_wait","value":"pub fn epoll_wait(RawFd, &mut [EpollEvent], isize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":211205,"byte_end":211214,"line_start":103,"line_end":103,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":512},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/eventfd.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"eventfd","qualname":"::sys::eventfd","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/eventfd.rs","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":4915},{"krate":0,"index":4937},{"krate":0,"index":4933},{"krate":0,"index":4934},{"krate":0,"index":4930},{"krate":0,"index":4931},{"krate":0,"index":4928},{"krate":0,"index":4922},{"krate":0,"index":4920},{"krate":0,"index":4917},{"krate":0,"index":4938},{"krate":0,"index":4945},{"krate":0,"index":4947},{"krate":0,"index":4949},{"krate":0,"index":4951},{"krate":0,"index":4953},{"krate":0,"index":4962},{"krate":0,"index":4965},{"krate":0,"index":4967},{"krate":0,"index":4970},{"krate":0,"index":4972},{"krate":0,"index":4975},{"krate":0,"index":4977},{"krate":0,"index":4980},{"krate":0,"index":4982},{"krate":0,"index":4985},{"krate":0,"index":4988},{"krate":0,"index":517}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159608,"byte_end":159635,"line_start":20,"line_end":20,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":4915},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/eventfd.rs","byte_start":211613,"byte_end":211621,"line_start":7,"line_end":7,"column_start":16,"column_end":24},"name":"EfdFlags","qualname":"::sys::eventfd::EfdFlags","value":"EfdFlags {  }","parent":null,"children":[{"krate":0,"index":4916}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4954},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/eventfd.rs","byte_start":211645,"byte_end":211656,"line_start":8,"line_end":8,"column_start":9,"column_end":20},"name":"EFD_CLOEXEC","qualname":"::sys::eventfd::EfdFlags::EFD_CLOEXEC","value":"EfdFlags","parent":{"krate":0,"index":4953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4955},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/eventfd.rs","byte_start":211688,"byte_end":211700,"line_start":9,"line_end":9,"column_start":9,"column_end":21},"name":"EFD_NONBLOCK","qualname":"::sys::eventfd::EfdFlags::EFD_NONBLOCK","value":"EfdFlags","parent":{"krate":0,"index":4953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4956},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/eventfd.rs","byte_start":211732,"byte_end":211745,"line_start":10,"line_end":10,"column_start":9,"column_end":22},"name":"EFD_SEMAPHORE","qualname":"::sys::eventfd::EfdFlags::EFD_SEMAPHORE","value":"EfdFlags","parent":{"krate":0,"index":4953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":517},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/eventfd.rs","byte_start":211785,"byte_end":211792,"line_start":14,"line_end":14,"column_start":8,"column_end":15},"name":"eventfd","qualname":"::sys::eventfd::eventfd","value":"pub fn eventfd(libc::c_uint, EfdFlags) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":519},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ioctl","qualname":"::sys::ioctl","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":545}],"decl_id":null,"docs":" Provide helpers for making ioctl system calls.","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159654,"byte_end":159912,"line_start":23,"line_end":30,"column_start":1,"column_end":35}},{"value":"macro_use","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159913,"byte_end":159925,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ Provide helpers for making ioctl system calls.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":211962,"byte_end":212012,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212013,"byte_end":212016,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library is pretty low-level and messy. `ioctl` is not fun.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212017,"byte_end":212084,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212085,"byte_end":212088,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ What is an `ioctl`?","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212089,"byte_end":212112,"line_start":5,"line_end":5,"column_start":1,"column_end":24}},{"value":"/ ===================","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212113,"byte_end":212136,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212137,"byte_end":212140,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `ioctl` syscall is the grab-bag syscall on POSIX systems. Don't want to add a new","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212141,"byte_end":212230,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ syscall? Make it an `ioctl`! `ioctl` refers to both the syscall, and the commands that can be","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212231,"byte_end":212328,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ sent with it. `ioctl` stands for \"IO control\", and the commands are always sent to a file","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212329,"byte_end":212422,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212423,"byte_end":212438,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212439,"byte_end":212442,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ It is common to see `ioctl`s used for the following purposes:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212443,"byte_end":212508,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212509,"byte_end":212512,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/   * Provide read/write access to out-of-band data related to a device such as configuration","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212513,"byte_end":212608,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/     (for instance, setting serial port options)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212609,"byte_end":212660,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/   * Provide a mechanism for performing full-duplex data transfers (for instance, xfer on SPI","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212661,"byte_end":212757,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"/     devices).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212758,"byte_end":212775,"line_start":18,"line_end":18,"column_start":1,"column_end":18}},{"value":"/   * Provide access to control functions on a device (for example, on Linux you can send","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212776,"byte_end":212867,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/     commands like pause, resume, and eject to the CDROM device.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212868,"byte_end":212935,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/   * Do whatever else the device driver creator thought made most sense.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":212936,"byte_end":213011,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213012,"byte_end":213015,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ `ioctl`s are synchronous system calls and are similar to read and write calls in that regard.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213016,"byte_end":213113,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ They operate on file descriptors and have an identifier that specifies what the ioctl is.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213114,"byte_end":213207,"line_start":24,"line_end":24,"column_start":1,"column_end":94}},{"value":"/ Additionally they may read or write data and therefore need to pass along a data pointer.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213208,"byte_end":213301,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ Besides the semantics of the ioctls being confusing, the generation of this identifer can also","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213302,"byte_end":213400,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ be difficult.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213401,"byte_end":213418,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213419,"byte_end":213422,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Historically `ioctl` numbers were arbitrary hard-coded values. In Linux (before 2.6) and some","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213423,"byte_end":213520,"line_start":29,"line_end":29,"column_start":1,"column_end":98}},{"value":"/ unices this has changed to a more-ordered system where the ioctl numbers are partitioned into","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213521,"byte_end":213618,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ subcomponents (For linux this is documented in","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213619,"byte_end":213669,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/ [`Documentation/ioctl/ioctl-number.txt`](http://elixir.free-electrons.com/linux/latest/source/Documentation/ioctl/ioctl-number.txt)):","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213670,"byte_end":213807,"line_start":32,"line_end":32,"column_start":1,"column_end":138}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213808,"byte_end":213811,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/   * Number: The actual ioctl ID","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213812,"byte_end":213847,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/   * Type: A grouping of ioctls for a common purpose or driver","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213848,"byte_end":213913,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/   * Size: The size in bytes of the data that will be transferred","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213914,"byte_end":213982,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/   * Direction: Whether there is any data and if it's read, write, or both","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":213983,"byte_end":214060,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214061,"byte_end":214064,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Newer drivers should not generate complete integer identifiers for their `ioctl`s instead","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214065,"byte_end":214158,"line_start":39,"line_end":39,"column_start":1,"column_end":94}},{"value":"/ preferring to use the 4 components above to generate the final ioctl identifier. Because of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214159,"byte_end":214254,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/ how old `ioctl`s are, however, there are many hard-coded `ioctl` identifiers. These are","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214255,"byte_end":214346,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ commonly referred to as \"bad\" in `ioctl` documentation.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214347,"byte_end":214406,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214407,"byte_end":214410,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Defining `ioctl`s","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214411,"byte_end":214432,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/ =================","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214433,"byte_end":214454,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214455,"byte_end":214458,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This library provides several `ioctl_*!` macros for binding `ioctl`s. These generate public","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214459,"byte_end":214554,"line_start":47,"line_end":47,"column_start":1,"column_end":96}},{"value":"/ unsafe functions that can then be used for calling the ioctl. This macro has a few different","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214555,"byte_end":214651,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/ ways it can be used depending on the specific ioctl you're working with.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214652,"byte_end":214728,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214729,"byte_end":214732,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ A simple `ioctl` is `SPI_IOC_RD_MODE`. This ioctl works with the SPI interface on Linux. This","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214733,"byte_end":214830,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ specific `ioctl` reads the mode of the SPI device as a `u8`. It's declared in","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214831,"byte_end":214912,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ `/include/uapi/linux/spi/spidev.h` as `_IOR(SPI_IOC_MAGIC, 1, __u8)`. Since it uses the `_IOR`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":214913,"byte_end":215011,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ macro, we know it's a `read` ioctl and can use the `ioctl_read!` macro as follows:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215012,"byte_end":215098,"line_start":54,"line_end":54,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215099,"byte_end":215102,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215103,"byte_end":215110,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215111,"byte_end":215147,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ const SPI_IOC_MAGIC: u8 = b'k'; // Defined in linux/spi/spidev.h","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215148,"byte_end":215216,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ const SPI_IOC_TYPE_MODE: u8 = 1;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215217,"byte_end":215253,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ ioctl_read!(spi_read_mode, SPI_IOC_MAGIC, SPI_IOC_TYPE_MODE, u8);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215254,"byte_end":215323,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/ # fn main() {}","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215324,"byte_end":215342,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215343,"byte_end":215350,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215351,"byte_end":215354,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This generates the function:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215355,"byte_end":215387,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215388,"byte_end":215391,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215392,"byte_end":215399,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215400,"byte_end":215436,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ # use std::mem;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215437,"byte_end":215456,"line_start":68,"line_end":68,"column_start":1,"column_end":20}},{"value":"/ # use nix::{libc, Result};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215457,"byte_end":215487,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215488,"byte_end":215516,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/ # use nix::libc::c_int as c_int;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215517,"byte_end":215553,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/ # const SPI_IOC_MAGIC: u8 = b'k'; // Defined in linux/spi/spidev.h","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215554,"byte_end":215624,"line_start":72,"line_end":72,"column_start":1,"column_end":71}},{"value":"/ # const SPI_IOC_TYPE_MODE: u8 = 1;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215625,"byte_end":215663,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/ pub unsafe fn spi_read_mode(fd: c_int, data: *mut u8) -> Result<c_int> {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215664,"byte_end":215740,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/     let res = libc::ioctl(fd, request_code_read!(SPI_IOC_MAGIC, SPI_IOC_TYPE_MODE, mem::size_of::<u8>()), data);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215741,"byte_end":215857,"line_start":75,"line_end":75,"column_start":1,"column_end":117}},{"value":"/     Errno::result(res)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215858,"byte_end":215884,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215885,"byte_end":215890,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215891,"byte_end":215909,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215910,"byte_end":215917,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215918,"byte_end":215921,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The return value for the wrapper functions generated by the `ioctl_*!` macros are `nix::Error`s.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":215922,"byte_end":216022,"line_start":81,"line_end":81,"column_start":1,"column_end":101}},{"value":"/ These are generated by assuming the return value of the ioctl is `-1` on error and everything","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216023,"byte_end":216120,"line_start":82,"line_end":82,"column_start":1,"column_end":98}},{"value":"/ else is a valid return value. If this is not the case, `Result::map` can be used to map some","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216121,"byte_end":216217,"line_start":83,"line_end":83,"column_start":1,"column_end":97}},{"value":"/ of the range of \"good\" values (-Inf..-2, 0..Inf) into a smaller range in a helper function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216218,"byte_end":216313,"line_start":84,"line_end":84,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216314,"byte_end":216317,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Writing `ioctl`s generally use pointers as their data source and these should use the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216318,"byte_end":216407,"line_start":86,"line_end":86,"column_start":1,"column_end":90}},{"value":"/ `ioctl_write_ptr!`. But in some cases an `int` is passed directly. For these `ioctl`s use the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216408,"byte_end":216505,"line_start":87,"line_end":87,"column_start":1,"column_end":98}},{"value":"/ `ioctl_write_int!` macro. This variant does not take a type as the last argument:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216506,"byte_end":216591,"line_start":88,"line_end":88,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216592,"byte_end":216595,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216596,"byte_end":216603,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216604,"byte_end":216640,"line_start":91,"line_end":91,"column_start":1,"column_end":37}},{"value":"/ const HCI_IOC_MAGIC: u8 = b'k';","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216641,"byte_end":216676,"line_start":92,"line_end":92,"column_start":1,"column_end":36}},{"value":"/ const HCI_IOC_HCIDEVUP: u8 = 1;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216677,"byte_end":216712,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/ ioctl_write_int!(hci_dev_up, HCI_IOC_MAGIC, HCI_IOC_HCIDEVUP);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216713,"byte_end":216779,"line_start":94,"line_end":94,"column_start":1,"column_end":67}},{"value":"/ # fn main() {}","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216780,"byte_end":216798,"line_start":95,"line_end":95,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216799,"byte_end":216806,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216807,"byte_end":216810,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ Some `ioctl`s don't transfer any data, and those should use `ioctl_none!`. This macro","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216811,"byte_end":216900,"line_start":98,"line_end":98,"column_start":1,"column_end":90}},{"value":"/ doesn't take a type and so it is declared similar to the `write_int` variant shown above.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216901,"byte_end":216994,"line_start":99,"line_end":99,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216995,"byte_end":216998,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ The mode for a given `ioctl` should be clear from the documentation if it has good","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":216999,"byte_end":217085,"line_start":101,"line_end":101,"column_start":1,"column_end":87}},{"value":"/ documentation. Otherwise it will be clear based on the macro used to generate the `ioctl`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217086,"byte_end":217179,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"/ number where `_IO`, `_IOR`, `_IOW`, and `_IOWR` map to \"none\", \"read\", \"write_*\", and \"readwrite\"","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217180,"byte_end":217281,"line_start":103,"line_end":103,"column_start":1,"column_end":102}},{"value":"/ respectively. To determine the specific `write_` variant to use you'll need to find","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217282,"byte_end":217369,"line_start":104,"line_end":104,"column_start":1,"column_end":88}},{"value":"/ what the argument type is supposed to be. If it's an `int`, then `write_int` should be used,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217370,"byte_end":217466,"line_start":105,"line_end":105,"column_start":1,"column_end":97}},{"value":"/ otherwise it should be a pointer and `write_ptr` should be used. On Linux the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217467,"byte_end":217548,"line_start":106,"line_end":106,"column_start":1,"column_end":82}},{"value":"/ [`ioctl_list` man page](http://man7.org/linux/man-pages/man2/ioctl_list.2.html) describes a","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217549,"byte_end":217644,"line_start":107,"line_end":107,"column_start":1,"column_end":96}},{"value":"/ large number of `ioctl`s and describes their argument data type.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217645,"byte_end":217713,"line_start":108,"line_end":108,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217714,"byte_end":217717,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Using \"bad\" `ioctl`s","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217718,"byte_end":217742,"line_start":110,"line_end":110,"column_start":1,"column_end":25}},{"value":"/ --------------------","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217743,"byte_end":217767,"line_start":111,"line_end":111,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217768,"byte_end":217771,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ As mentioned earlier, there are many old `ioctl`s that do not use the newer method of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217772,"byte_end":217861,"line_start":113,"line_end":113,"column_start":1,"column_end":90}},{"value":"/ generating `ioctl` numbers and instead use hardcoded values. These can be used with the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217862,"byte_end":217953,"line_start":114,"line_end":114,"column_start":1,"column_end":92}},{"value":"/ `ioctl_*_bad!` macros. This naming comes from the Linux kernel which refers to these","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":217954,"byte_end":218042,"line_start":115,"line_end":115,"column_start":1,"column_end":89}},{"value":"/ `ioctl`s as \"bad\". These are a different variant as they bypass calling the macro that generates","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218043,"byte_end":218143,"line_start":116,"line_end":116,"column_start":1,"column_end":101}},{"value":"/ the ioctl number and instead use the defined value directly.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218144,"byte_end":218208,"line_start":117,"line_end":117,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218209,"byte_end":218212,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ For example the `TCGETS` `ioctl` reads a `termios` data structure for a given file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218213,"byte_end":218311,"line_start":119,"line_end":119,"column_start":1,"column_end":99}},{"value":"/ It's defined as `0x5401` in `ioctls.h` on Linux and can be implemented as:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218312,"byte_end":218390,"line_start":120,"line_end":120,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218391,"byte_end":218394,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218395,"byte_end":218402,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218403,"byte_end":218439,"line_start":123,"line_end":123,"column_start":1,"column_end":37}},{"value":"/ # #[cfg(any(target_os = \"android\", target_os = \"linux\"))]","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218440,"byte_end":218501,"line_start":124,"line_end":124,"column_start":1,"column_end":62}},{"value":"/ # use nix::libc::TCGETS as TCGETS;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218502,"byte_end":218540,"line_start":125,"line_end":125,"column_start":1,"column_end":39}},{"value":"/ # #[cfg(any(target_os = \"android\", target_os = \"linux\"))]","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218541,"byte_end":218602,"line_start":126,"line_end":126,"column_start":1,"column_end":62}},{"value":"/ # use nix::libc::termios as termios;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218603,"byte_end":218643,"line_start":127,"line_end":127,"column_start":1,"column_end":41}},{"value":"/ # #[cfg(any(target_os = \"android\", target_os = \"linux\"))]","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218644,"byte_end":218705,"line_start":128,"line_end":128,"column_start":1,"column_end":62}},{"value":"/ ioctl_read_bad!(tcgets, TCGETS, termios);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218706,"byte_end":218751,"line_start":129,"line_end":129,"column_start":1,"column_end":46}},{"value":"/ # fn main() {}","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218752,"byte_end":218770,"line_start":130,"line_end":130,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218771,"byte_end":218778,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218779,"byte_end":218782,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The generated function has the same form as that generated by `ioctl_read!`:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218783,"byte_end":218863,"line_start":133,"line_end":133,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218864,"byte_end":218867,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218868,"byte_end":218879,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"/ pub unsafe fn tcgets(fd: c_int, data: *mut termios) -> Result<c_int>;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218880,"byte_end":218953,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218954,"byte_end":218961,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218962,"byte_end":218965,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Working with Arrays","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218966,"byte_end":218989,"line_start":139,"line_end":139,"column_start":1,"column_end":24}},{"value":"/ -------------------","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":218990,"byte_end":219013,"line_start":140,"line_end":140,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219014,"byte_end":219017,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ Some `ioctl`s work with entire arrays of elements. These are supported by the `ioctl_*_buf`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219018,"byte_end":219113,"line_start":142,"line_end":142,"column_start":1,"column_end":96}},{"value":"/ family of macros: `ioctl_read_buf`, `ioctl_write_buf`, and `ioctl_readwrite_buf`. Note that","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219114,"byte_end":219209,"line_start":143,"line_end":143,"column_start":1,"column_end":96}},{"value":"/ there are no \"bad\" versions for working with buffers. The generated functions include a `len`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219210,"byte_end":219307,"line_start":144,"line_end":144,"column_start":1,"column_end":98}},{"value":"/ argument to specify the number of elements (where the type of each element is specified in the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219308,"byte_end":219406,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"/ macro).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219407,"byte_end":219418,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219419,"byte_end":219422,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Again looking to the SPI `ioctl`s on Linux for an example, there is a `SPI_IOC_MESSAGE` `ioctl`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219423,"byte_end":219522,"line_start":148,"line_end":148,"column_start":1,"column_end":100}},{"value":"/ that queues up multiple SPI messages by writing an entire array of `spi_ioc_transfer` structs.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219523,"byte_end":219621,"line_start":149,"line_end":149,"column_start":1,"column_end":99}},{"value":"/ `linux/spi/spidev.h` defines a macro to calculate the `ioctl` number like:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219622,"byte_end":219700,"line_start":150,"line_end":150,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219701,"byte_end":219704,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ ```C","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219705,"byte_end":219713,"line_start":152,"line_end":152,"column_start":1,"column_end":9}},{"value":"/ #define SPI_IOC_MAGIC 'k'","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219714,"byte_end":219743,"line_start":153,"line_end":153,"column_start":1,"column_end":30}},{"value":"/ #define SPI_MSGSIZE(N) ...","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219744,"byte_end":219774,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/ #define SPI_IOC_MESSAGE(N) _IOW(SPI_IOC_MAGIC, 0, char[SPI_MSGSIZE(N)])","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219775,"byte_end":219850,"line_start":155,"line_end":155,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219851,"byte_end":219858,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219859,"byte_end":219862,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The `SPI_MSGSIZE(N)` calculation is already handled by the `ioctl_*!` macros, so all that's","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219863,"byte_end":219958,"line_start":158,"line_end":158,"column_start":1,"column_end":96}},{"value":"/ needed to define this `ioctl` is:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219959,"byte_end":219996,"line_start":159,"line_end":159,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":219997,"byte_end":220000,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220001,"byte_end":220008,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220009,"byte_end":220045,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/ const SPI_IOC_MAGIC: u8 = b'k'; // Defined in linux/spi/spidev.h","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220046,"byte_end":220114,"line_start":163,"line_end":163,"column_start":1,"column_end":69}},{"value":"/ const SPI_IOC_TYPE_MESSAGE: u8 = 0;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220115,"byte_end":220154,"line_start":164,"line_end":164,"column_start":1,"column_end":40}},{"value":"/ # pub struct spi_ioc_transfer(u64);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220155,"byte_end":220194,"line_start":165,"line_end":165,"column_start":1,"column_end":40}},{"value":"/ ioctl_write_buf!(spi_transfer, SPI_IOC_MAGIC, SPI_IOC_TYPE_MESSAGE, spi_ioc_transfer);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220195,"byte_end":220285,"line_start":166,"line_end":166,"column_start":1,"column_end":91}},{"value":"/ # fn main() {}","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220286,"byte_end":220304,"line_start":167,"line_end":167,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220305,"byte_end":220312,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220313,"byte_end":220316,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ This generates a function like:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220317,"byte_end":220352,"line_start":170,"line_end":170,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220353,"byte_end":220356,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220357,"byte_end":220364,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220365,"byte_end":220401,"line_start":173,"line_end":173,"column_start":1,"column_end":37}},{"value":"/ # use std::mem;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220402,"byte_end":220421,"line_start":174,"line_end":174,"column_start":1,"column_end":20}},{"value":"/ # use nix::{libc, Result};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220422,"byte_end":220452,"line_start":175,"line_end":175,"column_start":1,"column_end":31}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220453,"byte_end":220481,"line_start":176,"line_end":176,"column_start":1,"column_end":29}},{"value":"/ # use nix::libc::c_int as c_int;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220482,"byte_end":220518,"line_start":177,"line_end":177,"column_start":1,"column_end":37}},{"value":"/ # const SPI_IOC_MAGIC: u8 = b'k';","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220519,"byte_end":220556,"line_start":178,"line_end":178,"column_start":1,"column_end":38}},{"value":"/ # const SPI_IOC_TYPE_MESSAGE: u8 = 0;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220557,"byte_end":220598,"line_start":179,"line_end":179,"column_start":1,"column_end":42}},{"value":"/ # pub struct spi_ioc_transfer(u64);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220599,"byte_end":220638,"line_start":180,"line_end":180,"column_start":1,"column_end":40}},{"value":"/ pub unsafe fn spi_message(fd: c_int, data: &mut [spi_ioc_transfer]) -> Result<c_int> {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220639,"byte_end":220729,"line_start":181,"line_end":181,"column_start":1,"column_end":91}},{"value":"/     let res = libc::ioctl(fd,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220730,"byte_end":220763,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"/                           request_code_write!(SPI_IOC_MAGIC, SPI_IOC_TYPE_MESSAGE, data.len() * mem::size_of::<spi_ioc_transfer>()),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220764,"byte_end":220900,"line_start":183,"line_end":183,"column_start":1,"column_end":137}},{"value":"/                           data);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220901,"byte_end":220937,"line_start":184,"line_end":184,"column_start":1,"column_end":37}},{"value":"/     Errno::result(res)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220938,"byte_end":220964,"line_start":185,"line_end":185,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220965,"byte_end":220970,"line_start":186,"line_end":186,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220971,"byte_end":220989,"line_start":187,"line_end":187,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220990,"byte_end":220997,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":220998,"byte_end":221001,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Finding `ioctl` Documentation","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221002,"byte_end":221035,"line_start":190,"line_end":190,"column_start":1,"column_end":34}},{"value":"/ -----------------------------","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221036,"byte_end":221069,"line_start":191,"line_end":191,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221070,"byte_end":221073,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ For Linux, look at your system's headers. For example, `/usr/include/linux/input.h` has a lot","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221074,"byte_end":221171,"line_start":193,"line_end":193,"column_start":1,"column_end":98}},{"value":"/ of lines defining macros which use `_IO`, `_IOR`, `_IOW`, `_IOC`, and `_IOWR`. Some `ioctl`s are","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221172,"byte_end":221272,"line_start":194,"line_end":194,"column_start":1,"column_end":101}},{"value":"/ documented directly in the headers defining their constants, but others have more extensive","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221273,"byte_end":221368,"line_start":195,"line_end":195,"column_start":1,"column_end":96}},{"value":"/ documentation in man pages (like termios' `ioctl`s which are in `tty_ioctl(4)`).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221369,"byte_end":221453,"line_start":196,"line_end":196,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221454,"byte_end":221457,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Documenting the Generated Functions","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221458,"byte_end":221497,"line_start":198,"line_end":198,"column_start":1,"column_end":40}},{"value":"/ ===================================","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221498,"byte_end":221537,"line_start":199,"line_end":199,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221538,"byte_end":221541,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ In many cases, users will wish for the functions generated by the `ioctl`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221542,"byte_end":221619,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ macro to be public and documented. For this reason, the generated functions","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221620,"byte_end":221699,"line_start":202,"line_end":202,"column_start":1,"column_end":80}},{"value":"/ are public by default. If you wish to hide the ioctl, you will need to put","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221700,"byte_end":221778,"line_start":203,"line_end":203,"column_start":1,"column_end":79}},{"value":"/ them in a private module.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221779,"byte_end":221808,"line_start":204,"line_end":204,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221809,"byte_end":221812,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ For documentation, it is possible to use doc comments inside the `ioctl_*!` macros. Here is an","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221813,"byte_end":221911,"line_start":206,"line_end":206,"column_start":1,"column_end":99}},{"value":"/ example :","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221912,"byte_end":221925,"line_start":207,"line_end":207,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221926,"byte_end":221929,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221930,"byte_end":221937,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221938,"byte_end":221974,"line_start":210,"line_end":210,"column_start":1,"column_end":37}},{"value":"/ # use nix::libc::c_int;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":221975,"byte_end":222002,"line_start":211,"line_end":211,"column_start":1,"column_end":28}},{"value":"/ ioctl_read! {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222003,"byte_end":222020,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"/     /// Make the given terminal the controlling terminal of the calling process. The calling","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222021,"byte_end":222117,"line_start":213,"line_end":213,"column_start":1,"column_end":97}},{"value":"/     /// process must be a session leader and not have a controlling terminal already. If the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222118,"byte_end":222214,"line_start":214,"line_end":214,"column_start":1,"column_end":97}},{"value":"/     /// terminal is already the controlling terminal of a different session group then the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222215,"byte_end":222309,"line_start":215,"line_end":215,"column_start":1,"column_end":95}},{"value":"/     /// ioctl will fail with **EPERM**, unless the caller is root (more precisely: has the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222310,"byte_end":222404,"line_start":216,"line_end":216,"column_start":1,"column_end":95}},{"value":"/     /// **CAP_SYS_ADMIN** capability) and arg equals 1, in which case the terminal is stolen","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222405,"byte_end":222501,"line_start":217,"line_end":217,"column_start":1,"column_end":97}},{"value":"/     /// and all processes that had it as controlling terminal lose it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222502,"byte_end":222576,"line_start":218,"line_end":218,"column_start":1,"column_end":75}},{"value":"/     tiocsctty, b't', 19, c_int","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222577,"byte_end":222611,"line_start":219,"line_end":219,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222612,"byte_end":222617,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222618,"byte_end":222621,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ # fn main() {}","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222622,"byte_end":222640,"line_start":222,"line_end":222,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/mod.rs","byte_start":222641,"byte_end":222648,"line_start":223,"line_end":223,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":521},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":241372,"byte_end":241386,"line_start":7,"line_end":7,"column_start":10,"column_end":24},"name":"ioctl_num_type","qualname":"::sys::ioctl::linux::ioctl_num_type","value":"::libc::c_ulong","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(any(target_os = \"android\", target_env = \"musl\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":241287,"byte_end":241347,"line_start":5,"line_end":5,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":522},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":241473,"byte_end":241489,"line_start":10,"line_end":10,"column_start":10,"column_end":26},"name":"ioctl_param_type","qualname":"::sys::ioctl::linux::ioctl_param_type","value":"::libc::c_ulong","parent":null,"children":[],"decl_id":null,"docs":" The datatype used for the 3rd argument\n","sig":null,"attributes":[{"value":"/ The datatype used for the 3rd argument","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":241406,"byte_end":241448,"line_start":8,"line_end":8,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":523},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":241535,"byte_end":241541,"line_start":13,"line_end":13,"column_start":11,"column_end":17},"name":"NRBITS","qualname":"::sys::ioctl::linux::NRBITS","value":"ioctl_num_type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":524},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":241588,"byte_end":241596,"line_start":15,"line_end":15,"column_start":11,"column_end":19},"name":"TYPEBITS","qualname":"::sys::ioctl::linux::TYPEBITS","value":"ioctl_num_type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":526},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242254,"byte_end":242258,"line_start":39,"line_end":39,"column_start":15,"column_end":19},"name":"NONE","qualname":"::sys::ioctl::linux::consts::NONE","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":527},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242301,"byte_end":242305,"line_start":41,"line_end":41,"column_start":15,"column_end":19},"name":"READ","qualname":"::sys::ioctl::linux::consts::READ","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":528},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242348,"byte_end":242353,"line_start":43,"line_end":43,"column_start":15,"column_end":20},"name":"WRITE","qualname":"::sys::ioctl::linux::consts::WRITE","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":529},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242396,"byte_end":242404,"line_start":45,"line_end":45,"column_start":15,"column_end":23},"name":"SIZEBITS","qualname":"::sys::ioctl::linux::consts::SIZEBITS","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":530},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242448,"byte_end":242455,"line_start":47,"line_end":47,"column_start":15,"column_end":22},"name":"DIRBITS","qualname":"::sys::ioctl::linux::consts::DIRBITS","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":532},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242519,"byte_end":242526,"line_start":53,"line_end":53,"column_start":11,"column_end":18},"name":"NRSHIFT","qualname":"::sys::ioctl::linux::NRSHIFT","value":"ioctl_num_type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":533},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242573,"byte_end":242582,"line_start":55,"line_end":55,"column_start":11,"column_end":20},"name":"TYPESHIFT","qualname":"::sys::ioctl::linux::TYPESHIFT","value":"ioctl_num_type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":534},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242662,"byte_end":242671,"line_start":57,"line_end":57,"column_start":11,"column_end":20},"name":"SIZESHIFT","qualname":"::sys::ioctl::linux::SIZESHIFT","value":"ioctl_num_type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":535},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242755,"byte_end":242763,"line_start":59,"line_end":59,"column_start":11,"column_end":19},"name":"DIRSHIFT","qualname":"::sys::ioctl::linux::DIRSHIFT","value":"ioctl_num_type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":536},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242848,"byte_end":242854,"line_start":62,"line_end":62,"column_start":11,"column_end":17},"name":"NRMASK","qualname":"::sys::ioctl::linux::NRMASK","value":"ioctl_num_type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":537},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242917,"byte_end":242925,"line_start":64,"line_end":64,"column_start":11,"column_end":19},"name":"TYPEMASK","qualname":"::sys::ioctl::linux::TYPEMASK","value":"ioctl_num_type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":538},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":242990,"byte_end":242998,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"SIZEMASK","qualname":"::sys::ioctl::linux::SIZEMASK","value":"ioctl_num_type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":539},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ioctl/linux.rs","byte_start":243063,"byte_end":243070,"line_start":68,"line_end":68,"column_start":11,"column_end":18},"name":"DIRMASK","qualname":"::sys::ioctl::linux::DIRMASK","value":"ioctl_num_type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":559},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/memfd.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"memfd","qualname":"::sys::memfd","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/memfd.rs","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":5012},{"krate":0,"index":5034},{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5027},{"krate":0,"index":5028},{"krate":0,"index":5025},{"krate":0,"index":5019},{"krate":0,"index":5017},{"krate":0,"index":5014},{"krate":0,"index":5035},{"krate":0,"index":5041},{"krate":0,"index":5043},{"krate":0,"index":5045},{"krate":0,"index":5047},{"krate":0,"index":5049},{"krate":0,"index":5057},{"krate":0,"index":5060},{"krate":0,"index":5062},{"krate":0,"index":5065},{"krate":0,"index":5067},{"krate":0,"index":5070},{"krate":0,"index":5072},{"krate":0,"index":5075},{"krate":0,"index":5077},{"krate":0,"index":5080},{"krate":0,"index":5083},{"krate":0,"index":565}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159942,"byte_end":159969,"line_start":34,"line_end":34,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5012},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/memfd.rs","byte_start":246029,"byte_end":246044,"line_start":8,"line_end":8,"column_start":16,"column_end":31},"name":"MemFdCreateFlag","qualname":"::sys::memfd::MemFdCreateFlag","value":"MemFdCreateFlag {  }","parent":null,"children":[{"krate":0,"index":5013}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5050},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/memfd.rs","byte_start":246069,"byte_end":246080,"line_start":9,"line_end":9,"column_start":9,"column_end":20},"name":"MFD_CLOEXEC","qualname":"::sys::memfd::MemFdCreateFlag::MFD_CLOEXEC","value":"MemFdCreateFlag","parent":{"krate":0,"index":5049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5051},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/memfd.rs","byte_start":246090,"byte_end":246107,"line_start":10,"line_end":10,"column_start":9,"column_end":26},"name":"MFD_ALLOW_SEALING","qualname":"::sys::memfd::MemFdCreateFlag::MFD_ALLOW_SEALING","value":"MemFdCreateFlag","parent":{"krate":0,"index":5049},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":565},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/memfd.rs","byte_start":246126,"byte_end":246138,"line_start":14,"line_end":14,"column_start":8,"column_end":20},"name":"memfd_create","qualname":"::sys::memfd::memfd_create","value":"pub fn memfd_create(&CStr, MemFdCreateFlag) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":567},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mman","qualname":"::sys::mman","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":5103},{"krate":0,"index":5125},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5116},{"krate":0,"index":5110},{"krate":0,"index":5108},{"krate":0,"index":5105},{"krate":0,"index":5126},{"krate":0,"index":5136},{"krate":0,"index":5138},{"krate":0,"index":5140},{"krate":0,"index":5142},{"krate":0,"index":5144},{"krate":0,"index":5156},{"krate":0,"index":5159},{"krate":0,"index":5161},{"krate":0,"index":5164},{"krate":0,"index":5166},{"krate":0,"index":5169},{"krate":0,"index":5171},{"krate":0,"index":5174},{"krate":0,"index":5176},{"krate":0,"index":5179},{"krate":0,"index":5182},{"krate":0,"index":5214},{"krate":0,"index":5236},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5227},{"krate":0,"index":5221},{"krate":0,"index":5219},{"krate":0,"index":5216},{"krate":0,"index":5237},{"krate":0,"index":5263},{"krate":0,"index":5265},{"krate":0,"index":5267},{"krate":0,"index":5269},{"krate":0,"index":5271},{"krate":0,"index":5293},{"krate":0,"index":5296},{"krate":0,"index":5298},{"krate":0,"index":5301},{"krate":0,"index":5303},{"krate":0,"index":5306},{"krate":0,"index":5308},{"krate":0,"index":5311},{"krate":0,"index":5313},{"krate":0,"index":5316},{"krate":0,"index":5319},{"krate":0,"index":5387},{"krate":0,"index":5455},{"krate":0,"index":5454},{"krate":0,"index":5452},{"krate":0,"index":5449},{"krate":0,"index":5450},{"krate":0,"index":5446},{"krate":0,"index":5444},{"krate":0,"index":5441},{"krate":0,"index":5442},{"krate":0,"index":5439},{"krate":0,"index":5457},{"krate":0,"index":5479},{"krate":0,"index":5475},{"krate":0,"index":5476},{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5470},{"krate":0,"index":5464},{"krate":0,"index":5462},{"krate":0,"index":5459},{"krate":0,"index":5480},{"krate":0,"index":5489},{"krate":0,"index":5491},{"krate":0,"index":5493},{"krate":0,"index":5495},{"krate":0,"index":5497},{"krate":0,"index":5506},{"krate":0,"index":5509},{"krate":0,"index":5511},{"krate":0,"index":5514},{"krate":0,"index":5516},{"krate":0,"index":5519},{"krate":0,"index":5521},{"krate":0,"index":5524},{"krate":0,"index":5526},{"krate":0,"index":5529},{"krate":0,"index":5532},{"krate":0,"index":5557},{"krate":0,"index":5579},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5570},{"krate":0,"index":5564},{"krate":0,"index":5562},{"krate":0,"index":5559},{"krate":0,"index":5580},{"krate":0,"index":5586},{"krate":0,"index":5588},{"krate":0,"index":5590},{"krate":0,"index":5592},{"krate":0,"index":5594},{"krate":0,"index":5602},{"krate":0,"index":5605},{"krate":0,"index":5607},{"krate":0,"index":5610},{"krate":0,"index":5612},{"krate":0,"index":5615},{"krate":0,"index":5617},{"krate":0,"index":5620},{"krate":0,"index":5622},{"krate":0,"index":5625},{"krate":0,"index":5628},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":593}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5103},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":246708,"byte_end":246717,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"ProtFlags","qualname":"::sys::mman::ProtFlags","value":"ProtFlags {  }","parent":null,"children":[{"krate":0,"index":5104}],"decl_id":null,"docs":" Desired memory protection of a memory mapping.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5145},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":246773,"byte_end":246782,"line_start":16,"line_end":16,"column_start":9,"column_end":18},"name":"PROT_NONE","qualname":"::sys::mman::ProtFlags::PROT_NONE","value":"ProtFlags","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":" Pages cannot be accessed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5146},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":246823,"byte_end":246832,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"name":"PROT_READ","qualname":"::sys::mman::ProtFlags::PROT_READ","value":"ProtFlags","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":" Pages can be read.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5147},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":246876,"byte_end":246886,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"PROT_WRITE","qualname":"::sys::mman::ProtFlags::PROT_WRITE","value":"ProtFlags","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":" Pages can be written.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5148},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":246930,"byte_end":246939,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"name":"PROT_EXEC","qualname":"::sys::mman::ProtFlags::PROT_EXEC","value":"ProtFlags","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":" Pages can be executed\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5149},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":247089,"byte_end":247103,"line_start":25,"line_end":25,"column_start":9,"column_end":23},"name":"PROT_GROWSDOWN","qualname":"::sys::mman::ProtFlags::PROT_GROWSDOWN","value":"ProtFlags","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":" Apply protection up to the end of a mapping that grows upwards.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5150},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":247263,"byte_end":247275,"line_start":28,"line_end":28,"column_start":9,"column_end":21},"name":"PROT_GROWSUP","qualname":"::sys::mman::ProtFlags::PROT_GROWSUP","value":"ProtFlags","parent":{"krate":0,"index":5144},"children":[],"decl_id":null,"docs":" Apply protection down to the beginning of a mapping that grows downwards.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5214},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":247361,"byte_end":247369,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"name":"MapFlags","qualname":"::sys::mman::MapFlags","value":"MapFlags {  }","parent":null,"children":[{"krate":0,"index":5215}],"decl_id":null,"docs":" Additional parameters for `mmap()`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5272},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":247428,"byte_end":247436,"line_start":36,"line_end":36,"column_start":9,"column_end":17},"name":"MAP_FILE","qualname":"::sys::mman::MapFlags::MAP_FILE","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Compatibility flag. Ignored.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5273},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":247517,"byte_end":247527,"line_start":38,"line_end":38,"column_start":9,"column_end":19},"name":"MAP_SHARED","qualname":"::sys::mman::MapFlags::MAP_SHARED","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Share this mapping. Mutually exclusive with `MAP_PRIVATE`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5274},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":247627,"byte_end":247638,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"MAP_PRIVATE","qualname":"::sys::mman::MapFlags::MAP_PRIVATE","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Create a private copy-on-write mapping. Mutually exclusive with `MAP_SHARED`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5275},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":247722,"byte_end":247731,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"name":"MAP_FIXED","qualname":"::sys::mman::MapFlags::MAP_FIXED","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Place the mapping at exactly the address specified in `addr`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5276},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":247782,"byte_end":247790,"line_start":44,"line_end":44,"column_start":9,"column_end":17},"name":"MAP_ANON","qualname":"::sys::mman::MapFlags::MAP_ANON","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Synonym for `MAP_ANONYMOUS`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5277},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":247938,"byte_end":247951,"line_start":47,"line_end":47,"column_start":9,"column_end":22},"name":"MAP_ANONYMOUS","qualname":"::sys::mman::MapFlags::MAP_ANONYMOUS","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" The mapping is not backed by any file.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\", target_os = \"freebsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5278},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":248374,"byte_end":248383,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"name":"MAP_32BIT","qualname":"::sys::mman::MapFlags::MAP_32BIT","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Put the mapping into the first 2GB of the process address space.\n","sig":null,"attributes":[{"value":"cfg(any(all(any(target_os = \"android\", target_os = \"linux\"),\n              any(target_arch = \"x86\", target_arch = \"x86_64\")),\n          all(target_os = \"linux\", target_env = \"musl\",\n              any(target_arch = \"x86\", target_arch = \"x86_64\")),\n          all(target_os = \"freebsd\", target_pointer_width = \"64\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5279},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":248561,"byte_end":248574,"line_start":56,"line_end":56,"column_start":9,"column_end":22},"name":"MAP_GROWSDOWN","qualname":"::sys::mman::MapFlags::MAP_GROWSDOWN","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Used for stacks; indicates to the kernel that the mapping should extend downward in memory.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5280},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":248689,"byte_end":248702,"line_start":59,"line_end":59,"column_start":9,"column_end":22},"name":"MAP_DENYWRITE","qualname":"::sys::mman::MapFlags::MAP_DENYWRITE","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Compatibility flag. Ignored.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5281},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":248817,"byte_end":248831,"line_start":62,"line_end":62,"column_start":9,"column_end":23},"name":"MAP_EXECUTABLE","qualname":"::sys::mman::MapFlags::MAP_EXECUTABLE","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Compatibility flag. Ignored.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5282},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":248984,"byte_end":248994,"line_start":65,"line_end":65,"column_start":9,"column_end":19},"name":"MAP_LOCKED","qualname":"::sys::mman::MapFlags::MAP_LOCKED","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Mark the mmaped region to be locked in the same way as `mlock(2)`.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5283},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":249159,"byte_end":249172,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"MAP_NORESERVE","qualname":"::sys::mman::MapFlags::MAP_NORESERVE","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Do not reserve swap space for this mapping.","sig":null,"attributes":[{"value":"cfg(not(target_os = \"freebsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5284},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":249294,"byte_end":249306,"line_start":73,"line_end":73,"column_start":9,"column_end":21},"name":"MAP_POPULATE","qualname":"::sys::mman::MapFlags::MAP_POPULATE","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Populate page tables for a mapping.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5285},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":249465,"byte_end":249477,"line_start":76,"line_end":76,"column_start":9,"column_end":21},"name":"MAP_NONBLOCK","qualname":"::sys::mman::MapFlags::MAP_NONBLOCK","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Only meaningful when used with `MAP_POPULATE`. Don't perform read-ahead.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5286},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":249604,"byte_end":249615,"line_start":79,"line_end":79,"column_start":9,"column_end":20},"name":"MAP_HUGETLB","qualname":"::sys::mman::MapFlags::MAP_HUGETLB","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Allocate the mapping using \"huge pages.\"\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5287},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":250483,"byte_end":250492,"line_start":96,"line_end":96,"column_start":9,"column_end":18},"name":"MAP_STACK","qualname":"::sys::mman::MapFlags::MAP_STACK","value":"MapFlags","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Region grows down, like a stack.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5388},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":251026,"byte_end":251037,"line_start":112,"line_end":112,"column_start":9,"column_end":20},"name":"MADV_NORMAL","qualname":"::sys::mman::MmapAdvise::MADV_NORMAL","value":"MmapAdvise::MADV_NORMAL","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" No further special treatment. This is the default.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5391},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":251090,"byte_end":251101,"line_start":114,"line_end":114,"column_start":9,"column_end":20},"name":"MADV_RANDOM","qualname":"::sys::mman::MmapAdvise::MADV_RANDOM","value":"MmapAdvise::MADV_RANDOM","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Expect random page references.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5394},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":251158,"byte_end":251173,"line_start":116,"line_end":116,"column_start":9,"column_end":24},"name":"MADV_SEQUENTIAL","qualname":"::sys::mman::MmapAdvise::MADV_SEQUENTIAL","value":"MmapAdvise::MADV_SEQUENTIAL","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Expect sequential page references.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5397},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":251229,"byte_end":251242,"line_start":118,"line_end":118,"column_start":9,"column_end":22},"name":"MADV_WILLNEED","qualname":"::sys::mman::MmapAdvise::MADV_WILLNEED","value":"MmapAdvise::MADV_WILLNEED","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Expect access in the near future.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5400},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":251305,"byte_end":251318,"line_start":120,"line_end":120,"column_start":9,"column_end":22},"name":"MADV_DONTNEED","qualname":"::sys::mman::MmapAdvise::MADV_DONTNEED","value":"MmapAdvise::MADV_DONTNEED","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Do not expect access in the near future.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5403},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":251469,"byte_end":251480,"line_start":123,"line_end":123,"column_start":9,"column_end":20},"name":"MADV_REMOVE","qualname":"::sys::mman::MmapAdvise::MADV_REMOVE","value":"MmapAdvise::MADV_REMOVE","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Free up a given range of pages and its associated backing store.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5406},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":251640,"byte_end":251653,"line_start":126,"line_end":126,"column_start":9,"column_end":22},"name":"MADV_DONTFORK","qualname":"::sys::mman::MmapAdvise::MADV_DONTFORK","value":"MmapAdvise::MADV_DONTFORK","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Do not make pages in this range available to the child after a `fork(2)`.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5409},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":251775,"byte_end":251786,"line_start":129,"line_end":129,"column_start":9,"column_end":20},"name":"MADV_DOFORK","qualname":"::sys::mman::MmapAdvise::MADV_DOFORK","value":"MmapAdvise::MADV_DOFORK","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Undo the effect of `MADV_DONTFORK`.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5412},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":252002,"byte_end":252015,"line_start":134,"line_end":134,"column_start":9,"column_end":22},"name":"MADV_HWPOISON","qualname":"::sys::mman::MmapAdvise::MADV_HWPOISON","value":"MmapAdvise::MADV_HWPOISON","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Poison the given pages.","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5415},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":252159,"byte_end":252173,"line_start":137,"line_end":137,"column_start":9,"column_end":23},"name":"MADV_MERGEABLE","qualname":"::sys::mman::MmapAdvise::MADV_MERGEABLE","value":"MmapAdvise::MADV_MERGEABLE","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Enable Kernel Samepage Merging (KSM) for the given pages.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5418},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":252295,"byte_end":252311,"line_start":140,"line_end":140,"column_start":9,"column_end":25},"name":"MADV_UNMERGEABLE","qualname":"::sys::mman::MmapAdvise::MADV_UNMERGEABLE","value":"MmapAdvise::MADV_UNMERGEABLE","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Undo the effect of `MADV_MERGEABLE`\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5421},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":252756,"byte_end":252773,"line_start":151,"line_end":151,"column_start":9,"column_end":26},"name":"MADV_SOFT_OFFLINE","qualname":"::sys::mman::MmapAdvise::MADV_SOFT_OFFLINE","value":"MmapAdvise::MADV_SOFT_OFFLINE","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Preserve the memory of each page but offline the original page.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\",\n          all(target_os = \"linux\",\n              any(target_arch = \"aarch64\", target_arch = \"arm\", target_arch =\n                  \"ppc\", target_arch = \"s390x\", target_arch = \"x86\",\n                  target_arch = \"x86_64\", target_arch = \"sparc64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5424},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":252925,"byte_end":252938,"line_start":154,"line_end":154,"column_start":9,"column_end":22},"name":"MADV_HUGEPAGE","qualname":"::sys::mman::MmapAdvise::MADV_HUGEPAGE","value":"MmapAdvise::MADV_HUGEPAGE","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Enable Transparent Huge Pages (THP) for pages in the given range.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5427},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":253060,"byte_end":253075,"line_start":157,"line_end":157,"column_start":9,"column_end":24},"name":"MADV_NOHUGEPAGE","qualname":"::sys::mman::MmapAdvise::MADV_NOHUGEPAGE","value":"MmapAdvise::MADV_NOHUGEPAGE","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Undo the effect of `MADV_HUGEPAGE`.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5430},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":253203,"byte_end":253216,"line_start":160,"line_end":160,"column_start":9,"column_end":22},"name":"MADV_DONTDUMP","qualname":"::sys::mman::MmapAdvise::MADV_DONTDUMP","value":"MmapAdvise::MADV_DONTDUMP","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Exclude the given range from a core dump.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5433},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":253349,"byte_end":253360,"line_start":163,"line_end":163,"column_start":9,"column_end":20},"name":"MADV_DODUMP","qualname":"::sys::mman::MmapAdvise::MADV_DODUMP","value":"MmapAdvise::MADV_DODUMP","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Undo the effect of an earlier `MADV_DONTDUMP`.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5436},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":253457,"byte_end":253466,"line_start":165,"line_end":165,"column_start":9,"column_end":18},"name":"MADV_FREE","qualname":"::sys::mman::MmapAdvise::MADV_FREE","value":"MmapAdvise::MADV_FREE","parent":{"krate":0,"index":5387},"children":[],"decl_id":null,"docs":" Specify that the application no longer needs the pages in the given range.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5387},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":250942,"byte_end":250952,"line_start":110,"line_end":110,"column_start":14,"column_end":24},"name":"MmapAdvise","qualname":"::sys::mman::MmapAdvise","value":"pub enum MmapAdvise {\n\n    #[doc = r\" No further special treatment. This is the default.\"]\n    MADV_NORMAL = ,\n\n    #[doc = r\" Expect random page references.\"]\n    MADV_RANDOM = ,\n\n    #[doc = r\" Expect sequential page references.\"]\n    MADV_SEQUENTIAL = ,\n\n    #[doc = r\" Expect access in the near future.\"]\n    MADV_WILLNEED = ,\n\n    #[doc = r\" Do not expect access in the near future.\"]\n    MADV_DONTNEED = ,\n\n    #[doc =\n      r\" Free up a given range of pages and its associated backing store.\"]\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    MADV_REMOVE = ,\n\n    #[doc =\n      r\" Do not make pages in this range available to the child after a `fork(2)`.\"]\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    MADV_DONTFORK = ,\n\n    #[doc = r\" Undo the effect of `MADV_DONTFORK`.\"]\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    MADV_DOFORK = ,\n\n    #[doc = r\" Poison the given pages.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" Subsequent references to those pages are treated like hardware memory corruption.\"]\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    MADV_HWPOISON = ,\n\n    #[doc = r\" Enable Kernel Samepage Merging (KSM) for the given pages.\"]\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    MADV_MERGEABLE = ,\n\n    #[doc = r\" Undo the effect of `MADV_MERGEABLE`\"]\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    MADV_UNMERGEABLE = ,\n\n    #[doc =\n      r\" Preserve the memory of each page but offline the original page.\"]\n    #[cfg(any(target_os = \"android\",\n              all(target_os = \"linux\",\n                  any(target_arch = \"aarch64\", target_arch = \"arm\",\n                      target_arch = \"ppc\", target_arch = \"s390x\", target_arch\n                      = \"x86\", target_arch = \"x86_64\", target_arch =\n                      \"sparc64\"))))]\n    MADV_SOFT_OFFLINE = ,\n\n    #[doc =\n      r\" Enable Transparent Huge Pages (THP) for pages in the given range.\"]\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    MADV_HUGEPAGE = ,\n\n    #[doc = r\" Undo the effect of `MADV_HUGEPAGE`.\"]\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    MADV_NOHUGEPAGE = ,\n\n    #[doc = r\" Exclude the given range from a core dump.\"]\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    MADV_DONTDUMP = ,\n\n    #[doc = r\" Undo the effect of an earlier `MADV_DONTDUMP`.\"]\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    MADV_DODUMP = ,\n\n    #[doc =\n      r\" Specify that the application no longer needs the pages in the given range.\"]\n    MADV_FREE = ,\n}","parent":null,"children":[{"krate":0,"index":5388},{"krate":0,"index":5391},{"krate":0,"index":5394},{"krate":0,"index":5397},{"krate":0,"index":5400},{"krate":0,"index":5403},{"krate":0,"index":5406},{"krate":0,"index":5409},{"krate":0,"index":5412},{"krate":0,"index":5415},{"krate":0,"index":5418},{"krate":0,"index":5421},{"krate":0,"index":5424},{"krate":0,"index":5427},{"krate":0,"index":5430},{"krate":0,"index":5433},{"krate":0,"index":5436}],"decl_id":null,"docs":" Usage information for a range of memory to allow for performance optimizations by the kernel.","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5457},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":254973,"byte_end":254980,"line_start":200,"line_end":200,"column_start":16,"column_end":23},"name":"MsFlags","qualname":"::sys::mman::MsFlags","value":"MsFlags {  }","parent":null,"children":[{"krate":0,"index":5458}],"decl_id":null,"docs":" Configuration flags for `msync`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5498},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":255053,"byte_end":255061,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"name":"MS_ASYNC","qualname":"::sys::mman::MsFlags::MS_ASYNC","value":"MsFlags","parent":{"krate":0,"index":5497},"children":[],"decl_id":null,"docs":" Schedule an update but return immediately.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5499},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":255111,"byte_end":255124,"line_start":204,"line_end":204,"column_start":9,"column_end":22},"name":"MS_INVALIDATE","qualname":"::sys::mman::MsFlags::MS_INVALIDATE","value":"MsFlags","parent":{"krate":0,"index":5497},"children":[],"decl_id":null,"docs":" Invalidate all cached data.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5500},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":255464,"byte_end":255471,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"MS_SYNC","qualname":"::sys::mman::MsFlags::MS_SYNC","value":"MsFlags","parent":{"krate":0,"index":5497},"children":[],"decl_id":null,"docs":" Perform an update and wait for it to complete.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5557},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":255543,"byte_end":255556,"line_start":218,"line_end":218,"column_start":16,"column_end":29},"name":"MlockAllFlags","qualname":"::sys::mman::MlockAllFlags","value":"MlockAllFlags {  }","parent":null,"children":[{"krate":0,"index":5558}],"decl_id":null,"docs":" Flags for `mlockall`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5595},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":255662,"byte_end":255673,"line_start":220,"line_end":220,"column_start":9,"column_end":20},"name":"MCL_CURRENT","qualname":"::sys::mman::MlockAllFlags::MCL_CURRENT","value":"MlockAllFlags","parent":{"krate":0,"index":5594},"children":[],"decl_id":null,"docs":" Lock pages that are currently mapped into the address space of the process.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5596},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":255784,"byte_end":255794,"line_start":222,"line_end":222,"column_start":9,"column_end":19},"name":"MCL_FUTURE","qualname":"::sys::mman::MlockAllFlags::MCL_FUTURE","value":"MlockAllFlags","parent":{"krate":0,"index":5594},"children":[],"decl_id":null,"docs":" Lock pages which will become mapped into the address space of the process in the future.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":582},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":255971,"byte_end":255976,"line_start":228,"line_end":228,"column_start":15,"column_end":20},"name":"mlock","qualname":"::sys::mman::mlock","value":"pub unsafe fn mlock(*const c_void, size_t) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Locks all memory pages that contain part of the address range with `length` bytes starting at\n `addr`. Locked pages never move to the swap area.\n","sig":null,"attributes":[{"value":"/ Locks all memory pages that contain part of the address range with `length` bytes starting at","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":255805,"byte_end":255902,"line_start":226,"line_end":226,"column_start":1,"column_end":98}},{"value":"/ `addr`. Locked pages never move to the swap area.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":255903,"byte_end":255956,"line_start":227,"line_end":227,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":583},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256214,"byte_end":256221,"line_start":234,"line_end":234,"column_start":15,"column_end":22},"name":"munlock","qualname":"::sys::mman::munlock","value":"pub unsafe fn munlock(*const c_void, size_t) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Unlocks all memory pages that contain part of the address range with `length` bytes starting at\n `addr`.\n","sig":null,"attributes":[{"value":"/ Unlocks all memory pages that contain part of the address range with `length` bytes starting at","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256088,"byte_end":256187,"line_start":232,"line_end":232,"column_start":1,"column_end":100}},{"value":"/ `addr`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256188,"byte_end":256199,"line_start":233,"line_end":233,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":584},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256456,"byte_end":256464,"line_start":240,"line_end":240,"column_start":8,"column_end":16},"name":"mlockall","qualname":"::sys::mman::mlockall","value":"pub fn mlockall(MlockAllFlags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Locks all memory pages mapped into this process' address space. Locked pages never move to the\n swap area.\n","sig":null,"attributes":[{"value":"/ Locks all memory pages mapped into this process' address space. Locked pages never move to the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256335,"byte_end":256433,"line_start":238,"line_end":238,"column_start":1,"column_end":99}},{"value":"/ swap area.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256434,"byte_end":256448,"line_start":239,"line_end":239,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":585},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256652,"byte_end":256662,"line_start":245,"line_end":245,"column_start":8,"column_end":18},"name":"munlockall","qualname":"::sys::mman::munlockall","value":"pub fn munlockall() -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Unlocks all memory pages mapped into this process' address space.\n","sig":null,"attributes":[{"value":"/ Unlocks all memory pages mapped into this process' address space.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256575,"byte_end":256644,"line_start":244,"line_end":244,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":586},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256938,"byte_end":256942,"line_start":251,"line_end":251,"column_start":15,"column_end":19},"name":"mmap","qualname":"::sys::mman::mmap","value":"pub unsafe fn mmap(*mut c_void, size_t, ProtFlags, MapFlags, RawFd, off_t)\n-> Result<*mut c_void>","parent":null,"children":[],"decl_id":null,"docs":" Calls to mmap are inherently unsafe, so they must be made in an unsafe block. Typically\n a higher-level abstraction will hide the unsafe interactions with the mmap'd region.\n","sig":null,"attributes":[{"value":"/ Calls to mmap are inherently unsafe, so they must be made in an unsafe block. Typically","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256743,"byte_end":256834,"line_start":249,"line_end":249,"column_start":1,"column_end":92}},{"value":"/ a higher-level abstraction will hide the unsafe interactions with the mmap'd region.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":256835,"byte_end":256923,"line_start":250,"line_end":250,"column_start":1,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":587},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":257267,"byte_end":257273,"line_start":261,"line_end":261,"column_start":15,"column_end":21},"name":"munmap","qualname":"::sys::mman::munmap","value":"pub unsafe fn munmap(*mut c_void, size_t) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":588},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":257392,"byte_end":257399,"line_start":265,"line_end":265,"column_start":15,"column_end":22},"name":"madvise","qualname":"::sys::mman::madvise","value":"pub unsafe fn madvise(*mut c_void, size_t, MmapAdvise) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":589},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":257560,"byte_end":257565,"line_start":269,"line_end":269,"column_start":15,"column_end":20},"name":"msync","qualname":"::sys::mman::msync","value":"pub unsafe fn msync(*mut c_void, size_t, MsFlags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":257747,"byte_end":257755,"line_start":274,"line_end":274,"column_start":8,"column_end":16},"name":"shm_open","qualname":"::sys::mman::shm_open","value":"pub fn shm_open<P: ?Sized + NixPath>(&P, OFlag, Mode) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":257705,"byte_end":257739,"line_start":273,"line_end":273,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":593},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":258298,"byte_end":258308,"line_start":290,"line_end":290,"column_start":8,"column_end":18},"name":"shm_unlink","qualname":"::sys::mman::shm_unlink","value":"pub fn shm_unlink<P: ?Sized + NixPath>(&P) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mman.rs","byte_start":258256,"byte_end":258290,"line_start":289,"line_end":289,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":596},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/pthread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pthread","qualname":"::sys::pthread","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/pthread.rs","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":600},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/pthread.rs","byte_start":258534,"byte_end":258541,"line_start":3,"line_end":3,"column_start":10,"column_end":17},"name":"Pthread","qualname":"::sys::pthread::Pthread","value":"pthread_t","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":601},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/pthread.rs","byte_start":258851,"byte_end":258863,"line_start":11,"line_end":11,"column_start":8,"column_end":20},"name":"pthread_self","qualname":"::sys::pthread::pthread_self","value":"pub fn pthread_self() -> Pthread","parent":null,"children":[],"decl_id":null,"docs":" Obtain ID of the calling thread (see\n [`pthread_self(3)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pthread_self.html)","sig":null,"attributes":[{"value":"/ Obtain ID of the calling thread (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/pthread.rs","byte_start":258556,"byte_end":258596,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/ [`pthread_self(3)`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pthread_self.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/pthread.rs","byte_start":258597,"byte_end":258697,"line_start":6,"line_end":6,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/pthread.rs","byte_start":258698,"byte_end":258701,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The thread ID returned by `pthread_self()` is not the same thing as","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/pthread.rs","byte_start":258702,"byte_end":258773,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ the kernel thread ID returned by a call to `gettid(2)`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/pthread.rs","byte_start":258774,"byte_end":258833,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/pthread.rs","byte_start":258834,"byte_end":258843,"line_start":10,"line_end":10,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":602},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ptrace","qualname":"::sys::ptrace","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/mod.rs","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":644}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"macos\", target_os =\n          \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160019,"byte_end":160248,"line_start":41,"line_end":47,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":618},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":259733,"byte_end":259744,"line_start":10,"line_end":10,"column_start":10,"column_end":21},"name":"AddressType","qualname":"::sys::ptrace::linux::AddressType","value":"*mut ::libc::c_void","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":5648},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260118,"byte_end":260129,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"name":"RequestType","qualname":"::sys::ptrace::linux::RequestType","value":"::libc::c_uint","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5650},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260500,"byte_end":260514,"line_start":34,"line_end":34,"column_start":9,"column_end":23},"name":"PTRACE_TRACEME","qualname":"::sys::ptrace::linux::Request::PTRACE_TRACEME","value":"Request::PTRACE_TRACEME","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5653},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260524,"byte_end":260539,"line_start":35,"line_end":35,"column_start":9,"column_end":24},"name":"PTRACE_PEEKTEXT","qualname":"::sys::ptrace::linux::Request::PTRACE_PEEKTEXT","value":"Request::PTRACE_PEEKTEXT","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5656},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260549,"byte_end":260564,"line_start":36,"line_end":36,"column_start":9,"column_end":24},"name":"PTRACE_PEEKDATA","qualname":"::sys::ptrace::linux::Request::PTRACE_PEEKDATA","value":"Request::PTRACE_PEEKDATA","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5659},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260574,"byte_end":260589,"line_start":37,"line_end":37,"column_start":9,"column_end":24},"name":"PTRACE_PEEKUSER","qualname":"::sys::ptrace::linux::Request::PTRACE_PEEKUSER","value":"Request::PTRACE_PEEKUSER","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5662},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260599,"byte_end":260614,"line_start":38,"line_end":38,"column_start":9,"column_end":24},"name":"PTRACE_POKETEXT","qualname":"::sys::ptrace::linux::Request::PTRACE_POKETEXT","value":"Request::PTRACE_POKETEXT","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5665},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260624,"byte_end":260639,"line_start":39,"line_end":39,"column_start":9,"column_end":24},"name":"PTRACE_POKEDATA","qualname":"::sys::ptrace::linux::Request::PTRACE_POKEDATA","value":"Request::PTRACE_POKEDATA","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5668},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260649,"byte_end":260664,"line_start":40,"line_end":40,"column_start":9,"column_end":24},"name":"PTRACE_POKEUSER","qualname":"::sys::ptrace::linux::Request::PTRACE_POKEUSER","value":"Request::PTRACE_POKEUSER","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5671},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260674,"byte_end":260685,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"name":"PTRACE_CONT","qualname":"::sys::ptrace::linux::Request::PTRACE_CONT","value":"Request::PTRACE_CONT","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5674},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260695,"byte_end":260706,"line_start":42,"line_end":42,"column_start":9,"column_end":20},"name":"PTRACE_KILL","qualname":"::sys::ptrace::linux::Request::PTRACE_KILL","value":"Request::PTRACE_KILL","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5677},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260716,"byte_end":260733,"line_start":43,"line_end":43,"column_start":9,"column_end":26},"name":"PTRACE_SINGLESTEP","qualname":"::sys::ptrace::linux::Request::PTRACE_SINGLESTEP","value":"Request::PTRACE_SINGLESTEP","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5680},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":261177,"byte_end":261191,"line_start":50,"line_end":50,"column_start":9,"column_end":23},"name":"PTRACE_GETREGS","qualname":"::sys::ptrace::linux::Request::PTRACE_GETREGS","value":"Request::PTRACE_GETREGS","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(all(target_os = \"android\", target_pointer_width = \"32\"),\n          all(target_os = \"linux\",\n              any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                  \"mips64\", target_arch = \"x86_64\", target_pointer_width =\n                  \"32\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5683},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":261635,"byte_end":261649,"line_start":57,"line_end":57,"column_start":9,"column_end":23},"name":"PTRACE_SETREGS","qualname":"::sys::ptrace::linux::Request::PTRACE_SETREGS","value":"Request::PTRACE_SETREGS","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(all(target_os = \"android\", target_pointer_width = \"32\"),\n          all(target_os = \"linux\",\n              any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                  \"mips64\", target_arch = \"x86_64\", target_pointer_width =\n                  \"32\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5686},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":262093,"byte_end":262109,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"name":"PTRACE_GETFPREGS","qualname":"::sys::ptrace::linux::Request::PTRACE_GETFPREGS","value":"Request::PTRACE_GETFPREGS","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(all(target_os = \"android\", target_pointer_width = \"32\"),\n          all(target_os = \"linux\",\n              any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                  \"mips64\", target_arch = \"x86_64\", target_pointer_width =\n                  \"32\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5689},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":262553,"byte_end":262569,"line_start":71,"line_end":71,"column_start":9,"column_end":25},"name":"PTRACE_SETFPREGS","qualname":"::sys::ptrace::linux::Request::PTRACE_SETFPREGS","value":"Request::PTRACE_SETFPREGS","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(all(target_os = \"android\", target_pointer_width = \"32\"),\n          all(target_os = \"linux\",\n              any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                  \"mips64\", target_arch = \"x86_64\", target_pointer_width =\n                  \"32\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5692},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":262579,"byte_end":262592,"line_start":72,"line_end":72,"column_start":9,"column_end":22},"name":"PTRACE_ATTACH","qualname":"::sys::ptrace::linux::Request::PTRACE_ATTACH","value":"Request::PTRACE_ATTACH","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5695},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":262602,"byte_end":262615,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"name":"PTRACE_DETACH","qualname":"::sys::ptrace::linux::Request::PTRACE_DETACH","value":"Request::PTRACE_DETACH","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5698},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":262955,"byte_end":262972,"line_start":79,"line_end":79,"column_start":9,"column_end":26},"name":"PTRACE_GETFPXREGS","qualname":"::sys::ptrace::linux::Request::PTRACE_GETFPXREGS","value":"Request::PTRACE_GETFPXREGS","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(target_os = \"linux\",\n          any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n              \"mips64\", target_arch = \"x86\", target_arch = \"x86_64\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5701},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":263312,"byte_end":263329,"line_start":85,"line_end":85,"column_start":9,"column_end":26},"name":"PTRACE_SETFPXREGS","qualname":"::sys::ptrace::linux::Request::PTRACE_SETFPXREGS","value":"Request::PTRACE_SETFPXREGS","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(target_os = \"linux\",\n          any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n              \"mips64\", target_arch = \"x86\", target_arch = \"x86_64\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5704},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":263339,"byte_end":263353,"line_start":86,"line_end":86,"column_start":9,"column_end":23},"name":"PTRACE_SYSCALL","qualname":"::sys::ptrace::linux::Request::PTRACE_SYSCALL","value":"Request::PTRACE_SYSCALL","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5707},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":263363,"byte_end":263380,"line_start":87,"line_end":87,"column_start":9,"column_end":26},"name":"PTRACE_SETOPTIONS","qualname":"::sys::ptrace::linux::Request::PTRACE_SETOPTIONS","value":"Request::PTRACE_SETOPTIONS","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5710},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":263390,"byte_end":263408,"line_start":88,"line_end":88,"column_start":9,"column_end":27},"name":"PTRACE_GETEVENTMSG","qualname":"::sys::ptrace::linux::Request::PTRACE_GETEVENTMSG","value":"Request::PTRACE_GETEVENTMSG","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5713},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":263418,"byte_end":263435,"line_start":89,"line_end":89,"column_start":9,"column_end":26},"name":"PTRACE_GETSIGINFO","qualname":"::sys::ptrace::linux::Request::PTRACE_GETSIGINFO","value":"Request::PTRACE_GETSIGINFO","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5716},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":263445,"byte_end":263462,"line_start":90,"line_end":90,"column_start":9,"column_end":26},"name":"PTRACE_SETSIGINFO","qualname":"::sys::ptrace::linux::Request::PTRACE_SETSIGINFO","value":"Request::PTRACE_SETSIGINFO","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5719},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":263616,"byte_end":263632,"line_start":93,"line_end":93,"column_start":9,"column_end":25},"name":"PTRACE_GETREGSET","qualname":"::sys::ptrace::linux::Request::PTRACE_GETREGSET","value":"Request::PTRACE_GETREGSET","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(target_os = \"linux\",\n          not(any(target_arch = \"mips\", target_arch = \"mips64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5722},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":263786,"byte_end":263802,"line_start":96,"line_end":96,"column_start":9,"column_end":25},"name":"PTRACE_SETREGSET","qualname":"::sys::ptrace::linux::Request::PTRACE_SETREGSET","value":"Request::PTRACE_SETREGSET","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(target_os = \"linux\",\n          not(any(target_arch = \"mips\", target_arch = \"mips64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5725},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":263956,"byte_end":263968,"line_start":99,"line_end":99,"column_start":9,"column_end":21},"name":"PTRACE_SEIZE","qualname":"::sys::ptrace::linux::Request::PTRACE_SEIZE","value":"Request::PTRACE_SEIZE","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(target_os = \"linux\",\n          not(any(target_arch = \"mips\", target_arch = \"mips64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5728},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":264122,"byte_end":264138,"line_start":102,"line_end":102,"column_start":9,"column_end":25},"name":"PTRACE_INTERRUPT","qualname":"::sys::ptrace::linux::Request::PTRACE_INTERRUPT","value":"Request::PTRACE_INTERRUPT","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(target_os = \"linux\",\n          not(any(target_arch = \"mips\", target_arch = \"mips64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5731},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":264292,"byte_end":264305,"line_start":105,"line_end":105,"column_start":9,"column_end":22},"name":"PTRACE_LISTEN","qualname":"::sys::ptrace::linux::Request::PTRACE_LISTEN","value":"Request::PTRACE_LISTEN","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(target_os = \"linux\",\n          not(any(target_arch = \"mips\", target_arch = \"mips64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5734},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":264459,"byte_end":264477,"line_start":108,"line_end":108,"column_start":9,"column_end":27},"name":"PTRACE_PEEKSIGINFO","qualname":"::sys::ptrace::linux::Request::PTRACE_PEEKSIGINFO","value":"Request::PTRACE_PEEKSIGINFO","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(target_os = \"linux\",\n          not(any(target_arch = \"mips\", target_arch = \"mips64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":5649},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260482,"byte_end":260489,"line_start":33,"line_end":33,"column_start":14,"column_end":21},"name":"Request","qualname":"::sys::ptrace::linux::Request","value":"pub enum Request {\n    PTRACE_TRACEME = ,\n    PTRACE_PEEKTEXT = ,\n    PTRACE_PEEKDATA = ,\n    PTRACE_PEEKUSER = ,\n    PTRACE_POKETEXT = ,\n    PTRACE_POKEDATA = ,\n    PTRACE_POKEUSER = ,\n    PTRACE_CONT = ,\n    PTRACE_KILL = ,\n    PTRACE_SINGLESTEP = ,\n\n    #[cfg(any(all(target_os = \"android\", target_pointer_width = \"32\"),\n              all(target_os = \"linux\",\n                  any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                      \"mips64\", target_arch = \"x86_64\", target_pointer_width =\n                      \"32\"))))]\n    PTRACE_GETREGS = ,\n\n    #[cfg(any(all(target_os = \"android\", target_pointer_width = \"32\"),\n              all(target_os = \"linux\",\n                  any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                      \"mips64\", target_arch = \"x86_64\", target_pointer_width =\n                      \"32\"))))]\n    PTRACE_SETREGS = ,\n\n    #[cfg(any(all(target_os = \"android\", target_pointer_width = \"32\"),\n              all(target_os = \"linux\",\n                  any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                      \"mips64\", target_arch = \"x86_64\", target_pointer_width =\n                      \"32\"))))]\n    PTRACE_GETFPREGS = ,\n\n    #[cfg(any(all(target_os = \"android\", target_pointer_width = \"32\"),\n              all(target_os = \"linux\",\n                  any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                      \"mips64\", target_arch = \"x86_64\", target_pointer_width =\n                      \"32\"))))]\n    PTRACE_SETFPREGS = ,\n    PTRACE_ATTACH = ,\n    PTRACE_DETACH = ,\n\n    #[cfg(all(target_os = \"linux\",\n              any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                  \"mips64\", target_arch = \"x86\", target_arch = \"x86_64\")))]\n    PTRACE_GETFPXREGS = ,\n\n    #[cfg(all(target_os = \"linux\",\n              any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                  \"mips64\", target_arch = \"x86\", target_arch = \"x86_64\")))]\n    PTRACE_SETFPXREGS = ,\n    PTRACE_SYSCALL = ,\n    PTRACE_SETOPTIONS = ,\n    PTRACE_GETEVENTMSG = ,\n    PTRACE_GETSIGINFO = ,\n    PTRACE_SETSIGINFO = ,\n\n    #[cfg(all(target_os = \"linux\",\n              not(any(target_arch = \"mips\", target_arch = \"mips64\"))))]\n    PTRACE_GETREGSET = ,\n\n    #[cfg(all(target_os = \"linux\",\n              not(any(target_arch = \"mips\", target_arch = \"mips64\"))))]\n    PTRACE_SETREGSET = ,\n\n    #[cfg(all(target_os = \"linux\",\n              not(any(target_arch = \"mips\", target_arch = \"mips64\"))))]\n    PTRACE_SEIZE = ,\n\n    #[cfg(all(target_os = \"linux\",\n              not(any(target_arch = \"mips\", target_arch = \"mips64\"))))]\n    PTRACE_INTERRUPT = ,\n\n    #[cfg(all(target_os = \"linux\",\n              not(any(target_arch = \"mips\", target_arch = \"mips64\"))))]\n    PTRACE_LISTEN = ,\n\n    #[cfg(all(target_os = \"linux\",\n              not(any(target_arch = \"mips\", target_arch = \"mips64\"))))]\n    PTRACE_PEEKSIGINFO = ,\n}","parent":null,"children":[{"krate":0,"index":5650},{"krate":0,"index":5653},{"krate":0,"index":5656},{"krate":0,"index":5659},{"krate":0,"index":5662},{"krate":0,"index":5665},{"krate":0,"index":5668},{"krate":0,"index":5671},{"krate":0,"index":5674},{"krate":0,"index":5677},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5686},{"krate":0,"index":5689},{"krate":0,"index":5692},{"krate":0,"index":5695},{"krate":0,"index":5698},{"krate":0,"index":5701},{"krate":0,"index":5704},{"krate":0,"index":5707},{"krate":0,"index":5710},{"krate":0,"index":5713},{"krate":0,"index":5716},{"krate":0,"index":5719},{"krate":0,"index":5722},{"krate":0,"index":5725},{"krate":0,"index":5728},{"krate":0,"index":5731},{"krate":0,"index":5734}],"decl_id":null,"docs":" Ptrace Request enum defining the action to be taken.\n","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":260320,"byte_end":260329,"line_start":30,"line_end":30,"column_start":70,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5756},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":264792,"byte_end":264809,"line_start":119,"line_end":119,"column_start":9,"column_end":26},"name":"PTRACE_EVENT_FORK","qualname":"::sys::ptrace::linux::Event::PTRACE_EVENT_FORK","value":"Event::PTRACE_EVENT_FORK","parent":{"krate":0,"index":5755},"children":[],"decl_id":null,"docs":" Event that stops before a return from fork or clone.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5759},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":264885,"byte_end":264903,"line_start":121,"line_end":121,"column_start":9,"column_end":27},"name":"PTRACE_EVENT_VFORK","qualname":"::sys::ptrace::linux::Event::PTRACE_EVENT_VFORK","value":"Event::PTRACE_EVENT_VFORK","parent":{"krate":0,"index":5755},"children":[],"decl_id":null,"docs":" Event that stops before a return from vfork or clone.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5762},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":264970,"byte_end":264988,"line_start":123,"line_end":123,"column_start":9,"column_end":27},"name":"PTRACE_EVENT_CLONE","qualname":"::sys::ptrace::linux::Event::PTRACE_EVENT_CLONE","value":"Event::PTRACE_EVENT_CLONE","parent":{"krate":0,"index":5755},"children":[],"decl_id":null,"docs":" Event that stops before a return from clone.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5765},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":265056,"byte_end":265073,"line_start":125,"line_end":125,"column_start":9,"column_end":26},"name":"PTRACE_EVENT_EXEC","qualname":"::sys::ptrace::linux::Event::PTRACE_EVENT_EXEC","value":"Event::PTRACE_EVENT_EXEC","parent":{"krate":0,"index":5755},"children":[],"decl_id":null,"docs":" Event that stops before a return from execve.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5768},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":265126,"byte_end":265149,"line_start":127,"line_end":127,"column_start":9,"column_end":32},"name":"PTRACE_EVENT_VFORK_DONE","qualname":"::sys::ptrace::linux::Event::PTRACE_EVENT_VFORK_DONE","value":"Event::PTRACE_EVENT_VFORK_DONE","parent":{"krate":0,"index":5755},"children":[],"decl_id":null,"docs":" Event for a return from vfork.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5771},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":265288,"byte_end":265305,"line_start":130,"line_end":130,"column_start":9,"column_end":26},"name":"PTRACE_EVENT_EXIT","qualname":"::sys::ptrace::linux::Event::PTRACE_EVENT_EXIT","value":"Event::PTRACE_EVENT_EXIT","parent":{"krate":0,"index":5755},"children":[],"decl_id":null,"docs":" Event for a stop before an exit. Unlike the waitpid Exit status program.\n registers can still be examined\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5774},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":265373,"byte_end":265393,"line_start":132,"line_end":132,"column_start":9,"column_end":29},"name":"PTRACE_EVENT_SECCOMP","qualname":"::sys::ptrace::linux::Event::PTRACE_EVENT_SECCOMP","value":"Event::PTRACE_EVENT_SECCOMP","parent":{"krate":0,"index":5755},"children":[],"decl_id":null,"docs":" STop triggered by a seccomp rule on a tracee.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5755},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":264711,"byte_end":264716,"line_start":117,"line_end":117,"column_start":14,"column_end":19},"name":"Event","qualname":"::sys::ptrace::linux::Event","value":"pub enum Event {\n\n    #[doc = r\" Event that stops before a return from fork or clone.\"]\n    PTRACE_EVENT_FORK = ,\n\n    #[doc = r\" Event that stops before a return from vfork or clone.\"]\n    PTRACE_EVENT_VFORK = ,\n\n    #[doc = r\" Event that stops before a return from clone.\"]\n    PTRACE_EVENT_CLONE = ,\n\n    #[doc = r\" Event that stops before a return from execve.\"]\n    PTRACE_EVENT_EXEC = ,\n\n    #[doc = r\" Event for a return from vfork.\"]\n    PTRACE_EVENT_VFORK_DONE = ,\n\n    #[doc =\n      r\" Event for a stop before an exit. Unlike the waitpid Exit status program.\"]\n    #[doc = r\" registers can still be examined\"]\n    PTRACE_EVENT_EXIT = ,\n\n    #[doc = r\" STop triggered by a seccomp rule on a tracee.\"]\n    PTRACE_EVENT_SECCOMP = ,\n}","parent":null,"children":[{"krate":0,"index":5756},{"krate":0,"index":5759},{"krate":0,"index":5762},{"krate":0,"index":5765},{"krate":0,"index":5768},{"krate":0,"index":5771},{"krate":0,"index":5774}],"decl_id":null,"docs":" Using the ptrace options the tracer can configure the tracee to stop\n at certain events. This enum is used to define those events as defined\n in `man ptrace`.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5795},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":265643,"byte_end":265650,"line_start":140,"line_end":140,"column_start":16,"column_end":23},"name":"Options","qualname":"::sys::ptrace::linux::Options","value":"Options {  }","parent":null,"children":[{"krate":0,"index":5796}],"decl_id":null,"docs":" Ptrace options used in conjunction with the PTRACE_SETOPTIONS request.\n See `man ptrace` for more details.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5840},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":265853,"byte_end":265874,"line_start":144,"line_end":144,"column_start":9,"column_end":30},"name":"PTRACE_O_TRACESYSGOOD","qualname":"::sys::ptrace::linux::Options::PTRACE_O_TRACESYSGOOD","value":"Options","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" When delivering system call traps set a bit to allow tracer to\n distinguish between normal stops or syscall stops. May not work on\n all systems.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5841},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":265959,"byte_end":265977,"line_start":146,"line_end":146,"column_start":9,"column_end":27},"name":"PTRACE_O_TRACEFORK","qualname":"::sys::ptrace::linux::Options::PTRACE_O_TRACEFORK","value":"Options","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Stop tracee at next fork and start tracing the forked process.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5842},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":266061,"byte_end":266080,"line_start":148,"line_end":148,"column_start":9,"column_end":28},"name":"PTRACE_O_TRACEVFORK","qualname":"::sys::ptrace::linux::Options::PTRACE_O_TRACEVFORK","value":"Options","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Stop tracee at next vfork call and trace the vforked process.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5843},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":266163,"byte_end":266182,"line_start":150,"line_end":150,"column_start":9,"column_end":28},"name":"PTRACE_O_TRACECLONE","qualname":"::sys::ptrace::linux::Options::PTRACE_O_TRACECLONE","value":"Options","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Stop tracee at next clone call and trace the cloned process.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5844},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":266237,"byte_end":266255,"line_start":152,"line_end":152,"column_start":9,"column_end":27},"name":"PTRACE_O_TRACEEXEC","qualname":"::sys::ptrace::linux::Options::PTRACE_O_TRACEEXEC","value":"Options","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Stop tracee at next execve call.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5845},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":266310,"byte_end":266333,"line_start":154,"line_end":154,"column_start":9,"column_end":32},"name":"PTRACE_O_TRACEVFORKDONE","qualname":"::sys::ptrace::linux::Options::PTRACE_O_TRACEVFORKDONE","value":"Options","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Stop tracee at vfork completion.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5846},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":266487,"byte_end":266505,"line_start":157,"line_end":157,"column_start":9,"column_end":27},"name":"PTRACE_O_TRACEEXIT","qualname":"::sys::ptrace::linux::Options::PTRACE_O_TRACEEXIT","value":"Options","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Stop tracee at next exit call. Stops before exit commences allowing\n tracer to see location of exit and register states.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5847},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":266631,"byte_end":266652,"line_start":160,"line_end":160,"column_start":9,"column_end":30},"name":"PTRACE_O_TRACESECCOMP","qualname":"::sys::ptrace::linux::Options::PTRACE_O_TRACESECCOMP","value":"Options","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Stop tracee when a SECCOMP_RET_TRACE rule is triggered. See `man seccomp` for more\n details.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5848},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":266883,"byte_end":266900,"line_start":164,"line_end":164,"column_start":9,"column_end":26},"name":"PTRACE_O_EXITKILL","qualname":"::sys::ptrace::linux::Options::PTRACE_O_EXITKILL","value":"Options","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Send a SIGKILL to the tracee if the tracer exits.  This is useful\n for ptrace jailers to prevent tracees from escaping their control.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":620},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":267217,"byte_end":267223,"line_start":174,"line_end":174,"column_start":15,"column_end":21},"name":"ptrace","qualname":"::sys::ptrace::linux::ptrace","value":"pub unsafe fn ptrace(Request, Pid, AddressType, *mut c_void) -> Result<c_long>","parent":null,"children":[],"decl_id":null,"docs":" Performs a ptrace request. If the request in question is provided by a specialised function\n this function will return an unsupported operation error.\n","sig":null,"attributes":[{"value":"/ Performs a ptrace request. If the request in question is provided by a specialised function","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":266911,"byte_end":267006,"line_start":168,"line_end":168,"column_start":1,"column_end":96}},{"value":"/ this function will return an unsupported operation error.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":267007,"byte_end":267068,"line_start":169,"line_end":169,"column_start":1,"column_end":62}},{"value":"deprecated(since = \"0.10.0\", note =\n             \"usages of `ptrace()` should be replaced with the specialized helper functions instead\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":267069,"byte_end":267202,"line_start":170,"line_end":173,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":623},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":268231,"byte_end":268238,"line_start":200,"line_end":200,"column_start":8,"column_end":15},"name":"getregs","qualname":"::sys::ptrace::linux::getregs","value":"pub fn getregs(Pid) -> Result<user_regs_struct>","parent":null,"children":[],"decl_id":null,"docs":" Get user registers, as with `ptrace(PTRACE_GETREGS, ...)`\n","sig":null,"attributes":[{"value":"/ Get user registers, as with `ptrace(PTRACE_GETREGS, ...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":268025,"byte_end":268086,"line_start":195,"line_end":195,"column_start":1,"column_end":62}},{"value":"cfg(all(target_os = \"linux\",\n          any(target_arch = \"x86_64\", target_arch = \"x86\"), target_env =\n          \"gnu\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":268087,"byte_end":268223,"line_start":196,"line_end":199,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":624},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":268558,"byte_end":268565,"line_start":209,"line_end":209,"column_start":8,"column_end":15},"name":"setregs","qualname":"::sys::ptrace::linux::setregs","value":"pub fn setregs(Pid, user_regs_struct) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set user registers, as with `ptrace(PTRACE_SETREGS, ...)`\n","sig":null,"attributes":[{"value":"/ Set user registers, as with `ptrace(PTRACE_SETREGS, ...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":268352,"byte_end":268413,"line_start":204,"line_end":204,"column_start":1,"column_end":62}},{"value":"cfg(all(target_os = \"linux\",\n          any(target_arch = \"x86_64\", target_arch = \"x86\"), target_env =\n          \"gnu\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":268414,"byte_end":268550,"line_start":205,"line_end":208,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":629},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":269858,"byte_end":269868,"line_start":241,"line_end":241,"column_start":8,"column_end":18},"name":"setoptions","qualname":"::sys::ptrace::linux::setoptions","value":"pub fn setoptions(Pid, Options) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.\n","sig":null,"attributes":[{"value":"/ Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":269793,"byte_end":269850,"line_start":240,"line_end":240,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":630},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":270268,"byte_end":270276,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"getevent","qualname":"::sys::ptrace::linux::getevent","value":"pub fn getevent(Pid) -> Result<c_long>","parent":null,"children":[],"decl_id":null,"docs":" Gets a ptrace event as described by `ptrace(PTRACE_GETEVENTMSG,...)`\n","sig":null,"attributes":[{"value":"/ Gets a ptrace event as described by `ptrace(PTRACE_GETEVENTMSG,...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":270188,"byte_end":270260,"line_start":251,"line_end":251,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":631},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":270437,"byte_end":270447,"line_start":257,"line_end":257,"column_start":8,"column_end":18},"name":"getsiginfo","qualname":"::sys::ptrace::linux::getsiginfo","value":"pub fn getsiginfo(Pid) -> Result<siginfo_t>","parent":null,"children":[],"decl_id":null,"docs":" Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`\n","sig":null,"attributes":[{"value":"/ Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":270374,"byte_end":270429,"line_start":256,"line_end":256,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":632},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":270613,"byte_end":270623,"line_start":262,"line_end":262,"column_start":8,"column_end":18},"name":"setsiginfo","qualname":"::sys::ptrace::linux::setsiginfo","value":"pub fn setsiginfo(Pid, &siginfo_t) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`\n","sig":null,"attributes":[{"value":"/ Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":270550,"byte_end":270605,"line_start":261,"line_end":261,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":633},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271234,"byte_end":271241,"line_start":280,"line_end":280,"column_start":8,"column_end":15},"name":"traceme","qualname":"::sys::ptrace::linux::traceme","value":"pub fn traceme() -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the process as traceable, as with `ptrace(PTRACE_TRACEME, ...)`","sig":null,"attributes":[{"value":"/ Sets the process as traceable, as with `ptrace(PTRACE_TRACEME, ...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271023,"byte_end":271095,"line_start":276,"line_end":276,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271096,"byte_end":271099,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ Indicates that this process is to be traced by its parent.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271100,"byte_end":271162,"line_start":278,"line_end":278,"column_start":1,"column_end":63}},{"value":"/ This is the only ptrace request to be issued by the tracee.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271163,"byte_end":271226,"line_start":279,"line_end":279,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":634},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271650,"byte_end":271657,"line_start":294,"line_end":294,"column_start":8,"column_end":15},"name":"syscall","qualname":"::sys::ptrace::linux::syscall","value":"pub fn syscall(Pid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Ask for next syscall, as with `ptrace(PTRACE_SYSCALL, ...)`","sig":null,"attributes":[{"value":"/ Ask for next syscall, as with `ptrace(PTRACE_SYSCALL, ...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271484,"byte_end":271547,"line_start":291,"line_end":291,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271548,"byte_end":271551,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ Arranges for the tracee to be stopped at the next entry to or exit from a system call.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271552,"byte_end":271642,"line_start":293,"line_end":293,"column_start":1,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":635},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":272065,"byte_end":272071,"line_start":308,"line_end":308,"column_start":8,"column_end":14},"name":"attach","qualname":"::sys::ptrace::linux::attach","value":"pub fn attach(Pid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Attach to a running process, as with `ptrace(PTRACE_ATTACH, ...)`","sig":null,"attributes":[{"value":"/ Attach to a running process, as with `ptrace(PTRACE_ATTACH, ...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271895,"byte_end":271964,"line_start":305,"line_end":305,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271965,"byte_end":271968,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ Attaches to the process specified in pid, making it a tracee of the calling process.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":271969,"byte_end":272057,"line_start":307,"line_end":307,"column_start":1,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":636},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":272471,"byte_end":272477,"line_start":322,"line_end":322,"column_start":8,"column_end":14},"name":"detach","qualname":"::sys::ptrace::linux::detach","value":"pub fn detach(Pid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Detaches the current running process, as with `ptrace(PTRACE_DETACH, ...)`","sig":null,"attributes":[{"value":"/ Detaches the current running process, as with `ptrace(PTRACE_DETACH, ...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":272308,"byte_end":272386,"line_start":319,"line_end":319,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":272387,"byte_end":272390,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ Detaches from the process specified in pid allowing it to run freely","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":272391,"byte_end":272463,"line_start":321,"line_end":321,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":637},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":272878,"byte_end":272882,"line_start":337,"line_end":337,"column_start":8,"column_end":12},"name":"cont","qualname":"::sys::ptrace::linux::cont","value":"pub fn cont<T: Into<Option<Signal>>>(Pid, T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Restart the stopped tracee process, as with `ptrace(PTRACE_CONT, ...)`","sig":null,"attributes":[{"value":"/ Restart the stopped tracee process, as with `ptrace(PTRACE_CONT, ...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":272678,"byte_end":272752,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":272753,"byte_end":272756,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ Continues the execution of the process with PID `pid`, optionally","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":272757,"byte_end":272826,"line_start":335,"line_end":335,"column_start":1,"column_end":70}},{"value":"/ delivering a signal specified by `sig`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":272827,"byte_end":272870,"line_start":336,"line_end":336,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":639},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273341,"byte_end":273345,"line_start":350,"line_end":350,"column_start":8,"column_end":12},"name":"kill","qualname":"::sys::ptrace::linux::kill","value":"pub fn kill(Pid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Issues a kill request as with `ptrace(PTRACE_KILL, ...)`","sig":null,"attributes":[{"value":"/ Issues a kill request as with `ptrace(PTRACE_KILL, ...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273198,"byte_end":273258,"line_start":347,"line_end":347,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273259,"byte_end":273262,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ This request is equivalent to `ptrace(PTRACE_CONT, ..., SIGKILL);`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273263,"byte_end":273333,"line_start":349,"line_end":349,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":640},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274342,"byte_end":274346,"line_start":381,"line_end":381,"column_start":8,"column_end":12},"name":"step","qualname":"::sys::ptrace::linux::step","value":"pub fn step<T: Into<Option<Signal>>>(Pid, T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Move the stopped tracee process forward by a single step as with \n `ptrace(PTRACE_SINGLESTEP, ...)`","sig":null,"attributes":[{"value":"/ Move the stopped tracee process forward by a single step as with ","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273486,"byte_end":273555,"line_start":356,"line_end":356,"column_start":1,"column_end":70}},{"value":"/ `ptrace(PTRACE_SINGLESTEP, ...)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273556,"byte_end":273592,"line_start":357,"line_end":357,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273593,"byte_end":273596,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Advances the execution of the process with PID `pid` by a single step optionally delivering a","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273597,"byte_end":273694,"line_start":359,"line_end":359,"column_start":1,"column_end":98}},{"value":"/ signal specified by `sig`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273695,"byte_end":273725,"line_start":360,"line_end":360,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273726,"byte_end":273729,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273730,"byte_end":273743,"line_start":362,"line_end":362,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273744,"byte_end":273755,"line_start":363,"line_end":363,"column_start":1,"column_end":12}},{"value":"/ extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273756,"byte_end":273777,"line_start":364,"line_end":364,"column_start":1,"column_end":22}},{"value":"/ use nix::sys::ptrace::step;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273778,"byte_end":273809,"line_start":365,"line_end":365,"column_start":1,"column_end":32}},{"value":"/ use nix::unistd::Pid;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273810,"byte_end":273835,"line_start":366,"line_end":366,"column_start":1,"column_end":26}},{"value":"/ use nix::sys::signal::Signal; ","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273836,"byte_end":273870,"line_start":367,"line_end":367,"column_start":1,"column_end":35}},{"value":"/ use nix::sys::wait::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273871,"byte_end":273897,"line_start":368,"line_end":368,"column_start":1,"column_end":27}},{"value":"/ fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273898,"byte_end":273913,"line_start":369,"line_end":369,"column_start":1,"column_end":16}},{"value":"/     // If a process changes state to the stopped state because of a SIGUSR1 ","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273914,"byte_end":273994,"line_start":370,"line_end":370,"column_start":1,"column_end":81}},{"value":"/     // signal, this will step the process forward and forward the user ","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":273995,"byte_end":274070,"line_start":371,"line_end":371,"column_start":1,"column_end":76}},{"value":"/     // signal to the stopped process","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274071,"byte_end":274111,"line_start":372,"line_end":372,"column_start":1,"column_end":41}},{"value":"/     match waitpid(Pid::from_raw(-1), None) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274112,"byte_end":274160,"line_start":373,"line_end":373,"column_start":1,"column_end":49}},{"value":"/         Ok(WaitStatus::Stopped(pid, Signal::SIGUSR1)) => {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274161,"byte_end":274223,"line_start":374,"line_end":374,"column_start":1,"column_end":63}},{"value":"/             let _ = step(pid, Signal::SIGUSR1);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274224,"byte_end":274275,"line_start":375,"line_end":375,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274276,"byte_end":274289,"line_start":376,"line_end":376,"column_start":1,"column_end":14}},{"value":"/         _ => {},","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274290,"byte_end":274310,"line_start":377,"line_end":377,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274311,"byte_end":274320,"line_start":378,"line_end":378,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274321,"byte_end":274326,"line_start":379,"line_end":379,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274327,"byte_end":274334,"line_start":380,"line_end":380,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274703,"byte_end":274707,"line_start":393,"line_end":393,"column_start":8,"column_end":12},"name":"read","qualname":"::sys::ptrace::linux::read","value":"pub fn read(Pid, AddressType) -> Result<c_long>","parent":null,"children":[],"decl_id":null,"docs":" Reads a word from a processes memory at the given address\n","sig":null,"attributes":[{"value":"/ Reads a word from a processes memory at the given address","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274634,"byte_end":274695,"line_start":392,"line_end":392,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":643},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274902,"byte_end":274907,"line_start":398,"line_end":398,"column_start":8,"column_end":13},"name":"write","qualname":"::sys::ptrace::linux::write","value":"pub fn write(Pid, AddressType, *mut c_void) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a word into the processes memory at the given address\n","sig":null,"attributes":[{"value":"/ Writes a word into the processes memory at the given address","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/ptrace/linux.rs","byte_start":274830,"byte_end":274894,"line_start":397,"line_end":397,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":645},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"quota","qualname":"::sys::quota","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":10114},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":662},{"krate":0,"index":5921},{"krate":0,"index":5953},{"krate":0,"index":5952},{"krate":0,"index":5950},{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5944},{"krate":0,"index":5942},{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5937},{"krate":0,"index":5955},{"krate":0,"index":5978},{"krate":0,"index":5977},{"krate":0,"index":5975},{"krate":0,"index":5972},{"krate":0,"index":5973},{"krate":0,"index":5969},{"krate":0,"index":5967},{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":5962},{"krate":0,"index":5980},{"krate":0,"index":6006},{"krate":0,"index":6005},{"krate":0,"index":6003},{"krate":0,"index":6000},{"krate":0,"index":6001},{"krate":0,"index":5997},{"krate":0,"index":5995},{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5990},{"krate":0,"index":6008},{"krate":0,"index":6031},{"krate":0,"index":6030},{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6023},{"krate":0,"index":6024},{"krate":0,"index":6021},{"krate":0,"index":6015},{"krate":0,"index":6013},{"krate":0,"index":6010},{"krate":0,"index":6033},{"krate":0,"index":6047},{"krate":0,"index":6049},{"krate":0,"index":6051},{"krate":0,"index":6053},{"krate":0,"index":6055},{"krate":0,"index":6071},{"krate":0,"index":6074},{"krate":0,"index":6076},{"krate":0,"index":6079},{"krate":0,"index":6081},{"krate":0,"index":6084},{"krate":0,"index":6086},{"krate":0,"index":6089},{"krate":0,"index":6091},{"krate":0,"index":6094},{"krate":0,"index":6097},{"krate":0,"index":6141},{"krate":0,"index":6145},{"krate":0,"index":6144},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693}],"decl_id":null,"docs":" Set and configure disk quotas for users, groups, or projects.","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160266,"byte_end":160293,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/ Set and configure disk quotas for users, groups, or projects.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275068,"byte_end":275133,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275134,"byte_end":275137,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275138,"byte_end":275152,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275153,"byte_end":275156,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Enabling and setting a quota:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275157,"byte_end":275190,"line_start":5,"line_end":5,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275191,"byte_end":275194,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275195,"byte_end":275213,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/ # use nix::sys::quota::{Dqblk, quotactl_on, quotactl_set, QuotaFmt, QuotaType, QuotaValidFlags};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275214,"byte_end":275314,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ quotactl_on(QuotaType::USRQUOTA, \"/dev/sda1\", QuotaFmt::QFMT_VFS_V1, \"aquota.user\");","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275315,"byte_end":275403,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"/ let mut dqblk: Dqblk = Default::default();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275404,"byte_end":275450,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/ dqblk.set_blocks_hard_limit(10000);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275451,"byte_end":275490,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ dqblk.set_blocks_soft_limit(8000);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275491,"byte_end":275529,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ quotactl_set(QuotaType::USRQUOTA, \"/dev/sda1\", 50, &dqblk, QuotaValidFlags::QIF_BLIMITS);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275530,"byte_end":275623,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275624,"byte_end":275631,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5956},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":276225,"byte_end":276233,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"name":"USRQUOTA","qualname":"::sys::quota::QuotaType::USRQUOTA","value":"QuotaType::USRQUOTA","parent":{"krate":0,"index":5955},"children":[],"decl_id":null,"docs":" Specify a user quota\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5959},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":276277,"byte_end":276285,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"name":"GRPQUOTA","qualname":"::sys::quota::QuotaType::GRPQUOTA","value":"QuotaType::GRPQUOTA","parent":{"krate":0,"index":5955},"children":[],"decl_id":null,"docs":" Specify a group quota\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5955},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":276172,"byte_end":276181,"line_start":44,"line_end":44,"column_start":14,"column_end":23},"name":"QuotaType","qualname":"::sys::quota::QuotaType","value":"pub enum QuotaType {\n\n    #[doc = r\" Specify a user quota\"]\n    USRQUOTA = ,\n\n    #[doc = r\" Specify a group quota\"]\n    GRPQUOTA = ,\n}","parent":null,"children":[{"krate":0,"index":5956},{"krate":0,"index":5959}],"decl_id":null,"docs":" The scope of the quota.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5981},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":276441,"byte_end":276453,"line_start":57,"line_end":57,"column_start":9,"column_end":21},"name":"QFMT_VFS_OLD","qualname":"::sys::quota::QuotaFmt::QFMT_VFS_OLD","value":"QuotaFmt::QFMT_VFS_OLD","parent":{"krate":0,"index":5980},"children":[],"decl_id":null,"docs":" Use the original quota format.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5984},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":276629,"byte_end":276640,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"name":"QFMT_VFS_V0","qualname":"::sys::quota::QuotaFmt::QFMT_VFS_V0","value":"QuotaFmt::QFMT_VFS_V0","parent":{"krate":0,"index":5980},"children":[],"decl_id":null,"docs":" Use the standard VFS v0 quota format.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5987},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":276804,"byte_end":276815,"line_start":65,"line_end":65,"column_start":9,"column_end":20},"name":"QFMT_VFS_V1","qualname":"::sys::quota::QuotaFmt::QFMT_VFS_V1","value":"QuotaFmt::QFMT_VFS_V1","parent":{"krate":0,"index":5980},"children":[],"decl_id":null,"docs":" Use the VFS v1 quota format.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5980},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":276379,"byte_end":276387,"line_start":55,"line_end":55,"column_start":14,"column_end":22},"name":"QuotaFmt","qualname":"::sys::quota::QuotaFmt","value":"pub enum QuotaFmt {\n\n    #[doc = r\" Use the original quota format.\"]\n    QFMT_VFS_OLD = ,\n\n    #[doc = r\" Use the standard VFS v0 quota format.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" Handles 32-bit UIDs/GIDs and quota limits up to 2<sup>32</sup> bytes/2<sup>32</sup> inodes.\"]\n    QFMT_VFS_V0 = ,\n\n    #[doc = r\" Use the VFS v1 quota format.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" Handles 32-bit UIDs/GIDs and quota limits of 2<sup>64</sup> bytes/2<sup>64</sup> inodes.\"]\n    QFMT_VFS_V1 = ,\n}","parent":null,"children":[{"krate":0,"index":5981},{"krate":0,"index":5984},{"krate":0,"index":5987}],"decl_id":null,"docs":" The type of quota format to use.\n","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6008},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":276944,"byte_end":276959,"line_start":72,"line_end":72,"column_start":16,"column_end":31},"name":"QuotaValidFlags","qualname":"::sys::quota::QuotaValidFlags","value":"QuotaValidFlags {  }","parent":null,"children":[{"krate":0,"index":6009}],"decl_id":null,"docs":" Indicates the quota fields that are valid to read from.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6056},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277023,"byte_end":277034,"line_start":74,"line_end":74,"column_start":9,"column_end":20},"name":"QIF_BLIMITS","qualname":"::sys::quota::QuotaValidFlags::QIF_BLIMITS","value":"QuotaValidFlags","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":" The block hard & soft limit fields.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6057},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277081,"byte_end":277090,"line_start":76,"line_end":76,"column_start":9,"column_end":18},"name":"QIF_SPACE","qualname":"::sys::quota::QuotaValidFlags::QIF_SPACE","value":"QuotaValidFlags","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":" The current space field.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6058},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277148,"byte_end":277159,"line_start":78,"line_end":78,"column_start":9,"column_end":20},"name":"QIF_ILIMITS","qualname":"::sys::quota::QuotaValidFlags::QIF_ILIMITS","value":"QuotaValidFlags","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":" The inode hard & soft limit fields.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6059},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277207,"byte_end":277217,"line_start":80,"line_end":80,"column_start":9,"column_end":19},"name":"QIF_INODES","qualname":"::sys::quota::QuotaValidFlags::QIF_INODES","value":"QuotaValidFlags","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":" The current inodes field.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6060},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277270,"byte_end":277279,"line_start":82,"line_end":82,"column_start":9,"column_end":18},"name":"QIF_BTIME","qualname":"::sys::quota::QuotaValidFlags::QIF_BTIME","value":"QuotaValidFlags","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":" The disk use time limit field.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6061},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277334,"byte_end":277343,"line_start":84,"line_end":84,"column_start":9,"column_end":18},"name":"QIF_ITIME","qualname":"::sys::quota::QuotaValidFlags::QIF_ITIME","value":"QuotaValidFlags","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":" The file quote time limit field.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6062},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277391,"byte_end":277401,"line_start":86,"line_end":86,"column_start":9,"column_end":19},"name":"QIF_LIMITS","qualname":"::sys::quota::QuotaValidFlags::QIF_LIMITS","value":"QuotaValidFlags","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":" All block & inode limits.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6063},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277456,"byte_end":277465,"line_start":88,"line_end":88,"column_start":9,"column_end":18},"name":"QIF_USAGE","qualname":"::sys::quota::QuotaValidFlags::QIF_USAGE","value":"QuotaValidFlags","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":" The space & inodes usage fields.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6064},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277510,"byte_end":277519,"line_start":90,"line_end":90,"column_start":9,"column_end":18},"name":"QIF_TIMES","qualname":"::sys::quota::QuotaValidFlags::QIF_TIMES","value":"QuotaValidFlags","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":" The time limit fields.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6065},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277553,"byte_end":277560,"line_start":92,"line_end":92,"column_start":9,"column_end":16},"name":"QIF_ALL","qualname":"::sys::quota::QuotaValidFlags::QIF_ALL","value":"QuotaValidFlags","parent":{"krate":0,"index":6055},"children":[],"decl_id":null,"docs":" All fields.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6141},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277727,"byte_end":277732,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"Dqblk","qualname":"::sys::quota::Dqblk","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper type for `if_dqblk`\n","sig":null,"attributes":[{"value":"/ Wrapper type for `if_dqblk`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277572,"byte_end":277603,"line_start":96,"line_end":96,"column_start":1,"column_end":32}},{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277642,"byte_end":277652,"line_start":98,"line_end":98,"column_start":1,"column_end":11}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277676,"byte_end":277715,"line_start":100,"line_end":100,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":278193,"byte_end":278210,"line_start":121,"line_end":121,"column_start":12,"column_end":29},"name":"blocks_hard_limit","qualname":"<Dqblk>::blocks_hard_limit","value":"pub fn blocks_hard_limit(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" The absolute limit on disk quota blocks allocated.\n","sig":null,"attributes":[{"value":"/ The absolute limit on disk quota blocks allocated.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":278127,"byte_end":278181,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":278547,"byte_end":278568,"line_start":131,"line_end":131,"column_start":12,"column_end":33},"name":"set_blocks_hard_limit","qualname":"<Dqblk>::set_blocks_hard_limit","value":"pub fn set_blocks_hard_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the absolute limit on disk quota blocks allocated.\n","sig":null,"attributes":[{"value":"/ Set the absolute limit on disk quota blocks allocated.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":278477,"byte_end":278535,"line_start":130,"line_end":130,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":278696,"byte_end":278713,"line_start":136,"line_end":136,"column_start":12,"column_end":29},"name":"blocks_soft_limit","qualname":"<Dqblk>::blocks_soft_limit","value":"pub fn blocks_soft_limit(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Preferred limit on disk quota blocks\n","sig":null,"attributes":[{"value":"/ Preferred limit on disk quota blocks","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":278644,"byte_end":278684,"line_start":135,"line_end":135,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":279051,"byte_end":279072,"line_start":146,"line_end":146,"column_start":12,"column_end":33},"name":"set_blocks_soft_limit","qualname":"<Dqblk>::set_blocks_soft_limit","value":"pub fn set_blocks_soft_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the preferred limit on disk quota blocks allocated.\n","sig":null,"attributes":[{"value":"/ Set the preferred limit on disk quota blocks allocated.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":278980,"byte_end":279039,"line_start":145,"line_end":145,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":279195,"byte_end":279209,"line_start":151,"line_end":151,"column_start":12,"column_end":26},"name":"occupied_space","qualname":"<Dqblk>::occupied_space","value":"pub fn occupied_space(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Current occupied space (bytes).\n","sig":null,"attributes":[{"value":"/ Current occupied space (bytes).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":279148,"byte_end":279183,"line_start":150,"line_end":150,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":279523,"byte_end":279540,"line_start":161,"line_end":161,"column_start":12,"column_end":29},"name":"inodes_hard_limit","qualname":"<Dqblk>::inodes_hard_limit","value":"pub fn inodes_hard_limit(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of allocated inodes.\n","sig":null,"attributes":[{"value":"/ Maximum number of allocated inodes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":279472,"byte_end":279511,"line_start":160,"line_end":160,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":279866,"byte_end":279887,"line_start":171,"line_end":171,"column_start":12,"column_end":33},"name":"set_inodes_hard_limit","qualname":"<Dqblk>::set_inodes_hard_limit","value":"pub fn set_inodes_hard_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of allocated inodes.\n","sig":null,"attributes":[{"value":"/ Set the maximum number of allocated inodes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":279807,"byte_end":279854,"line_start":170,"line_end":170,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":280000,"byte_end":280017,"line_start":176,"line_end":176,"column_start":12,"column_end":29},"name":"inodes_soft_limit","qualname":"<Dqblk>::inodes_soft_limit","value":"pub fn inodes_soft_limit(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Preferred inode limit\n","sig":null,"attributes":[{"value":"/ Preferred inode limit","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":279963,"byte_end":279988,"line_start":175,"line_end":175,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":280344,"byte_end":280365,"line_start":186,"line_end":186,"column_start":12,"column_end":33},"name":"set_inodes_soft_limit","qualname":"<Dqblk>::set_inodes_soft_limit","value":"pub fn set_inodes_soft_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the preferred limit of allocated inodes.\n","sig":null,"attributes":[{"value":"/ Set the preferred limit of allocated inodes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":280284,"byte_end":280332,"line_start":185,"line_end":185,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":280492,"byte_end":280508,"line_start":191,"line_end":191,"column_start":12,"column_end":28},"name":"allocated_inodes","qualname":"<Dqblk>::allocated_inodes","value":"pub fn allocated_inodes(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Current number of allocated inodes.\n","sig":null,"attributes":[{"value":"/ Current number of allocated inodes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":280441,"byte_end":280480,"line_start":190,"line_end":190,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":280823,"byte_end":280839,"line_start":201,"line_end":201,"column_start":12,"column_end":28},"name":"block_time_limit","qualname":"<Dqblk>::block_time_limit","value":"pub fn block_time_limit(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Time limit for excessive disk use.\n","sig":null,"attributes":[{"value":"/ Time limit for excessive disk use.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":280773,"byte_end":280811,"line_start":200,"line_end":200,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":281157,"byte_end":281177,"line_start":211,"line_end":211,"column_start":12,"column_end":32},"name":"set_block_time_limit","qualname":"<Dqblk>::set_block_time_limit","value":"pub fn set_block_time_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the time limit for excessive disk use.\n","sig":null,"attributes":[{"value":"/ Set the time limit for excessive disk use.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":281099,"byte_end":281145,"line_start":210,"line_end":210,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":281295,"byte_end":281311,"line_start":216,"line_end":216,"column_start":12,"column_end":28},"name":"inode_time_limit","qualname":"<Dqblk>::inode_time_limit","value":"pub fn inode_time_limit(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Time limit for excessive files.\n","sig":null,"attributes":[{"value":"/ Time limit for excessive files.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":281248,"byte_end":281283,"line_start":215,"line_end":215,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":281626,"byte_end":281646,"line_start":226,"line_end":226,"column_start":12,"column_end":32},"name":"set_inode_time_limit","qualname":"<Dqblk>::set_inode_time_limit","value":"pub fn set_inode_time_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Set the time limit for excessive files.\n","sig":null,"attributes":[{"value":"/ Set the time limit for excessive files.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":281571,"byte_end":281614,"line_start":225,"line_end":225,"column_start":5,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":684},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":282194,"byte_end":282205,"line_start":244,"line_end":244,"column_start":8,"column_end":19},"name":"quotactl_on","qualname":"::sys::quota::quotactl_on","value":"pub fn quotactl_on<P: ?Sized + NixPath>(QuotaType, &P, QuotaFmt, &P)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Turn on disk quotas for a block device.\n","sig":null,"attributes":[{"value":"/ Turn on disk quotas for a block device.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":282143,"byte_end":282186,"line_start":243,"line_end":243,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":687},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":282634,"byte_end":282646,"line_start":253,"line_end":253,"column_start":8,"column_end":20},"name":"quotactl_off","qualname":"::sys::quota::quotactl_off","value":"pub fn quotactl_off<P: ?Sized + NixPath>(QuotaType, &P) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Disable disk quotas for a block device.\n","sig":null,"attributes":[{"value":"/ Disable disk quotas for a block device.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":282583,"byte_end":282626,"line_start":252,"line_end":252,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":689},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":282877,"byte_end":282890,"line_start":258,"line_end":258,"column_start":8,"column_end":21},"name":"quotactl_sync","qualname":"::sys::quota::quotactl_sync","value":"pub fn quotactl_sync<P: ?Sized + NixPath>(QuotaType, Option<&P>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Update the on-disk copy of quota usages for a filesystem.\n","sig":null,"attributes":[{"value":"/ Update the on-disk copy of quota usages for a filesystem.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":282808,"byte_end":282869,"line_start":257,"line_end":257,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":691},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":283130,"byte_end":283142,"line_start":263,"line_end":263,"column_start":8,"column_end":20},"name":"quotactl_get","qualname":"::sys::quota::quotactl_get","value":"pub fn quotactl_get<P: ?Sized + NixPath>(QuotaType, &P, c_int)\n-> Result<Dqblk>","parent":null,"children":[],"decl_id":null,"docs":" Get disk quota limits and current usage for the given user/group id.\n","sig":null,"attributes":[{"value":"/ Get disk quota limits and current usage for the given user/group id.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":283050,"byte_end":283122,"line_start":262,"line_end":262,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":693},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":283490,"byte_end":283502,"line_start":270,"line_end":270,"column_start":8,"column_end":20},"name":"quotactl_set","qualname":"::sys::quota::quotactl_set","value":"pub fn quotactl_set<P: ?Sized +\n                    NixPath>(QuotaType, &P, c_int, &Dqblk, QuotaValidFlags)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Configure quota values for the specified fields for a given user/group id.\n","sig":null,"attributes":[{"value":"/ Configure quota values for the specified fields for a given user/group id.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":283404,"byte_end":283482,"line_start":269,"line_end":269,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":695},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"reboot","qualname":"::sys::reboot","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":6147},{"krate":0,"index":6179},{"krate":0,"index":6178},{"krate":0,"index":6176},{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6170},{"krate":0,"index":6168},{"krate":0,"index":6165},{"krate":0,"index":6166},{"krate":0,"index":6163},{"krate":0,"index":703},{"krate":0,"index":704}],"decl_id":null,"docs":" Reboot/shutdown or enable/disable Ctrl-Alt-Delete.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160310,"byte_end":160342,"line_start":53,"line_end":53,"column_start":1,"column_end":33}},{"value":"/ Reboot/shutdown or enable/disable Ctrl-Alt-Delete.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":283818,"byte_end":283872,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6148},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284190,"byte_end":284204,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"RB_HALT_SYSTEM","qualname":"::sys::reboot::RebootMode::RB_HALT_SYSTEM","value":"RebootMode::RB_HALT_SYSTEM","parent":{"krate":0,"index":6147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6151},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284214,"byte_end":284222,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"name":"RB_KEXEC","qualname":"::sys::reboot::RebootMode::RB_KEXEC","value":"RebootMode::RB_KEXEC","parent":{"krate":0,"index":6147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6154},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284232,"byte_end":284244,"line_start":18,"line_end":18,"column_start":9,"column_end":21},"name":"RB_POWER_OFF","qualname":"::sys::reboot::RebootMode::RB_POWER_OFF","value":"RebootMode::RB_POWER_OFF","parent":{"krate":0,"index":6147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6157},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284254,"byte_end":284265,"line_start":19,"line_end":19,"column_start":9,"column_end":20},"name":"RB_AUTOBOOT","qualname":"::sys::reboot::RebootMode::RB_AUTOBOOT","value":"RebootMode::RB_AUTOBOOT","parent":{"krate":0,"index":6147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6160},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284314,"byte_end":284327,"line_start":21,"line_end":21,"column_start":9,"column_end":22},"name":"RB_SW_SUSPEND","qualname":"::sys::reboot::RebootMode::RB_SW_SUSPEND","value":"RebootMode::RB_SW_SUSPEND","parent":{"krate":0,"index":6147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6147},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284169,"byte_end":284179,"line_start":15,"line_end":15,"column_start":14,"column_end":24},"name":"RebootMode","qualname":"::sys::reboot::RebootMode","value":"pub enum RebootMode {\n    RB_HALT_SYSTEM = ,\n    RB_KEXEC = ,\n    RB_POWER_OFF = ,\n    RB_AUTOBOOT = ,\n    RB_SW_SUSPEND = ,\n}","parent":null,"children":[{"krate":0,"index":6148},{"krate":0,"index":6151},{"krate":0,"index":6154},{"krate":0,"index":6157},{"krate":0,"index":6160}],"decl_id":null,"docs":" How exactly should the system be rebooted.","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":703},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284345,"byte_end":284351,"line_start":25,"line_end":25,"column_start":8,"column_end":14},"name":"reboot","qualname":"::sys::reboot::reboot","value":"pub fn reboot(RebootMode) -> Result<Void>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":704},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284644,"byte_end":284659,"line_start":35,"line_end":35,"column_start":8,"column_end":23},"name":"set_cad_enabled","qualname":"::sys::reboot::set_cad_enabled","value":"pub fn set_cad_enabled(bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the reboot keystroke (Ctrl-Alt-Delete).","sig":null,"attributes":[{"value":"/ Enable or disable the reboot keystroke (Ctrl-Alt-Delete).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284486,"byte_end":284547,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284548,"byte_end":284551,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Corresponds to calling `reboot(RB_ENABLE_CAD)` or `reboot(RB_DISABLE_CAD)` in C.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/reboot.rs","byte_start":284552,"byte_end":284636,"line_start":34,"line_end":34,"column_start":1,"column_end":85}}]},{"kind":"Mod","id":{"krate":0,"index":705},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select","qualname":"::sys::select","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":6181},{"krate":0,"index":6185},{"krate":0,"index":6184},{"krate":0,"index":721},{"krate":0,"index":728},{"krate":0,"index":741}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6181},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285245,"byte_end":285250,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"FdSet","qualname":"::sys::select::FdSet","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285160,"byte_end":285170,"line_start":13,"line_end":13,"column_start":1,"column_end":11}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285194,"byte_end":285233,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285291,"byte_end":285294,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<FdSet>::new","value":"pub fn new() -> FdSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285450,"byte_end":285456,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"insert","qualname":"<FdSet>::insert","value":"pub fn insert(&mut Self, RawFd)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285549,"byte_end":285555,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"remove","qualname":"<FdSet>::remove","value":"pub fn remove(&mut Self, RawFd)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285648,"byte_end":285656,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"contains","qualname":"<FdSet>::contains","value":"pub fn contains(&mut Self, RawFd) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285758,"byte_end":285763,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"clear","qualname":"<FdSet>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286371,"byte_end":286378,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"highest","qualname":"<FdSet>::highest","value":"pub fn highest(&mut Self) -> Option<RawFd>","parent":null,"children":[],"decl_id":null,"docs":" Finds the highest file descriptor in the set.","sig":null,"attributes":[{"value":"/ Finds the highest file descriptor in the set.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285835,"byte_end":285884,"line_start":41,"line_end":41,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285889,"byte_end":285892,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the set is empty.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285897,"byte_end":285936,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285941,"byte_end":285944,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This can be used to calculate the `nfds` parameter of the [`select`] function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285949,"byte_end":286031,"line_start":45,"line_end":45,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286036,"byte_end":286039,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286044,"byte_end":286057,"line_start":47,"line_end":47,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286062,"byte_end":286065,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286070,"byte_end":286077,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286082,"byte_end":286105,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/ # use nix::sys::select::FdSet;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286110,"byte_end":286144,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286149,"byte_end":286166,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/ let mut set = FdSet::new();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286171,"byte_end":286202,"line_start":53,"line_end":53,"column_start":5,"column_end":36}},{"value":"/ set.insert(4);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286207,"byte_end":286225,"line_start":54,"line_end":54,"column_start":5,"column_end":23}},{"value":"/ set.insert(9);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286230,"byte_end":286248,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.highest(), Some(9));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286253,"byte_end":286292,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286297,"byte_end":286304,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286309,"byte_end":286316,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286321,"byte_end":286324,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`select`]: fn.select.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286329,"byte_end":286359,"line_start":60,"line_end":60,"column_start":5,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":728},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287700,"byte_end":287706,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"select","qualname":"::sys::select::select","value":"pub fn select<'a, N, R, W, E, T>(N, R, W, E, T) -> Result<c_int> where\nN: Into<Option<c_int>>, R: Into<Option<&'a mut FdSet>>,\nW: Into<Option<&'a mut FdSet>>, E: Into<Option<&'a mut FdSet>>,\nT: Into<Option<&'a mut TimeVal>>","parent":null,"children":[],"decl_id":null,"docs":" Monitors file descriptors for readiness","sig":null,"attributes":[{"value":"/ Monitors file descriptors for readiness","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286643,"byte_end":286686,"line_start":73,"line_end":73,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286687,"byte_end":286690,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Returns the total number of ready file descriptors in all sets. The sets are changed so that all","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286691,"byte_end":286791,"line_start":75,"line_end":75,"column_start":1,"column_end":101}},{"value":"/ file descriptors that are ready for the given operation are set.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286792,"byte_end":286860,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286861,"byte_end":286864,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ When this function returns, `timeout` has an implementation-defined value.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286865,"byte_end":286943,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286944,"byte_end":286947,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286948,"byte_end":286964,"line_start":80,"line_end":80,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286965,"byte_end":286968,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ * `nfds`: The highest file descriptor set in any of the passed `FdSet`s, plus 1. If `None`, this","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":286969,"byte_end":287069,"line_start":82,"line_end":82,"column_start":1,"column_end":101}},{"value":"/   is calculated automatically by calling [`FdSet::highest`] on all descriptor sets and adding 1","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287070,"byte_end":287169,"line_start":83,"line_end":83,"column_start":1,"column_end":100}},{"value":"/   to the maximum of that.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287170,"byte_end":287199,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/ * `readfds`: File descriptors to check for being ready to read.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287200,"byte_end":287267,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/ * `writefds`: File descriptors to check for being ready to write.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287268,"byte_end":287337,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/ * `errorfds`: File descriptors to check for pending error conditions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287338,"byte_end":287411,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/ * `timeout`: Maximum time to wait for descriptors to become ready (`None` to block","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287412,"byte_end":287498,"line_start":88,"line_end":88,"column_start":1,"column_end":87}},{"value":"/   indefinitely).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287499,"byte_end":287519,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287520,"byte_end":287523,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287524,"byte_end":287540,"line_start":91,"line_end":91,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287541,"byte_end":287544,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ [select(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/select.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287545,"byte_end":287631,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287632,"byte_end":287635,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`FdSet::highest`]: struct.FdSet.html#method.highest","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":287636,"byte_end":287692,"line_start":95,"line_end":95,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":741},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290434,"byte_end":290441,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"pselect","qualname":"::sys::select::pselect","value":"pub fn pselect<'a, N, R, W, E, T, S>(N, R, W, E, T, S) -> Result<c_int> where\nN: Into<Option<c_int>>, R: Into<Option<&'a mut FdSet>>,\nW: Into<Option<&'a mut FdSet>>, E: Into<Option<&'a mut FdSet>>,\nT: Into<Option<&'a TimeSpec>>, S: Into<Option<&'a SigSet>>","parent":null,"children":[],"decl_id":null,"docs":" Monitors file descriptors for readiness with an altered signal mask.","sig":null,"attributes":[{"value":"/ Monitors file descriptors for readiness with an altered signal mask.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289066,"byte_end":289138,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289139,"byte_end":289142,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Returns the total number of ready file descriptors in all sets. The sets are changed so that all","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289143,"byte_end":289243,"line_start":137,"line_end":137,"column_start":1,"column_end":101}},{"value":"/ file descriptors that are ready for the given operation are set.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289244,"byte_end":289312,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289313,"byte_end":289316,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ When this function returns, the original signal mask is restored.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289317,"byte_end":289386,"line_start":140,"line_end":140,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289387,"byte_end":289390,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ Unlike [`select`](#fn.select), `pselect` does not mutate the `timeout` value.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289391,"byte_end":289472,"line_start":142,"line_end":142,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289473,"byte_end":289476,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289477,"byte_end":289493,"line_start":144,"line_end":144,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289494,"byte_end":289497,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ * `nfds`: The highest file descriptor set in any of the passed `FdSet`s, plus 1. If `None`, this","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289498,"byte_end":289598,"line_start":146,"line_end":146,"column_start":1,"column_end":101}},{"value":"/   is calculated automatically by calling [`FdSet::highest`] on all descriptor sets and adding 1","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289599,"byte_end":289698,"line_start":147,"line_end":147,"column_start":1,"column_end":100}},{"value":"/   to the maximum of that.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289699,"byte_end":289728,"line_start":148,"line_end":148,"column_start":1,"column_end":30}},{"value":"/ * `readfds`: File descriptors to check for read readiness","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289729,"byte_end":289790,"line_start":149,"line_end":149,"column_start":1,"column_end":62}},{"value":"/ * `writefds`: File descriptors to check for write readiness","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289791,"byte_end":289854,"line_start":150,"line_end":150,"column_start":1,"column_end":64}},{"value":"/ * `errorfds`: File descriptors to check for pending error conditions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289855,"byte_end":289928,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ * `timeout`: Maximum time to wait for descriptors to become ready (`None` to block","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":289929,"byte_end":290015,"line_start":152,"line_end":152,"column_start":1,"column_end":87}},{"value":"/   indefinitely).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290016,"byte_end":290036,"line_start":153,"line_end":153,"column_start":1,"column_end":21}},{"value":"/ * `sigmask`: Signal mask to activate while waiting for file descriptors to turn","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290037,"byte_end":290120,"line_start":154,"line_end":154,"column_start":1,"column_end":84}},{"value":"/    ready (`None` to set no alternative signal mask).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290121,"byte_end":290177,"line_start":155,"line_end":155,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290178,"byte_end":290181,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290182,"byte_end":290198,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290199,"byte_end":290202,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [pselect(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pselect.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290203,"byte_end":290291,"line_start":159,"line_end":159,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290292,"byte_end":290295,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ [The new pselect() system call](https://lwn.net/Articles/176911/)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290296,"byte_end":290365,"line_start":161,"line_end":161,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290366,"byte_end":290369,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [`FdSet::highest`]: struct.FdSet.html#method.highest","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":290370,"byte_end":290426,"line_start":163,"line_end":163,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":756},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sendfile","qualname":"::sys::sendfile","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160377,"byte_end":160535,"line_start":58,"line_end":62,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":764},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":296207,"byte_end":296215,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"sendfile","qualname":"::sys::sendfile::sendfile","value":"pub fn sendfile(RawFd, RawFd, Option<&mut off_t>, usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Copy up to `count` bytes to `out_fd` from `in_fd` starting at `offset`.","sig":null,"attributes":[{"value":"/ Copy up to `count` bytes to `out_fd` from `in_fd` starting at `offset`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":295467,"byte_end":295542,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":295543,"byte_end":295546,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Returns a `Result` with the number of bytes written.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":295547,"byte_end":295603,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":295604,"byte_end":295607,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If `offset` is `None`, `sendfile` will begin reading at the current offset of `in_fd`and will","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":295608,"byte_end":295705,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ update the offset of `in_fd`. If `offset` is `Some`, `sendfile` will begin at the specified","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":295706,"byte_end":295801,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ offset and will not update the offset of `in_fd`. Instead, it will mutate `offset` to point to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":295802,"byte_end":295900,"line_start":15,"line_end":15,"column_start":1,"column_end":99}},{"value":"/ the byte after the last byte copied.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":295901,"byte_end":295941,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":295942,"byte_end":295945,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `in_fd` must support `mmap`-like operations and therefore cannot be a socket.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":295946,"byte_end":296027,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":296028,"byte_end":296031,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For more information, see [the sendfile(2) man page.](http://man7.org/linux/man-pages/man2/sendfile.2.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":296032,"byte_end":296143,"line_start":20,"line_end":20,"column_start":1,"column_end":112}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sendfile.rs","byte_start":296144,"byte_end":296199,"line_start":21,"line_end":21,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":767},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::sys::signal","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":6187},{"krate":0,"index":6297},{"krate":0,"index":6296},{"krate":0,"index":6294},{"krate":0,"index":6291},{"krate":0,"index":6292},{"krate":0,"index":6288},{"krate":0,"index":6286},{"krate":0,"index":6283},{"krate":0,"index":6284},{"krate":0,"index":6281},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":6299},{"krate":0,"index":6302},{"krate":0,"index":6301},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":6304},{"krate":0,"index":6326},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6317},{"krate":0,"index":6311},{"krate":0,"index":6309},{"krate":0,"index":6306},{"krate":0,"index":6327},{"krate":0,"index":6338},{"krate":0,"index":6340},{"krate":0,"index":6342},{"krate":0,"index":6344},{"krate":0,"index":6346},{"krate":0,"index":6359},{"krate":0,"index":6362},{"krate":0,"index":6364},{"krate":0,"index":6367},{"krate":0,"index":6369},{"krate":0,"index":6372},{"krate":0,"index":6374},{"krate":0,"index":6377},{"krate":0,"index":6379},{"krate":0,"index":6382},{"krate":0,"index":6385},{"krate":0,"index":6420},{"krate":0,"index":6446},{"krate":0,"index":6445},{"krate":0,"index":6443},{"krate":0,"index":6440},{"krate":0,"index":6441},{"krate":0,"index":6437},{"krate":0,"index":6435},{"krate":0,"index":6432},{"krate":0,"index":6433},{"krate":0,"index":6430},{"krate":0,"index":6448},{"krate":0,"index":6451},{"krate":0,"index":6450},{"krate":0,"index":798},{"krate":0,"index":813},{"krate":0,"index":6453},{"krate":0,"index":6471},{"krate":0,"index":6469},{"krate":0,"index":6468},{"krate":0,"index":6464},{"krate":0,"index":6465},{"krate":0,"index":6473},{"krate":0,"index":6476},{"krate":0,"index":6475},{"krate":0,"index":815},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":6478},{"krate":0,"index":6495},{"krate":0,"index":6494},{"krate":0,"index":6492},{"krate":0,"index":6488},{"krate":0,"index":6489},{"krate":0,"index":834}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6188},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":304886,"byte_end":304892,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"SIGHUP","qualname":"::sys::signal::Signal::SIGHUP","value":"Signal::SIGHUP","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6191},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":304902,"byte_end":304908,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"name":"SIGINT","qualname":"::sys::signal::Signal::SIGINT","value":"Signal::SIGINT","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6194},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":304918,"byte_end":304925,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"SIGQUIT","qualname":"::sys::signal::Signal::SIGQUIT","value":"Signal::SIGQUIT","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6197},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":304935,"byte_end":304941,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"name":"SIGILL","qualname":"::sys::signal::Signal::SIGILL","value":"Signal::SIGILL","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6200},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":304951,"byte_end":304958,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"SIGTRAP","qualname":"::sys::signal::Signal::SIGTRAP","value":"Signal::SIGTRAP","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6203},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":304968,"byte_end":304975,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"SIGABRT","qualname":"::sys::signal::Signal::SIGABRT","value":"Signal::SIGABRT","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6206},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":304985,"byte_end":304991,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"SIGBUS","qualname":"::sys::signal::Signal::SIGBUS","value":"Signal::SIGBUS","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6209},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305001,"byte_end":305007,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"name":"SIGFPE","qualname":"::sys::signal::Signal::SIGFPE","value":"Signal::SIGFPE","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6212},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305017,"byte_end":305024,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"SIGKILL","qualname":"::sys::signal::Signal::SIGKILL","value":"Signal::SIGKILL","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6215},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305034,"byte_end":305041,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"name":"SIGUSR1","qualname":"::sys::signal::Signal::SIGUSR1","value":"Signal::SIGUSR1","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6218},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305051,"byte_end":305058,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"SIGSEGV","qualname":"::sys::signal::Signal::SIGSEGV","value":"Signal::SIGSEGV","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6221},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305068,"byte_end":305075,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"SIGUSR2","qualname":"::sys::signal::Signal::SIGUSR2","value":"Signal::SIGUSR2","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6224},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305085,"byte_end":305092,"line_start":38,"line_end":38,"column_start":9,"column_end":16},"name":"SIGPIPE","qualname":"::sys::signal::Signal::SIGPIPE","value":"Signal::SIGPIPE","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6227},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305102,"byte_end":305109,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"name":"SIGALRM","qualname":"::sys::signal::Signal::SIGALRM","value":"Signal::SIGALRM","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6230},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305119,"byte_end":305126,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"name":"SIGTERM","qualname":"::sys::signal::Signal::SIGTERM","value":"Signal::SIGTERM","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6233},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305330,"byte_end":305339,"line_start":43,"line_end":43,"column_start":9,"column_end":18},"name":"SIGSTKFLT","qualname":"::sys::signal::Signal::SIGSTKFLT","value":"Signal::SIGSTKFLT","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(any(target_os = \"android\", target_os = \"emscripten\", target_os =\n              \"linux\"),\n          not(any(target_arch = \"mips\", target_arch = \"mips64\", target_arch =\n                  \"sparc64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6236},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305349,"byte_end":305356,"line_start":44,"line_end":44,"column_start":9,"column_end":16},"name":"SIGCHLD","qualname":"::sys::signal::Signal::SIGCHLD","value":"Signal::SIGCHLD","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6239},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305366,"byte_end":305373,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"name":"SIGCONT","qualname":"::sys::signal::Signal::SIGCONT","value":"Signal::SIGCONT","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6242},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305383,"byte_end":305390,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"name":"SIGSTOP","qualname":"::sys::signal::Signal::SIGSTOP","value":"Signal::SIGSTOP","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6245},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305400,"byte_end":305407,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"SIGTSTP","qualname":"::sys::signal::Signal::SIGTSTP","value":"Signal::SIGTSTP","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6248},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305417,"byte_end":305424,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"SIGTTIN","qualname":"::sys::signal::Signal::SIGTTIN","value":"Signal::SIGTTIN","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6251},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305434,"byte_end":305441,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"SIGTTOU","qualname":"::sys::signal::Signal::SIGTTOU","value":"Signal::SIGTTOU","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6254},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305451,"byte_end":305457,"line_start":50,"line_end":50,"column_start":9,"column_end":15},"name":"SIGURG","qualname":"::sys::signal::Signal::SIGURG","value":"Signal::SIGURG","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6257},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305467,"byte_end":305474,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"name":"SIGXCPU","qualname":"::sys::signal::Signal::SIGXCPU","value":"Signal::SIGXCPU","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6260},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305484,"byte_end":305491,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"name":"SIGXFSZ","qualname":"::sys::signal::Signal::SIGXFSZ","value":"Signal::SIGXFSZ","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6263},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305501,"byte_end":305510,"line_start":53,"line_end":53,"column_start":9,"column_end":18},"name":"SIGVTALRM","qualname":"::sys::signal::Signal::SIGVTALRM","value":"Signal::SIGVTALRM","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6266},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305520,"byte_end":305527,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"name":"SIGPROF","qualname":"::sys::signal::Signal::SIGPROF","value":"Signal::SIGPROF","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6269},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305537,"byte_end":305545,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"name":"SIGWINCH","qualname":"::sys::signal::Signal::SIGWINCH","value":"Signal::SIGWINCH","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6272},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305555,"byte_end":305560,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"SIGIO","qualname":"::sys::signal::Signal::SIGIO","value":"Signal::SIGIO","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6275},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305660,"byte_end":305666,"line_start":58,"line_end":58,"column_start":9,"column_end":15},"name":"SIGPWR","qualname":"::sys::signal::Signal::SIGPWR","value":"Signal::SIGPWR","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"emscripten\", target_os =\n          \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6278},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305676,"byte_end":305682,"line_start":59,"line_end":59,"column_start":9,"column_end":15},"name":"SIGSYS","qualname":"::sys::signal::Signal::SIGSYS","value":"Signal::SIGSYS","parent":{"krate":0,"index":6187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6187},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":304869,"byte_end":304875,"line_start":25,"line_end":25,"column_start":14,"column_end":20},"name":"Signal","qualname":"::sys::signal::Signal","value":"pub enum Signal {\n    SIGHUP = ,\n    SIGINT = ,\n    SIGQUIT = ,\n    SIGILL = ,\n    SIGTRAP = ,\n    SIGABRT = ,\n    SIGBUS = ,\n    SIGFPE = ,\n    SIGKILL = ,\n    SIGUSR1 = ,\n    SIGSEGV = ,\n    SIGUSR2 = ,\n    SIGPIPE = ,\n    SIGALRM = ,\n    SIGTERM = ,\n\n    #[cfg(all(any(target_os = \"android\", target_os = \"emscripten\", target_os =\n                  \"linux\"),\n              not(any(target_arch = \"mips\", target_arch = \"mips64\",\n                      target_arch = \"sparc64\"))))]\n    SIGSTKFLT = ,\n    SIGCHLD = ,\n    SIGCONT = ,\n    SIGSTOP = ,\n    SIGTSTP = ,\n    SIGTTIN = ,\n    SIGTTOU = ,\n    SIGURG = ,\n    SIGXCPU = ,\n    SIGXFSZ = ,\n    SIGVTALRM = ,\n    SIGPROF = ,\n    SIGWINCH = ,\n    SIGIO = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"emscripten\", target_os =\n              \"linux\"))]\n    SIGPWR = ,\n    SIGSYS = ,\n}","parent":null,"children":[{"krate":0,"index":6188},{"krate":0,"index":6191},{"krate":0,"index":6194},{"krate":0,"index":6197},{"krate":0,"index":6200},{"krate":0,"index":6203},{"krate":0,"index":6206},{"krate":0,"index":6209},{"krate":0,"index":6212},{"krate":0,"index":6215},{"krate":0,"index":6218},{"krate":0,"index":6221},{"krate":0,"index":6224},{"krate":0,"index":6227},{"krate":0,"index":6230},{"krate":0,"index":6233},{"krate":0,"index":6236},{"krate":0,"index":6239},{"krate":0,"index":6242},{"krate":0,"index":6245},{"krate":0,"index":6248},{"krate":0,"index":6251},{"krate":0,"index":6254},{"krate":0,"index":6257},{"krate":0,"index":6260},{"krate":0,"index":6263},{"krate":0,"index":6266},{"krate":0,"index":6269},{"krate":0,"index":6272},{"krate":0,"index":6275},{"krate":0,"index":6278}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":788},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":311808,"byte_end":311812,"line_start":266,"line_end":266,"column_start":11,"column_end":15},"name":"NSIG","qualname":"::sys::signal::NSIG","value":"libc::c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6299},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":311907,"byte_end":311921,"line_start":270,"line_end":270,"column_start":12,"column_end":26},"name":"SignalIterator","qualname":"::sys::signal::SignalIterator","value":"SignalIterator {  }","parent":null,"children":[{"krate":0,"index":6300}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":311856,"byte_end":311895,"line_start":269,"line_end":269,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312272,"byte_end":312280,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"iterator","qualname":"<Signal>::iterator","value":"pub fn iterator() -> SignalIterator","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312574,"byte_end":312584,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"from_c_int","qualname":"<Signal>::from_c_int","value":"pub fn from_c_int(libc::c_int) -> Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312553,"byte_end":312562,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":795},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312806,"byte_end":312812,"line_start":306,"line_end":306,"column_start":11,"column_end":17},"name":"SIGIOT","qualname":"::sys::signal::SIGIOT","value":"Signal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":796},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312843,"byte_end":312850,"line_start":307,"line_end":307,"column_start":11,"column_end":18},"name":"SIGPOLL","qualname":"::sys::signal::SIGPOLL","value":"Signal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":797},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312879,"byte_end":312888,"line_start":308,"line_end":308,"column_start":11,"column_end":20},"name":"SIGUNUSED","qualname":"::sys::signal::SIGUNUSED","value":"Signal","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6304},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312940,"byte_end":312947,"line_start":311,"line_end":311,"column_start":16,"column_end":23},"name":"SaFlags","qualname":"::sys::signal::SaFlags","value":"SaFlags {  }","parent":null,"children":[{"krate":0,"index":6305}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6347},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312971,"byte_end":312983,"line_start":312,"line_end":312,"column_start":9,"column_end":21},"name":"SA_NOCLDSTOP","qualname":"::sys::signal::SaFlags::SA_NOCLDSTOP","value":"SaFlags","parent":{"krate":0,"index":6346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6348},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312993,"byte_end":313005,"line_start":313,"line_end":313,"column_start":9,"column_end":21},"name":"SA_NOCLDWAIT","qualname":"::sys::signal::SaFlags::SA_NOCLDWAIT","value":"SaFlags","parent":{"krate":0,"index":6346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6349},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313015,"byte_end":313025,"line_start":314,"line_end":314,"column_start":9,"column_end":19},"name":"SA_NODEFER","qualname":"::sys::signal::SaFlags::SA_NODEFER","value":"SaFlags","parent":{"krate":0,"index":6346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6350},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313035,"byte_end":313045,"line_start":315,"line_end":315,"column_start":9,"column_end":19},"name":"SA_ONSTACK","qualname":"::sys::signal::SaFlags::SA_ONSTACK","value":"SaFlags","parent":{"krate":0,"index":6346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6351},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313055,"byte_end":313067,"line_start":316,"line_end":316,"column_start":9,"column_end":21},"name":"SA_RESETHAND","qualname":"::sys::signal::SaFlags::SA_RESETHAND","value":"SaFlags","parent":{"krate":0,"index":6346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6352},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313077,"byte_end":313087,"line_start":317,"line_end":317,"column_start":9,"column_end":19},"name":"SA_RESTART","qualname":"::sys::signal::SaFlags::SA_RESTART","value":"SaFlags","parent":{"krate":0,"index":6346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6353},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313097,"byte_end":313107,"line_start":318,"line_end":318,"column_start":9,"column_end":19},"name":"SA_SIGINFO","qualname":"::sys::signal::SaFlags::SA_SIGINFO","value":"SaFlags","parent":{"krate":0,"index":6346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6421},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313182,"byte_end":313191,"line_start":325,"line_end":325,"column_start":9,"column_end":18},"name":"SIG_BLOCK","qualname":"::sys::signal::SigmaskHow::SIG_BLOCK","value":"SigmaskHow::SIG_BLOCK","parent":{"krate":0,"index":6420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6424},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313201,"byte_end":313212,"line_start":326,"line_end":326,"column_start":9,"column_end":20},"name":"SIG_UNBLOCK","qualname":"::sys::signal::SigmaskHow::SIG_UNBLOCK","value":"SigmaskHow::SIG_UNBLOCK","parent":{"krate":0,"index":6420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6427},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313222,"byte_end":313233,"line_start":327,"line_end":327,"column_start":9,"column_end":20},"name":"SIG_SETMASK","qualname":"::sys::signal::SigmaskHow::SIG_SETMASK","value":"SigmaskHow::SIG_SETMASK","parent":{"krate":0,"index":6420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6420},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313161,"byte_end":313171,"line_start":324,"line_end":324,"column_start":14,"column_end":24},"name":"SigmaskHow","qualname":"::sys::signal::SigmaskHow","value":"pub enum SigmaskHow { SIG_BLOCK = , SIG_UNBLOCK = , SIG_SETMASK = , }","parent":null,"children":[{"krate":0,"index":6421},{"krate":0,"index":6424},{"krate":0,"index":6427}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6448},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313318,"byte_end":313324,"line_start":333,"line_end":333,"column_start":12,"column_end":18},"name":"SigSet","qualname":"::sys::signal::SigSet","value":"SigSet {  }","parent":null,"children":[{"krate":0,"index":6449}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313267,"byte_end":313306,"line_start":332,"line_end":332,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313383,"byte_end":313386,"line_start":339,"line_end":339,"column_start":12,"column_end":15},"name":"all","qualname":"<SigSet>::all","value":"pub fn all() -> SigSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313609,"byte_end":313614,"line_start":346,"line_end":346,"column_start":12,"column_end":17},"name":"empty","qualname":"<SigSet>::empty","value":"pub fn empty() -> SigSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313838,"byte_end":313841,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"add","qualname":"<SigSet>::add","value":"pub fn add(&mut Self, Signal)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313989,"byte_end":313994,"line_start":357,"line_end":357,"column_start":12,"column_end":17},"name":"clear","qualname":"<SigSet>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":314105,"byte_end":314111,"line_start":361,"line_end":361,"column_start":12,"column_end":18},"name":"remove","qualname":"<SigSet>::remove","value":"pub fn remove(&mut Self, Signal)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":314259,"byte_end":314267,"line_start":365,"line_end":365,"column_start":12,"column_end":20},"name":"contains","qualname":"<SigSet>::contains","value":"pub fn contains(&Self, Signal) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":314575,"byte_end":314581,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"extend","qualname":"<SigSet>::extend","value":"pub fn extend(&mut Self, &SigSet)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":314853,"byte_end":314868,"line_start":384,"line_end":384,"column_start":12,"column_end":27},"name":"thread_get_mask","qualname":"<SigSet>::thread_get_mask","value":"pub fn thread_get_mask() -> Result<SigSet>","parent":null,"children":[],"decl_id":null,"docs":" Gets the currently blocked (masked) set of signals for the calling thread.\n","sig":null,"attributes":[{"value":"/ Gets the currently blocked (masked) set of signals for the calling thread.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":314763,"byte_end":314841,"line_start":383,"line_end":383,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":315148,"byte_end":315163,"line_start":391,"line_end":391,"column_start":12,"column_end":27},"name":"thread_set_mask","qualname":"<SigSet>::thread_set_mask","value":"pub fn thread_set_mask(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the set of signals as the signal mask for the calling thread.\n","sig":null,"attributes":[{"value":"/ Sets the set of signals as the signal mask for the calling thread.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":315066,"byte_end":315136,"line_start":390,"line_end":390,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":315347,"byte_end":315359,"line_start":396,"line_end":396,"column_start":12,"column_end":24},"name":"thread_block","qualname":"<SigSet>::thread_block","value":"pub fn thread_block(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Adds the set of signals to the signal mask for the calling thread.\n","sig":null,"attributes":[{"value":"/ Adds the set of signals to the signal mask for the calling thread.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":315265,"byte_end":315335,"line_start":395,"line_end":395,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":315546,"byte_end":315560,"line_start":401,"line_end":401,"column_start":12,"column_end":26},"name":"thread_unblock","qualname":"<SigSet>::thread_unblock","value":"pub fn thread_unblock(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes the set of signals from the signal mask for the calling thread.\n","sig":null,"attributes":[{"value":"/ Removes the set of signals from the signal mask for the calling thread.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":315459,"byte_end":315534,"line_start":400,"line_end":400,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":315747,"byte_end":315763,"line_start":406,"line_end":406,"column_start":12,"column_end":28},"name":"thread_swap_mask","qualname":"<SigSet>::thread_swap_mask","value":"pub fn thread_swap_mask(&Self, SigmaskHow) -> Result<SigSet>","parent":null,"children":[],"decl_id":null,"docs":" Sets the set of signals as the signal mask, and returns the old mask.\n","sig":null,"attributes":[{"value":"/ Sets the set of signals as the signal mask, and returns the old mask.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":315662,"byte_end":315735,"line_start":405,"line_end":405,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316127,"byte_end":316131,"line_start":414,"line_end":414,"column_start":12,"column_end":16},"name":"wait","qualname":"<SigSet>::wait","value":"pub fn wait(&Self) -> Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Suspends execution of the calling thread until one of the signals in the\n signal mask becomes pending, and returns the accepted signal.\n","sig":null,"attributes":[{"value":"/ Suspends execution of the calling thread until one of the signals in the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":315969,"byte_end":316045,"line_start":412,"line_end":412,"column_start":5,"column_end":81}},{"value":"/ signal mask becomes pending, and returns the accepted signal.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316050,"byte_end":316115,"line_start":413,"line_end":413,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6454},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316666,"byte_end":316672,"line_start":433,"line_end":433,"column_start":5,"column_end":11},"name":"SigDfl","qualname":"::sys::signal::SigHandler::SigDfl","value":"SigHandler::SigDfl","parent":{"krate":0,"index":6453},"children":[],"decl_id":null,"docs":" Default signal handling.\n","sig":null,"attributes":[{"value":"/ Default signal handling.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316633,"byte_end":316661,"line_start":432,"line_end":432,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6456},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316722,"byte_end":316728,"line_start":435,"line_end":435,"column_start":5,"column_end":11},"name":"SigIgn","qualname":"::sys::signal::SigHandler::SigIgn","value":"SigHandler::SigIgn","parent":{"krate":0,"index":6453},"children":[],"decl_id":null,"docs":" Request that the signal be ignored.\n","sig":null,"attributes":[{"value":"/ Request that the signal be ignored.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316678,"byte_end":316717,"line_start":434,"line_end":434,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6458},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316809,"byte_end":316816,"line_start":437,"line_end":437,"column_start":5,"column_end":12},"name":"Handler","qualname":"::sys::signal::SigHandler::Handler","value":"SigHandler::Handler(extern \"C\" fn(: libc::c_int))","parent":{"krate":0,"index":6453},"children":[],"decl_id":null,"docs":" Use the given signal-catching function, which takes in the signal.\n","sig":null,"attributes":[{"value":"/ Use the given signal-catching function, which takes in the signal.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316734,"byte_end":316804,"line_start":436,"line_end":436,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6461},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317020,"byte_end":317029,"line_start":440,"line_end":440,"column_start":5,"column_end":14},"name":"SigAction","qualname":"::sys::signal::SigHandler::SigAction","value":"SigHandler::SigAction(extern \"C\" fn(: libc::c_int, : *mut libc::siginfo_t, : *mut libc::c_void))","parent":{"krate":0,"index":6453},"children":[],"decl_id":null,"docs":" Use the given signal-catching function, which takes in the signal, information about how\n the signal was generated, and a pointer to the threads `ucontext_t`.\n","sig":null,"attributes":[{"value":"/ Use the given signal-catching function, which takes in the signal, information about how","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316846,"byte_end":316938,"line_start":438,"line_end":438,"column_start":5,"column_end":97}},{"value":"/ the signal was generated, and a pointer to the threads `ucontext_t`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316943,"byte_end":317015,"line_start":439,"line_end":439,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":6453},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316616,"byte_end":316626,"line_start":431,"line_end":431,"column_start":10,"column_end":20},"name":"SigHandler","qualname":"::sys::signal::SigHandler","value":"pub enum SigHandler {\n\n    /// Default signal handling.\n    SigDfl,\n\n    /// Request that the signal be ignored.\n    SigIgn,\n\n    /// Use the given signal-catching function, which takes in the signal.\n    Handler(extern \"C\" fn(: libc::c_int)),\n\n    /// Use the given signal-catching function, which takes in the signal, information about how\n    /// the signal was generated, and a pointer to the threads `ucontext_t`.\n    SigAction(extern \"C\" fn(: libc::c_int, : *mut libc::siginfo_t,\n                            : *mut libc::c_void)),\n}","parent":null,"children":[{"krate":0,"index":6454},{"krate":0,"index":6456},{"krate":0,"index":6458},{"krate":0,"index":6461}],"decl_id":null,"docs":" A signal handler.\n","sig":null,"attributes":[{"value":"/ A signal handler.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316520,"byte_end":316541,"line_start":428,"line_end":428,"column_start":1,"column_end":22}},{"value":"allow(unknown_lints)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316542,"byte_end":316565,"line_start":429,"line_end":429,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6473},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317243,"byte_end":317252,"line_start":446,"line_end":446,"column_start":12,"column_end":21},"name":"SigAction","qualname":"::sys::signal::SigAction","value":"SigAction {  }","parent":null,"children":[{"krate":0,"index":6474}],"decl_id":null,"docs":" Action to take on receipt of a signal. Corresponds to `sigaction`.\n","sig":null,"attributes":[{"value":"/ Action to take on receipt of a signal. Corresponds to `sigaction`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317098,"byte_end":317168,"line_start":443,"line_end":443,"column_start":1,"column_end":71}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317192,"byte_end":317231,"line_start":445,"line_end":445,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317588,"byte_end":317591,"line_start":456,"line_end":456,"column_start":12,"column_end":15},"name":"new","qualname":"<SigAction>::new","value":"pub fn new(SigHandler, SaFlags, SigSet) -> SigAction","parent":null,"children":[],"decl_id":null,"docs":" Creates a new action.","sig":null,"attributes":[{"value":"/ Creates a new action.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317310,"byte_end":317335,"line_start":451,"line_end":451,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317340,"byte_end":317343,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ The `SA_SIGINFO` bit in the `flags` argument is ignored (it will be set only if `handler`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317348,"byte_end":317441,"line_start":453,"line_end":453,"column_start":5,"column_end":98}},{"value":"/ is the `SigAction` variant). `mask` specifies other signals to block during execution of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317446,"byte_end":317538,"line_start":454,"line_end":454,"column_start":5,"column_end":97}},{"value":"/ the signal-catching function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317543,"byte_end":317576,"line_start":455,"line_end":455,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":318402,"byte_end":318407,"line_start":474,"line_end":474,"column_start":12,"column_end":17},"name":"flags","qualname":"<SigAction>::flags","value":"pub fn flags(&Self) -> SaFlags","parent":null,"children":[],"decl_id":null,"docs":" Returns the flags set on the action.\n","sig":null,"attributes":[{"value":"/ Returns the flags set on the action.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":318350,"byte_end":318390,"line_start":473,"line_end":473,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":318626,"byte_end":318630,"line_start":480,"line_end":480,"column_start":12,"column_end":16},"name":"mask","qualname":"<SigAction>::mask","value":"pub fn mask(&Self) -> SigSet","parent":null,"children":[],"decl_id":null,"docs":" Returns the set of signals that are blocked during execution of the action's\n signal-catching function.\n","sig":null,"attributes":[{"value":"/ Returns the set of signals that are blocked during execution of the action's","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":318500,"byte_end":318580,"line_start":478,"line_end":478,"column_start":5,"column_end":85}},{"value":"/ signal-catching function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":318585,"byte_end":318614,"line_start":479,"line_end":479,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":318756,"byte_end":318763,"line_start":485,"line_end":485,"column_start":12,"column_end":19},"name":"handler","qualname":"<SigAction>::handler","value":"pub fn handler(&Self) -> SigHandler","parent":null,"children":[],"decl_id":null,"docs":" Returns the action's handler.\n","sig":null,"attributes":[{"value":"/ Returns the action's handler.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":318711,"byte_end":318744,"line_start":484,"line_end":484,"column_start":5,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":820},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319732,"byte_end":319741,"line_start":506,"line_end":506,"column_start":15,"column_end":24},"name":"sigaction","qualname":"::sys::signal::sigaction","value":"pub unsafe fn sigaction(Signal, &SigAction) -> Result<SigAction>","parent":null,"children":[],"decl_id":null,"docs":" Changes the action taken by a process on receipt of a specific signal.","sig":null,"attributes":[{"value":"/ Changes the action taken by a process on receipt of a specific signal.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319152,"byte_end":319226,"line_start":496,"line_end":496,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319227,"byte_end":319230,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ `signal` can be any signal except `SIGKILL` or `SIGSTOP`. On success, it returns the previous","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319231,"byte_end":319328,"line_start":498,"line_end":498,"column_start":1,"column_end":98}},{"value":"/ action for the given signal. If `sigaction` fails, no new signal handler is installed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319329,"byte_end":319419,"line_start":499,"line_end":499,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319420,"byte_end":319423,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319424,"byte_end":319436,"line_start":501,"line_end":501,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319437,"byte_end":319440,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ Signal handlers may be called at any point during execution, which limits what is safe to do in","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319441,"byte_end":319540,"line_start":503,"line_end":503,"column_start":1,"column_end":100}},{"value":"/ the body of the signal-catching function. Be certain to only make syscalls that are explicitly","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319541,"byte_end":319639,"line_start":504,"line_end":504,"column_start":1,"column_end":99}},{"value":"/ marked safe for signal handlers and only share global data using atomics.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":319640,"byte_end":319717,"line_start":505,"line_end":505,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":822},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":322131,"byte_end":322137,"line_start":571,"line_end":571,"column_start":15,"column_end":21},"name":"signal","qualname":"::sys::signal::signal","value":"pub unsafe fn signal(Signal, SigHandler) -> Result<SigHandler>","parent":null,"children":[],"decl_id":null,"docs":" Signal management (see [signal(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/signal.html))","sig":null,"attributes":[{"value":"/ Signal management (see [signal(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/signal.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320082,"byte_end":320193,"line_start":515,"line_end":515,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320194,"byte_end":320197,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ Installs `handler` for the given `signal`, returning the previous signal","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320198,"byte_end":320274,"line_start":517,"line_end":517,"column_start":1,"column_end":77}},{"value":"/ handler. `signal` should only be used following another call to `signal` or","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320275,"byte_end":320354,"line_start":518,"line_end":518,"column_start":1,"column_end":80}},{"value":"/ if the current handler is the default. The return value of `signal` is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320355,"byte_end":320429,"line_start":519,"line_end":519,"column_start":1,"column_end":75}},{"value":"/ undefined after setting the handler with [`sigaction`][SigActionFn].","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320430,"byte_end":320502,"line_start":520,"line_end":520,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320503,"byte_end":320506,"line_start":521,"line_end":521,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320507,"byte_end":320519,"line_start":522,"line_end":522,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320520,"byte_end":320523,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ If the pointer to the previous signal handler is invalid, undefined","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320524,"byte_end":320595,"line_start":524,"line_end":524,"column_start":1,"column_end":72}},{"value":"/ behavior could be invoked when casting it back to a [`SigAction`][SigActionStruct].","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320596,"byte_end":320683,"line_start":525,"line_end":525,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320684,"byte_end":320687,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320688,"byte_end":320702,"line_start":527,"line_end":527,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320703,"byte_end":320706,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ Ignore `SIGINT`:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320707,"byte_end":320727,"line_start":529,"line_end":529,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320728,"byte_end":320731,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320732,"byte_end":320745,"line_start":531,"line_end":531,"column_start":1,"column_end":14}},{"value":"/ # use nix::sys::signal::{self, Signal, SigHandler};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320746,"byte_end":320801,"line_start":532,"line_end":532,"column_start":1,"column_end":56}},{"value":"/ unsafe { signal::signal(Signal::SIGINT, SigHandler::SigIgn) }.unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320802,"byte_end":320877,"line_start":533,"line_end":533,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320878,"byte_end":320885,"line_start":534,"line_end":534,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320886,"byte_end":320889,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ Use a signal handler to set a flag variable:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320890,"byte_end":320938,"line_start":536,"line_end":536,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320939,"byte_end":320942,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320943,"byte_end":320956,"line_start":538,"line_end":538,"column_start":1,"column_end":14}},{"value":"/ # #[macro_use] extern crate lazy_static;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":320957,"byte_end":321001,"line_start":539,"line_end":539,"column_start":1,"column_end":45}},{"value":"/ # extern crate libc;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321002,"byte_end":321026,"line_start":540,"line_end":540,"column_start":1,"column_end":25}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321027,"byte_end":321050,"line_start":541,"line_end":541,"column_start":1,"column_end":24}},{"value":"/ # use std::sync::atomic::{AtomicBool, Ordering};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321051,"byte_end":321103,"line_start":542,"line_end":542,"column_start":1,"column_end":53}},{"value":"/ # use nix::sys::signal::{self, Signal, SigHandler};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321104,"byte_end":321159,"line_start":543,"line_end":543,"column_start":1,"column_end":56}},{"value":"/ lazy_static! {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321160,"byte_end":321178,"line_start":544,"line_end":544,"column_start":1,"column_end":19}},{"value":"/    static ref SIGNALED: AtomicBool = AtomicBool::new(false);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321179,"byte_end":321243,"line_start":545,"line_end":545,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321244,"byte_end":321249,"line_start":546,"line_end":546,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321250,"byte_end":321253,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ extern fn handle_sigint(signal: libc::c_int) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321254,"byte_end":321304,"line_start":548,"line_end":548,"column_start":1,"column_end":51}},{"value":"/     let signal = Signal::from_c_int(signal).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321305,"byte_end":321362,"line_start":549,"line_end":549,"column_start":1,"column_end":58}},{"value":"/     SIGNALED.store(signal == Signal::SIGINT, Ordering::Relaxed);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321363,"byte_end":321431,"line_start":550,"line_end":550,"column_start":1,"column_end":69}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321432,"byte_end":321437,"line_start":551,"line_end":551,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321438,"byte_end":321441,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321442,"byte_end":321457,"line_start":553,"line_end":553,"column_start":1,"column_end":16}},{"value":"/     let handler = SigHandler::Handler(handle_sigint);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321458,"byte_end":321515,"line_start":554,"line_end":554,"column_start":1,"column_end":58}},{"value":"/     unsafe { signal::signal(Signal::SIGINT, handler) }.unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321516,"byte_end":321584,"line_start":555,"line_end":555,"column_start":1,"column_end":69}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321585,"byte_end":321590,"line_start":556,"line_end":556,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321591,"byte_end":321598,"line_start":557,"line_end":557,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321599,"byte_end":321602,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321603,"byte_end":321615,"line_start":559,"line_end":559,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321616,"byte_end":321619,"line_start":560,"line_end":560,"column_start":1,"column_end":4}},{"value":"/ Returns [`Error::UnsupportedOperation`] if `handler` is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321620,"byte_end":321679,"line_start":561,"line_end":561,"column_start":1,"column_end":60}},{"value":"/ [`SigAction`][SigActionStruct]. Use [`sigaction`][SigActionFn] instead.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321680,"byte_end":321755,"line_start":562,"line_end":562,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321756,"byte_end":321759,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ `signal` also returns any error from `libc::signal`, such as when an attempt","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321760,"byte_end":321840,"line_start":564,"line_end":564,"column_start":1,"column_end":81}},{"value":"/ is made to catch a signal that cannot be caught or to ignore a signal that","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321841,"byte_end":321919,"line_start":565,"line_end":565,"column_start":1,"column_end":79}},{"value":"/ cannot be ignored.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321920,"byte_end":321942,"line_start":566,"line_end":566,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321943,"byte_end":321946,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ [`Error::UnsupportedOperation`]: ../../enum.Error.html#variant.UnsupportedOperation","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":321947,"byte_end":322034,"line_start":568,"line_end":568,"column_start":1,"column_end":88}},{"value":"/ [SigActionStruct]: struct.SigAction.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":322035,"byte_end":322079,"line_start":569,"line_end":569,"column_start":1,"column_end":45}},{"value":"/ [sigactionFn]: fn.sigaction.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":322080,"byte_end":322116,"line_start":570,"line_end":570,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":824},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323713,"byte_end":323728,"line_start":603,"line_end":603,"column_start":8,"column_end":23},"name":"pthread_sigmask","qualname":"::sys::signal::pthread_sigmask","value":"pub fn pthread_sigmask(SigmaskHow, Option<&SigSet>, Option<&mut SigSet>)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Manages the signal mask (set of blocked signals) for the calling thread.","sig":null,"attributes":[{"value":"/ Manages the signal mask (set of blocked signals) for the calling thread.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":322824,"byte_end":322900,"line_start":588,"line_end":588,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":322901,"byte_end":322904,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ If the `set` parameter is `Some(..)`, then the signal mask will be updated with the signal set.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":322905,"byte_end":323004,"line_start":590,"line_end":590,"column_start":1,"column_end":100}},{"value":"/ The `how` flag decides the type of update. If `set` is `None`, `how` will be ignored,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323005,"byte_end":323094,"line_start":591,"line_end":591,"column_start":1,"column_end":90}},{"value":"/ and no modification will take place.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323095,"byte_end":323135,"line_start":592,"line_end":592,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323136,"byte_end":323139,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ If the 'oldset' parameter is `Some(..)` then the current signal mask will be written into it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323140,"byte_end":323237,"line_start":594,"line_end":594,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323238,"byte_end":323241,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ If both `set` and `oldset` is `Some(..)`, the current signal mask will be written into oldset,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323242,"byte_end":323340,"line_start":596,"line_end":596,"column_start":1,"column_end":99}},{"value":"/ and then it will be updated with `set`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323341,"byte_end":323384,"line_start":597,"line_end":597,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323385,"byte_end":323388,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ If both `set` and `oldset` is None, this function is a no-op.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323389,"byte_end":323454,"line_start":599,"line_end":599,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323455,"byte_end":323458,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ For more information, visit the [`pthread_sigmask`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pthread_sigmask.html),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323459,"byte_end":323595,"line_start":601,"line_end":601,"column_start":1,"column_end":137}},{"value":"/ or [`sigprocmask`](http://pubs.opengroup.org/onlinepubs/9699919799/functions/sigprocmask.html) man pages.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":323596,"byte_end":323705,"line_start":602,"line_end":602,"column_start":1,"column_end":110}}]},{"kind":"Function","id":{"krate":0,"index":827},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":324641,"byte_end":324652,"line_start":626,"line_end":626,"column_start":8,"column_end":19},"name":"sigprocmask","qualname":"::sys::signal::sigprocmask","value":"pub fn sigprocmask(SigmaskHow, Option<&SigSet>, Option<&mut SigSet>)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Examine and change blocked signals.","sig":null,"attributes":[{"value":"/ Examine and change blocked signals.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":324449,"byte_end":324488,"line_start":622,"line_end":622,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":324489,"byte_end":324492,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ For more informations see the [`sigprocmask` man","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":324493,"byte_end":324545,"line_start":624,"line_end":624,"column_start":1,"column_end":53}},{"value":"/ pages](http://pubs.opengroup.org/onlinepubs/9699919799/functions/sigprocmask.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":324546,"byte_end":324633,"line_start":625,"line_end":625,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":830},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":325318,"byte_end":325322,"line_start":643,"line_end":643,"column_start":8,"column_end":12},"name":"kill","qualname":"::sys::signal::kill","value":"pub fn kill<T: Into<Option<Signal>>>(::unistd::Pid, T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":832},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":325697,"byte_end":325702,"line_start":653,"line_end":653,"column_start":8,"column_end":13},"name":"raise","qualname":"::sys::signal::raise","value":"pub fn raise(Signal) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":833},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":325945,"byte_end":325962,"line_start":663,"line_end":663,"column_start":10,"column_end":27},"name":"type_of_thread_id","qualname":"::sys::signal::type_of_thread_id","value":"libc::pid_t","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":325908,"byte_end":325935,"line_start":662,"line_end":662,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6479},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":326456,"byte_end":326465,"line_start":673,"line_end":673,"column_start":5,"column_end":14},"name":"SigevNone","qualname":"::sys::signal::SigevNotify::SigevNone","value":"SigevNotify::SigevNone","parent":{"krate":0,"index":6478},"children":[],"decl_id":null,"docs":" No notification will be delivered\n","sig":null,"attributes":[{"value":"/ No notification will be delivered","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":326414,"byte_end":326451,"line_start":672,"line_end":672,"column_start":5,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":6481},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":326674,"byte_end":326685,"line_start":677,"line_end":677,"column_start":5,"column_end":16},"name":"SigevSignal","qualname":"::sys::signal::SigevNotify::SigevSignal","value":"SigevNotify::SigevSignal { signal, si_value }","parent":{"krate":0,"index":6478},"children":[],"decl_id":null,"docs":" The signal given by `signal` will be delivered to the process.  The\n value in `si_value` will be present in the `si_value` field of the\n `siginfo_t` structure of the queued signal.\n","sig":null,"attributes":[{"value":"/ The signal given by `signal` will be delivered to the process.  The","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":326471,"byte_end":326542,"line_start":674,"line_end":674,"column_start":5,"column_end":76}},{"value":"/ value in `si_value` will be present in the `si_value` field of the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":326547,"byte_end":326617,"line_start":675,"line_end":675,"column_start":5,"column_end":75}},{"value":"/ `siginfo_t` structure of the queued signal.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":326622,"byte_end":326669,"line_start":676,"line_end":676,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":6484},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":327409,"byte_end":327422,"line_start":688,"line_end":688,"column_start":5,"column_end":18},"name":"SigevThreadId","qualname":"::sys::signal::SigevNotify::SigevThreadId","value":"SigevNotify::SigevThreadId { signal, thread_id, si_value }","parent":{"krate":0,"index":6478},"children":[],"decl_id":null,"docs":" The signal `signal` is queued to the thread whose LWP ID is given in\n `thread_id`.  The value stored in `si_value` will be present in the\n `si_value` of the `siginfo_t` structure of the queued signal.\n","sig":null,"attributes":[{"value":"/ The signal `signal` is queued to the thread whose LWP ID is given in","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":327126,"byte_end":327198,"line_start":684,"line_end":684,"column_start":5,"column_end":77}},{"value":"/ `thread_id`.  The value stored in `si_value` will be present in the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":327203,"byte_end":327274,"line_start":685,"line_end":685,"column_start":5,"column_end":76}},{"value":"/ `si_value` of the `siginfo_t` structure of the queued signal.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":327279,"byte_end":327344,"line_start":686,"line_end":686,"column_start":5,"column_end":70}},{"value":"cfg(any(target_os = \"freebsd\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":327349,"byte_end":327404,"line_start":687,"line_end":687,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":6478},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":326396,"byte_end":326407,"line_start":671,"line_end":671,"column_start":10,"column_end":21},"name":"SigevNotify","qualname":"::sys::signal::SigevNotify","value":"pub enum SigevNotify {\n\n    /// No notification will be delivered\n    SigevNone,\n\n    /// The signal given by `signal` will be delivered to the process.  The\n    /// value in `si_value` will be present in the `si_value` field of the\n    /// `siginfo_t` structure of the queued signal.\n    SigevSignal {\n        signal: Signal,\n        si_value: libc::intptr_t,\n    },\n\n    /// The signal `signal` is queued to the thread whose LWP ID is given in\n    /// `thread_id`.  The value stored in `si_value` will be present in the\n    /// `si_value` of the `siginfo_t` structure of the queued signal.\n    #[cfg(any(target_os = \"freebsd\", target_os = \"linux\"))]\n    SigevThreadId {\n        signal: Signal,\n        thread_id: type_of_thread_id,\n        si_value: libc::intptr_t,\n    },\n}","parent":null,"children":[{"krate":0,"index":6479},{"krate":0,"index":6481},{"krate":0,"index":6484}],"decl_id":null,"docs":" Used to request asynchronous notification of certain events, for example,\n with POSIX AIO, POSIX message queues, and POSIX timers.\n","sig":null,"attributes":[{"value":"/ Used to request asynchronous notification of certain events, for example,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":325979,"byte_end":326056,"line_start":665,"line_end":665,"column_start":1,"column_end":78}},{"value":"/ with POSIX AIO, POSIX message queues, and POSIX timers.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":326057,"byte_end":326116,"line_start":666,"line_end":666,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6497},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":327960,"byte_end":327968,"line_start":706,"line_end":706,"column_start":16,"column_end":24},"name":"SigEvent","qualname":"::sys::signal::sigevent::SigEvent","value":"SigEvent {  }","parent":null,"children":[{"krate":0,"index":6498}],"decl_id":null,"docs":" Used to request asynchronous notification of the completion of certain\n events, such as POSIX AIO and timers.\n","sig":null,"attributes":[{"value":"/ Used to request asynchronous notification of the completion of certain","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":327782,"byte_end":327856,"line_start":702,"line_end":702,"column_start":5,"column_end":79}},{"value":"/ events, such as POSIX AIO and timers.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":327861,"byte_end":327902,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":327907,"byte_end":327917,"line_start":704,"line_end":704,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":329026,"byte_end":329029,"line_start":724,"line_end":724,"column_start":16,"column_end":19},"name":"new","qualname":"<SigEvent>::new","value":"pub fn new(SigevNotify) -> SigEvent","parent":null,"children":[],"decl_id":null,"docs":" **Note:** this constructor does not allow the user to set the\n `sigev_notify_kevent_flags` field.  That's considered ok because on FreeBSD\n at least those flags don't do anything useful.  That field is part of a\n union that shares space with the more genuinely useful fields.","sig":null,"attributes":[{"value":"/ **Note:** this constructor does not allow the user to set the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328039,"byte_end":328104,"line_start":711,"line_end":711,"column_start":9,"column_end":74}},{"value":"/ `sigev_notify_kevent_flags` field.  That's considered ok because on FreeBSD","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328113,"byte_end":328192,"line_start":712,"line_end":712,"column_start":9,"column_end":88}},{"value":"/ at least those flags don't do anything useful.  That field is part of a","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328201,"byte_end":328276,"line_start":713,"line_end":713,"column_start":9,"column_end":84}},{"value":"/ union that shares space with the more genuinely useful fields.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328285,"byte_end":328351,"line_start":714,"line_end":714,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328360,"byte_end":328363,"line_start":715,"line_end":715,"column_start":9,"column_end":12}},{"value":"/ **Note:** This constructor also doesn't allow the caller to set the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328372,"byte_end":328443,"line_start":716,"line_end":716,"column_start":9,"column_end":80}},{"value":"/ `sigev_notify_function` or `sigev_notify_attributes` fields, which are","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328452,"byte_end":328526,"line_start":717,"line_end":717,"column_start":9,"column_end":83}},{"value":"/ required for `SIGEV_THREAD`.  That's considered ok because on no operating","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328535,"byte_end":328613,"line_start":718,"line_end":718,"column_start":9,"column_end":87}},{"value":"/ system is `SIGEV_THREAD` the most efficient way to deliver AIO","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328622,"byte_end":328688,"line_start":719,"line_end":719,"column_start":9,"column_end":75}},{"value":"/ notification.  FreeBSD and DragonFly BSD programs should prefer `SIGEV_KEVENT`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328697,"byte_end":328780,"line_start":720,"line_end":720,"column_start":9,"column_end":92}},{"value":"/ Linux, Solaris, and portable programs should prefer `SIGEV_THREAD_ID` or","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328789,"byte_end":328865,"line_start":721,"line_end":721,"column_start":9,"column_end":85}},{"value":"/ `SIGEV_SIGNAL`.  That field is part of a union that shares space with the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328874,"byte_end":328951,"line_start":722,"line_end":722,"column_start":9,"column_end":86}},{"value":"/ more genuinely useful `sigev_notify_thread_id`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328960,"byte_end":329010,"line_start":723,"line_end":723,"column_start":9,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":331595,"byte_end":331603,"line_start":770,"line_end":770,"column_start":16,"column_end":24},"name":"sigevent","qualname":"<SigEvent>::sigevent","value":"pub fn sigevent(&Self) -> libc::sigevent","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":852},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signalfd","qualname":"::sys::signalfd","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":6502},{"krate":0,"index":6524},{"krate":0,"index":6520},{"krate":0,"index":6521},{"krate":0,"index":6517},{"krate":0,"index":6518},{"krate":0,"index":6515},{"krate":0,"index":6509},{"krate":0,"index":6507},{"krate":0,"index":6504},{"krate":0,"index":6525},{"krate":0,"index":6531},{"krate":0,"index":6533},{"krate":0,"index":6535},{"krate":0,"index":6537},{"krate":0,"index":6539},{"krate":0,"index":6547},{"krate":0,"index":6550},{"krate":0,"index":6552},{"krate":0,"index":6555},{"krate":0,"index":6557},{"krate":0,"index":6560},{"krate":0,"index":6562},{"krate":0,"index":6565},{"krate":0,"index":6567},{"krate":0,"index":6570},{"krate":0,"index":6573},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":6593},{"krate":0,"index":6608},{"krate":0,"index":6606},{"krate":0,"index":6603},{"krate":0,"index":6604},{"krate":0,"index":6600},{"krate":0,"index":6596},{"krate":0,"index":6597},{"krate":0,"index":870},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":880}],"decl_id":null,"docs":" Interface for the `signalfd` syscall.","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160572,"byte_end":160627,"line_start":67,"line_end":67,"column_start":1,"column_end":56}},{"value":"/ Interface for the `signalfd` syscall.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338330,"byte_end":338371,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338372,"byte_end":338375,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Signal discarding","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338376,"byte_end":338399,"line_start":3,"line_end":3,"column_start":1,"column_end":24}},{"value":"/ When a signal can't be delivered to a process (or thread), it will become a pending signal.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338400,"byte_end":338495,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ Failure to deliver could happen if the signal is blocked by every thread in the process or if","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338496,"byte_end":338593,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ the signal handler is still handling a previous signal.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338594,"byte_end":338653,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338654,"byte_end":338657,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a signal is sent to a process (or thread) that already has a pending signal of the same","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338658,"byte_end":338752,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ type, it will be discarded. This means that if signals of the same type are received faster than","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338753,"byte_end":338853,"line_start":9,"line_end":9,"column_start":1,"column_end":101}},{"value":"/ they are processed, some of those signals will be dropped. Because of this limitation,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338854,"byte_end":338944,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/ `signalfd` in itself cannot be used for reliable communication between processes or threads.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":338945,"byte_end":339041,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339042,"byte_end":339045,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Once the signal is unblocked, or the signal handler is finished, and a signal is still pending","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339046,"byte_end":339144,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ (ie. not consumed from a signalfd) it will be delivered to the signal handler.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339145,"byte_end":339227,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339228,"byte_end":339231,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Please note that signal discarding is not specific to `signalfd`, but also happens with regular","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339232,"byte_end":339331,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ signal handlers.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339332,"byte_end":339352,"line_start":17,"line_end":17,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":6502},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339583,"byte_end":339591,"line_start":30,"line_end":30,"column_start":16,"column_end":24},"name":"SfdFlags","qualname":"::sys::signalfd::SfdFlags","value":"SfdFlags {  }","parent":null,"children":[{"krate":0,"index":6503}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6540},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339615,"byte_end":339627,"line_start":31,"line_end":31,"column_start":9,"column_end":21},"name":"SFD_NONBLOCK","qualname":"::sys::signalfd::SfdFlags::SFD_NONBLOCK","value":"SfdFlags","parent":{"krate":0,"index":6539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6541},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339637,"byte_end":339648,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"name":"SFD_CLOEXEC","qualname":"::sys::signalfd::SfdFlags::SFD_CLOEXEC","value":"SfdFlags","parent":{"krate":0,"index":6539},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":867},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339669,"byte_end":339681,"line_start":36,"line_end":36,"column_start":11,"column_end":23},"name":"SIGNALFD_NEW","qualname":"::sys::signalfd::SIGNALFD_NEW","value":"RawFd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":868},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339705,"byte_end":339726,"line_start":37,"line_end":37,"column_start":11,"column_end":32},"name":"SIGNALFD_SIGINFO_SIZE","qualname":"::sys::signalfd::SIGNALFD_SIGINFO_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":869},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340300,"byte_end":340308,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"signalfd","qualname":"::sys::signalfd::signalfd","value":"pub fn signalfd(RawFd, &SigSet, SfdFlags) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new file descriptor for reading signals.","sig":null,"attributes":[{"value":"/ Creates a new file descriptor for reading signals.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339742,"byte_end":339796,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339797,"byte_end":339800,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ **Important:** please read the module level documentation about signal discarding before using","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339801,"byte_end":339899,"line_start":41,"line_end":41,"column_start":1,"column_end":99}},{"value":"/ this function!","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339900,"byte_end":339918,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339919,"byte_end":339922,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The `mask` parameter specifies the set of signals that can be accepted via this file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":339923,"byte_end":340023,"line_start":44,"line_end":44,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340024,"byte_end":340027,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ A signal must be blocked on every thread in a process, otherwise it won't be visible from","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340028,"byte_end":340121,"line_start":46,"line_end":46,"column_start":1,"column_end":94}},{"value":"/ signalfd (the default handler will be invoked instead).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340122,"byte_end":340181,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340182,"byte_end":340185,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ See [the signalfd man page for more information](http://man7.org/linux/man-pages/man2/signalfd.2.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340186,"byte_end":340292,"line_start":49,"line_end":49,"column_start":1,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":6593},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341444,"byte_end":341452,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"SignalFd","qualname":"::sys::signalfd::SignalFd","value":"","parent":null,"children":[],"decl_id":null,"docs":" A helper struct for creating, reading and closing a `signalfd` instance.","sig":null,"attributes":[{"value":"/ A helper struct for creating, reading and closing a `signalfd` instance.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340479,"byte_end":340555,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340556,"byte_end":340559,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ **Important:** please read the module level documentation about signal discarding before using","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340560,"byte_end":340658,"line_start":58,"line_end":58,"column_start":1,"column_end":99}},{"value":"/ this struct!","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340659,"byte_end":340675,"line_start":59,"line_end":59,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340676,"byte_end":340679,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340680,"byte_end":340694,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340695,"byte_end":340698,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340699,"byte_end":340706,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ # use nix::sys::signalfd::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340707,"byte_end":340739,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ // Set the thread to block the SIGUSR1 signal, otherwise the default handler will be used","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340740,"byte_end":340833,"line_start":65,"line_end":65,"column_start":1,"column_end":94}},{"value":"/ let mut mask = SigSet::empty();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340834,"byte_end":340869,"line_start":66,"line_end":66,"column_start":1,"column_end":36}},{"value":"/ mask.add(signal::SIGUSR1);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340870,"byte_end":340900,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/ mask.thread_block().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340901,"byte_end":340934,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340935,"byte_end":340938,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Signals are queued up on the file descriptor","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340939,"byte_end":340990,"line_start":70,"line_end":70,"column_start":1,"column_end":52}},{"value":"/ let mut sfd = SignalFd::with_flags(&mask, SfdFlags::SFD_NONBLOCK).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":340991,"byte_end":341070,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341071,"byte_end":341074,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ match sfd.read_signal() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341075,"byte_end":341104,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/     // we caught a signal","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341105,"byte_end":341134,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/     Ok(Some(sig)) => (),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341135,"byte_end":341163,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/     // there were no signals waiting (only happens when the SFD_NONBLOCK flag is set,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341164,"byte_end":341253,"line_start":76,"line_end":76,"column_start":1,"column_end":90}},{"value":"/     // otherwise the read_signal call blocks)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341254,"byte_end":341303,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/     Ok(None) => (),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341304,"byte_end":341327,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/     Err(err) => (), // some error happend","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341328,"byte_end":341373,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341374,"byte_end":341379,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341380,"byte_end":341387,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341489,"byte_end":341492,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<SignalFd>::new","value":"pub fn new(&SigSet) -> Result<SignalFd>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341598,"byte_end":341608,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"with_flags","qualname":"<SignalFd>::with_flags","value":"pub fn with_flags(&SigSet, SfdFlags) -> Result<SignalFd>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341762,"byte_end":341770,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"set_mask","qualname":"<SignalFd>::set_mask","value":"pub fn set_mask(&mut Self, &SigSet) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341891,"byte_end":341902,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"read_signal","qualname":"<SignalFd>::read_signal","value":"pub fn read_signal(&mut Self) -> Result<Option<siginfo>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":883},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"socket","qualname":"::sys::socket","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":1070},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":10352},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":10356},{"krate":0,"index":1194},{"krate":0,"index":10358},{"krate":0,"index":1195},{"krate":0,"index":10360},{"krate":0,"index":1196},{"krate":0,"index":10362},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":7193},{"krate":0,"index":7218},{"krate":0,"index":7217},{"krate":0,"index":7214},{"krate":0,"index":7215},{"krate":0,"index":7211},{"krate":0,"index":7212},{"krate":0,"index":7209},{"krate":0,"index":7220},{"krate":0,"index":7239},{"krate":0,"index":7238},{"krate":0,"index":7236},{"krate":0,"index":7233},{"krate":0,"index":7234},{"krate":0,"index":7230},{"krate":0,"index":7227},{"krate":0,"index":7228},{"krate":0,"index":7241},{"krate":0,"index":7263},{"krate":0,"index":7259},{"krate":0,"index":7260},{"krate":0,"index":7256},{"krate":0,"index":7257},{"krate":0,"index":7254},{"krate":0,"index":7248},{"krate":0,"index":7246},{"krate":0,"index":7243},{"krate":0,"index":7264},{"krate":0,"index":7272},{"krate":0,"index":7274},{"krate":0,"index":7276},{"krate":0,"index":7278},{"krate":0,"index":7280},{"krate":0,"index":7288},{"krate":0,"index":7291},{"krate":0,"index":7293},{"krate":0,"index":7296},{"krate":0,"index":7298},{"krate":0,"index":7301},{"krate":0,"index":7303},{"krate":0,"index":7306},{"krate":0,"index":7308},{"krate":0,"index":7311},{"krate":0,"index":7314},{"krate":0,"index":7336},{"krate":0,"index":7358},{"krate":0,"index":7354},{"krate":0,"index":7355},{"krate":0,"index":7351},{"krate":0,"index":7352},{"krate":0,"index":7349},{"krate":0,"index":7343},{"krate":0,"index":7341},{"krate":0,"index":7338},{"krate":0,"index":7359},{"krate":0,"index":7371},{"krate":0,"index":7373},{"krate":0,"index":7375},{"krate":0,"index":7377},{"krate":0,"index":7379},{"krate":0,"index":7393},{"krate":0,"index":7396},{"krate":0,"index":7398},{"krate":0,"index":7401},{"krate":0,"index":7403},{"krate":0,"index":7406},{"krate":0,"index":7408},{"krate":0,"index":7411},{"krate":0,"index":7413},{"krate":0,"index":7416},{"krate":0,"index":7419},{"krate":0,"index":7470},{"krate":0,"index":7474},{"krate":0,"index":7473},{"krate":0,"index":7457},{"krate":0,"index":7461},{"krate":0,"index":7463},{"krate":0,"index":7464},{"krate":0,"index":7466},{"krate":0,"index":7468},{"krate":0,"index":7476},{"krate":0,"index":7480},{"krate":0,"index":7479},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":7482},{"krate":0,"index":7486},{"krate":0,"index":7485},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":7488},{"krate":0,"index":1224},{"krate":0,"index":1230},{"krate":0,"index":7489},{"krate":0,"index":7495},{"krate":0,"index":1233},{"krate":0,"index":7498},{"krate":0,"index":7501},{"krate":0,"index":1236},{"krate":0,"index":1240},{"krate":0,"index":1260},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1274},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":7504},{"krate":0,"index":7535},{"krate":0,"index":7534},{"krate":0,"index":7532},{"krate":0,"index":7529},{"krate":0,"index":7530},{"krate":0,"index":7526},{"krate":0,"index":7523},{"krate":0,"index":7524},{"krate":0,"index":1297},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":7537},{"krate":0,"index":7556},{"krate":0,"index":7555},{"krate":0,"index":7553},{"krate":0,"index":7550},{"krate":0,"index":7551},{"krate":0,"index":7547},{"krate":0,"index":7544},{"krate":0,"index":7545},{"krate":0,"index":1311}],"decl_id":null,"docs":" Socket interface functions","sig":null,"attributes":[{"value":"/ Socket interface functions","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":343588,"byte_end":343618,"line_start":1,"line_end":1,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":343619,"byte_end":343622,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://man7.org/linux/man-pages/man7/socket.7.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":343623,"byte_end":343696,"line_start":3,"line_end":3,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6611},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387667,"byte_end":387671,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Unix","qualname":"::sys::socket::addr::AddressFamily::Unix","value":"AddressFamily::Unix","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" Local communication (see [`unix(7)`](http://man7.org/linux/man-pages/man7/unix.7.html))\n","sig":null,"attributes":[{"value":"/ Local communication (see [`unix(7)`](http://man7.org/linux/man-pages/man7/unix.7.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387571,"byte_end":387662,"line_start":30,"line_end":30,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6614},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387789,"byte_end":387793,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Inet","qualname":"::sys::socket::addr::AddressFamily::Inet","value":"AddressFamily::Inet","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" IPv4 Internet protocols (see [`ip(7)`](http://man7.org/linux/man-pages/man7/ip.7.html))\n","sig":null,"attributes":[{"value":"/ IPv4 Internet protocols (see [`ip(7)`](http://man7.org/linux/man-pages/man7/ip.7.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387693,"byte_end":387784,"line_start":32,"line_end":32,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6617},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387915,"byte_end":387920,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Inet6","qualname":"::sys::socket::addr::AddressFamily::Inet6","value":"AddressFamily::Inet6","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" IPv6 Internet protocols (see [`ipv6(7)`](http://man7.org/linux/man-pages/man7/ipv6.7.html))\n","sig":null,"attributes":[{"value":"/ IPv6 Internet protocols (see [`ipv6(7)`](http://man7.org/linux/man-pages/man7/ipv6.7.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387815,"byte_end":387910,"line_start":34,"line_end":34,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6620},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388114,"byte_end":388121,"line_start":38,"line_end":38,"column_start":5,"column_end":12},"name":"Netlink","qualname":"::sys::socket::addr::AddressFamily::Netlink","value":"AddressFamily::Netlink","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" Kernel user interface device (see [`netlink(7)`](http://man7.org/linux/man-pages/man7/netlink.7.html))\n","sig":null,"attributes":[{"value":"/ Kernel user interface device (see [`netlink(7)`](http://man7.org/linux/man-pages/man7/netlink.7.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387943,"byte_end":388049,"line_start":36,"line_end":36,"column_start":5,"column_end":111}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388054,"byte_end":388109,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6623},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388313,"byte_end":388319,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Packet","qualname":"::sys::socket::addr::AddressFamily::Packet","value":"AddressFamily::Packet","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" Low level packet interface (see [`packet(7)`](http://man7.org/linux/man-pages/man7/packet.7.html))\n","sig":null,"attributes":[{"value":"/ Low level packet interface (see [`packet(7)`](http://man7.org/linux/man-pages/man7/packet.7.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388146,"byte_end":388248,"line_start":39,"line_end":39,"column_start":5,"column_end":107}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388253,"byte_end":388308,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6626},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388566,"byte_end":388570,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"Ax25","qualname":"::sys::socket::addr::AddressFamily::Ax25","value":"AddressFamily::Ax25","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" Amateur radio AX.25 protocol\n","sig":null,"attributes":[{"value":"/ Amateur radio AX.25 protocol","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388469,"byte_end":388501,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388506,"byte_end":388561,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6629},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388623,"byte_end":388626,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"Ipx","qualname":"::sys::socket::addr::AddressFamily::Ipx","value":"AddressFamily::Ipx","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" IPX - Novell protocols\n","sig":null,"attributes":[{"value":"/ IPX - Novell protocols","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388592,"byte_end":388618,"line_start":48,"line_end":48,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6632},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388665,"byte_end":388674,"line_start":51,"line_end":51,"column_start":5,"column_end":14},"name":"AppleTalk","qualname":"::sys::socket::addr::AddressFamily::AppleTalk","value":"AddressFamily::AppleTalk","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" AppleTalk\n","sig":null,"attributes":[{"value":"/ AppleTalk","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388647,"byte_end":388660,"line_start":50,"line_end":50,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6635},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388761,"byte_end":388767,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"NetRom","qualname":"::sys::socket::addr::AddressFamily::NetRom","value":"AddressFamily::NetRom","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388701,"byte_end":388756,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6638},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388851,"byte_end":388857,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Bridge","qualname":"::sys::socket::addr::AddressFamily::Bridge","value":"AddressFamily::Bridge","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388791,"byte_end":388846,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6641},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388972,"byte_end":388978,"line_start":58,"line_end":58,"column_start":5,"column_end":11},"name":"AtmPvc","qualname":"::sys::socket::addr::AddressFamily::AtmPvc","value":"AddressFamily::AtmPvc","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" Access to raw ATM PVCs\n","sig":null,"attributes":[{"value":"/ Access to raw ATM PVCs","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388881,"byte_end":388907,"line_start":56,"line_end":56,"column_start":5,"column_end":31}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":388912,"byte_end":388967,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6644},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389167,"byte_end":389170,"line_start":61,"line_end":61,"column_start":5,"column_end":8},"name":"X25","qualname":"::sys::socket::addr::AddressFamily::X25","value":"AddressFamily::X25","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" ITU-T X.25 / ISO-8208 protocol (see [`x25(7)`](http://man7.org/linux/man-pages/man7/x25.7.html))\n","sig":null,"attributes":[{"value":"/ ITU-T X.25 / ISO-8208 protocol (see [`x25(7)`](http://man7.org/linux/man-pages/man7/x25.7.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389002,"byte_end":389102,"line_start":59,"line_end":59,"column_start":5,"column_end":105}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389107,"byte_end":389162,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6647},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389251,"byte_end":389255,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Rose","qualname":"::sys::socket::addr::AddressFamily::Rose","value":"AddressFamily::Rose","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389191,"byte_end":389246,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6650},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389277,"byte_end":389283,"line_start":64,"line_end":64,"column_start":5,"column_end":11},"name":"Decnet","qualname":"::sys::socket::addr::AddressFamily::Decnet","value":"AddressFamily::Decnet","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6653},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389367,"byte_end":389374,"line_start":66,"line_end":66,"column_start":5,"column_end":12},"name":"NetBeui","qualname":"::sys::socket::addr::AddressFamily::NetBeui","value":"AddressFamily::NetBeui","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389307,"byte_end":389362,"line_start":65,"line_end":65,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6656},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389459,"byte_end":389467,"line_start":68,"line_end":68,"column_start":5,"column_end":13},"name":"Security","qualname":"::sys::socket::addr::AddressFamily::Security","value":"AddressFamily::Security","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389399,"byte_end":389454,"line_start":67,"line_end":67,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6659},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389553,"byte_end":389556,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"name":"Key","qualname":"::sys::socket::addr::AddressFamily::Key","value":"AddressFamily::Key","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389493,"byte_end":389548,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6662},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389637,"byte_end":389640,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"Ash","qualname":"::sys::socket::addr::AddressFamily::Ash","value":"AddressFamily::Ash","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389577,"byte_end":389632,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6665},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389721,"byte_end":389727,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Econet","qualname":"::sys::socket::addr::AddressFamily::Econet","value":"AddressFamily::Econet","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389661,"byte_end":389716,"line_start":73,"line_end":73,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6668},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389811,"byte_end":389817,"line_start":76,"line_end":76,"column_start":5,"column_end":11},"name":"AtmSvc","qualname":"::sys::socket::addr::AddressFamily::AtmSvc","value":"AddressFamily::AtmSvc","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389751,"byte_end":389806,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6671},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389901,"byte_end":389904,"line_start":78,"line_end":78,"column_start":5,"column_end":8},"name":"Rds","qualname":"::sys::socket::addr::AddressFamily::Rds","value":"AddressFamily::Rds","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389841,"byte_end":389896,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6674},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389925,"byte_end":389928,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"Sna","qualname":"::sys::socket::addr::AddressFamily::Sna","value":"AddressFamily::Sna","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6677},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390009,"byte_end":390013,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"Irda","qualname":"::sys::socket::addr::AddressFamily::Irda","value":"AddressFamily::Irda","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":389949,"byte_end":390004,"line_start":80,"line_end":80,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6680},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390095,"byte_end":390100,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Pppox","qualname":"::sys::socket::addr::AddressFamily::Pppox","value":"AddressFamily::Pppox","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390035,"byte_end":390090,"line_start":82,"line_end":82,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6683},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390183,"byte_end":390190,"line_start":85,"line_end":85,"column_start":5,"column_end":12},"name":"Wanpipe","qualname":"::sys::socket::addr::AddressFamily::Wanpipe","value":"AddressFamily::Wanpipe","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390123,"byte_end":390178,"line_start":84,"line_end":84,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6686},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390275,"byte_end":390278,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Llc","qualname":"::sys::socket::addr::AddressFamily::Llc","value":"AddressFamily::Llc","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390215,"byte_end":390270,"line_start":86,"line_end":86,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6689},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390331,"byte_end":390333,"line_start":89,"line_end":89,"column_start":5,"column_end":7},"name":"Ib","qualname":"::sys::socket::addr::AddressFamily::Ib","value":"AddressFamily::Ib","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390299,"byte_end":390326,"line_start":88,"line_end":88,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6692},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390385,"byte_end":390389,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Mpls","qualname":"::sys::socket::addr::AddressFamily::Mpls","value":"AddressFamily::Mpls","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390353,"byte_end":390380,"line_start":90,"line_end":90,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6695},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390471,"byte_end":390474,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"Can","qualname":"::sys::socket::addr::AddressFamily::Can","value":"AddressFamily::Can","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390411,"byte_end":390466,"line_start":92,"line_end":92,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6698},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390555,"byte_end":390559,"line_start":95,"line_end":95,"column_start":5,"column_end":9},"name":"Tipc","qualname":"::sys::socket::addr::AddressFamily::Tipc","value":"AddressFamily::Tipc","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390495,"byte_end":390550,"line_start":94,"line_end":94,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6701},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390642,"byte_end":390651,"line_start":97,"line_end":97,"column_start":5,"column_end":14},"name":"Bluetooth","qualname":"::sys::socket::addr::AddressFamily::Bluetooth","value":"AddressFamily::Bluetooth","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(any(target_os = \"ios\", target_os = \"macos\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390581,"byte_end":390637,"line_start":96,"line_end":96,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6704},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390738,"byte_end":390742,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Iucv","qualname":"::sys::socket::addr::AddressFamily::Iucv","value":"AddressFamily::Iucv","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390678,"byte_end":390733,"line_start":98,"line_end":98,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6707},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390824,"byte_end":390829,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"RxRpc","qualname":"::sys::socket::addr::AddressFamily::RxRpc","value":"AddressFamily::RxRpc","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390764,"byte_end":390819,"line_start":100,"line_end":100,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6710},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390852,"byte_end":390856,"line_start":102,"line_end":102,"column_start":5,"column_end":9},"name":"Isdn","qualname":"::sys::socket::addr::AddressFamily::Isdn","value":"AddressFamily::Isdn","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6713},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390938,"byte_end":390944,"line_start":104,"line_end":104,"column_start":5,"column_end":11},"name":"Phonet","qualname":"::sys::socket::addr::AddressFamily::Phonet","value":"AddressFamily::Phonet","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390878,"byte_end":390933,"line_start":103,"line_end":103,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6716},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":391028,"byte_end":391038,"line_start":106,"line_end":106,"column_start":5,"column_end":15},"name":"Ieee802154","qualname":"::sys::socket::addr::AddressFamily::Ieee802154","value":"AddressFamily::Ieee802154","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":390968,"byte_end":391023,"line_start":105,"line_end":105,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6719},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":391126,"byte_end":391130,"line_start":108,"line_end":108,"column_start":5,"column_end":9},"name":"Caif","qualname":"::sys::socket::addr::AddressFamily::Caif","value":"AddressFamily::Caif","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":391066,"byte_end":391121,"line_start":107,"line_end":107,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6722},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":391251,"byte_end":391254,"line_start":111,"line_end":111,"column_start":5,"column_end":8},"name":"Alg","qualname":"::sys::socket::addr::AddressFamily::Alg","value":"AddressFamily::Alg","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" Interface to kernel crypto API\n","sig":null,"attributes":[{"value":"/ Interface to kernel crypto API","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":391152,"byte_end":391186,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":391191,"byte_end":391246,"line_start":110,"line_end":110,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6725},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":391307,"byte_end":391310,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"Nfc","qualname":"::sys::socket::addr::AddressFamily::Nfc","value":"AddressFamily::Nfc","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":391275,"byte_end":391302,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6728},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":391363,"byte_end":391368,"line_start":115,"line_end":115,"column_start":5,"column_end":10},"name":"Vsock","qualname":"::sys::socket::addr::AddressFamily::Vsock","value":"AddressFamily::Vsock","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":391331,"byte_end":391358,"line_start":114,"line_end":114,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6731},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":394929,"byte_end":394935,"line_start":214,"line_end":214,"column_start":5,"column_end":11},"name":"Unspec","qualname":"::sys::socket::addr::AddressFamily::Unspec","value":"AddressFamily::Unspec","parent":{"krate":0,"index":6610},"children":[],"decl_id":null,"docs":" Unspecified address family, (see [`getaddrinfo(3)`](http://man7.org/linux/man-pages/man3/getaddrinfo.3.html))\n","sig":null,"attributes":[{"value":"/ Unspecified address family, (see [`getaddrinfo(3)`](http://man7.org/linux/man-pages/man3/getaddrinfo.3.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":394751,"byte_end":394864,"line_start":212,"line_end":212,"column_start":5,"column_end":118}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":394869,"byte_end":394924,"line_start":213,"line_end":213,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":6610},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387551,"byte_end":387564,"line_start":29,"line_end":29,"column_start":10,"column_end":23},"name":"AddressFamily","qualname":"::sys::socket::addr::AddressFamily","value":"pub enum AddressFamily {\n\n    /// Local communication (see [`unix(7)`](http://man7.org/linux/man-pages/man7/unix.7.html))\n    Unix = ,\n\n    /// IPv4 Internet protocols (see [`ip(7)`](http://man7.org/linux/man-pages/man7/ip.7.html))\n    Inet = ,\n\n    /// IPv6 Internet protocols (see [`ipv6(7)`](http://man7.org/linux/man-pages/man7/ipv6.7.html))\n    Inet6 = ,\n\n    /// Kernel user interface device (see [`netlink(7)`](http://man7.org/linux/man-pages/man7/netlink.7.html))\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Netlink = ,\n\n    /// Low level packet interface (see [`packet(7)`](http://man7.org/linux/man-pages/man7/packet.7.html))\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Packet = ,\n\n    /// Amateur radio AX.25 protocol\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Ax25 = ,\n\n    /// IPX - Novell protocols\n    Ipx = ,\n\n    /// AppleTalk\n    AppleTalk = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    NetRom = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Bridge = ,\n\n    /// Access to raw ATM PVCs\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    AtmPvc = ,\n\n    /// ITU-T X.25 / ISO-8208 protocol (see [`x25(7)`](http://man7.org/linux/man-pages/man7/x25.7.html))\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    X25 = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Rose = ,\n    Decnet = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    NetBeui = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Security = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Key = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Ash = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Econet = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    AtmSvc = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Rds = ,\n    Sna = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Irda = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Pppox = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Wanpipe = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Llc = ,\n\n    #[cfg(target_os = \"linux\")]\n    Ib = ,\n\n    #[cfg(target_os = \"linux\")]\n    Mpls = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Can = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Tipc = ,\n\n    #[cfg(not(any(target_os = \"ios\", target_os = \"macos\")))]\n    Bluetooth = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Iucv = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    RxRpc = ,\n    Isdn = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Phonet = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Ieee802154 = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Caif = ,\n\n    /// Interface to kernel crypto API\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Alg = ,\n\n    #[cfg(target_os = \"linux\")]\n    Nfc = ,\n\n    #[cfg(target_os = \"linux\")]\n    Vsock = ,\n\n    /// Unspecified address family, (see [`getaddrinfo(3)`](http://man7.org/linux/man-pages/man3/getaddrinfo.3.html))\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Unspec = ,\n}","parent":null,"children":[{"krate":0,"index":6611},{"krate":0,"index":6614},{"krate":0,"index":6617},{"krate":0,"index":6620},{"krate":0,"index":6623},{"krate":0,"index":6626},{"krate":0,"index":6629},{"krate":0,"index":6632},{"krate":0,"index":6635},{"krate":0,"index":6638},{"krate":0,"index":6641},{"krate":0,"index":6644},{"krate":0,"index":6647},{"krate":0,"index":6650},{"krate":0,"index":6653},{"krate":0,"index":6656},{"krate":0,"index":6659},{"krate":0,"index":6662},{"krate":0,"index":6665},{"krate":0,"index":6668},{"krate":0,"index":6671},{"krate":0,"index":6674},{"krate":0,"index":6677},{"krate":0,"index":6680},{"krate":0,"index":6683},{"krate":0,"index":6686},{"krate":0,"index":6689},{"krate":0,"index":6692},{"krate":0,"index":6695},{"krate":0,"index":6698},{"krate":0,"index":6701},{"krate":0,"index":6704},{"krate":0,"index":6707},{"krate":0,"index":6710},{"krate":0,"index":6713},{"krate":0,"index":6716},{"krate":0,"index":6719},{"krate":0,"index":6722},{"krate":0,"index":6725},{"krate":0,"index":6728},{"krate":0,"index":6731}],"decl_id":null,"docs":" These constants specify the protocol family to be used\n in [`socket`](fn.socket.html) and [`socketpair`](fn.socketpair.html)\n","sig":null,"attributes":[{"value":"/ These constants specify the protocol family to be used","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387346,"byte_end":387404,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ in [`socket`](fn.socket.html) and [`socketpair`](fn.socketpair.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387405,"byte_end":387477,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":387478,"byte_end":387490,"line_start":27,"line_end":27,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":395317,"byte_end":395325,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<AddressFamily>::from_i32","value":"pub fn from_i32(i32) -> Option<AddressFamily>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AddressFamily` from an integer value retrieved from `libc`, usually from\n the `sa_family` field of a `sockaddr`.","sig":null,"attributes":[{"value":"/ Create a new `AddressFamily` from an integer value retrieved from `libc`, usually from","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":394983,"byte_end":395073,"line_start":218,"line_end":218,"column_start":5,"column_end":95}},{"value":"/ the `sa_family` field of a `sockaddr`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":395078,"byte_end":395120,"line_start":219,"line_end":219,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":395125,"byte_end":395128,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Currently only supports these address families: Unix, Inet (v4 & v6), Netlink, Link/Packet","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":395133,"byte_end":395227,"line_start":221,"line_end":221,"column_start":5,"column_end":99}},{"value":"/ and System. Returns None for unsupported or unknown address families.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":395232,"byte_end":395305,"line_start":222,"line_end":222,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6749},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":396347,"byte_end":396349,"line_start":248,"line_end":248,"column_start":5,"column_end":7},"name":"V4","qualname":"::sys::socket::addr::InetAddr::V4","value":"InetAddr::V4(libc::sockaddr_in)","parent":{"krate":0,"index":6748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6752},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":396374,"byte_end":396376,"line_start":249,"line_end":249,"column_start":5,"column_end":7},"name":"V6","qualname":"::sys::socket::addr::InetAddr::V6","value":"InetAddr::V6(libc::sockaddr_in6)","parent":{"krate":0,"index":6748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6748},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":396332,"byte_end":396340,"line_start":247,"line_end":247,"column_start":10,"column_end":18},"name":"InetAddr","qualname":"::sys::socket::addr::InetAddr","value":"pub enum InetAddr { V4(libc::sockaddr_in), V6(libc::sockaddr_in6), }","parent":null,"children":[{"krate":0,"index":6749},{"krate":0,"index":6752}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":396428,"byte_end":396436,"line_start":253,"line_end":253,"column_start":12,"column_end":20},"name":"from_std","qualname":"<InetAddr>::from_std","value":"pub fn from_std(&net::SocketAddr) -> InetAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":397436,"byte_end":397439,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"new","qualname":"<InetAddr>::new","value":"pub fn new(IpAddr, u16) -> InetAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":398221,"byte_end":398223,"line_start":297,"line_end":297,"column_start":12,"column_end":14},"name":"ip","qualname":"<InetAddr>::ip","value":"pub fn ip(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Gets the IP address associated with this socket address.\n","sig":null,"attributes":[{"value":"/ Gets the IP address associated with this socket address.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":398149,"byte_end":398209,"line_start":296,"line_end":296,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":398501,"byte_end":398505,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"name":"port","qualname":"<InetAddr>::port","value":"pub fn port(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Gets the port number associated with this socket address\n","sig":null,"attributes":[{"value":"/ Gets the port number associated with this socket address","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":398429,"byte_end":398489,"line_start":304,"line_end":304,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":398699,"byte_end":398705,"line_start":312,"line_end":312,"column_start":12,"column_end":18},"name":"to_std","qualname":"<InetAddr>::to_std","value":"pub fn to_std(&Self) -> net::SocketAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":399229,"byte_end":399235,"line_start":327,"line_end":327,"column_start":12,"column_end":18},"name":"to_str","qualname":"<InetAddr>::to_str","value":"pub fn to_str(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6757},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401040,"byte_end":401042,"line_start":400,"line_end":400,"column_start":5,"column_end":7},"name":"V4","qualname":"::sys::socket::addr::IpAddr::V4","value":"IpAddr::V4(Ipv4Addr)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6760},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401058,"byte_end":401060,"line_start":401,"line_end":401,"column_start":5,"column_end":7},"name":"V6","qualname":"::sys::socket::addr::IpAddr::V6","value":"IpAddr::V6(Ipv6Addr)","parent":{"krate":0,"index":6756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6756},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401027,"byte_end":401033,"line_start":399,"line_end":399,"column_start":10,"column_end":16},"name":"IpAddr","qualname":"::sys::socket::addr::IpAddr","value":"pub enum IpAddr { V4(Ipv4Addr), V6(Ipv6Addr), }","parent":null,"children":[{"krate":0,"index":6757},{"krate":0,"index":6760}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401224,"byte_end":401230,"line_start":408,"line_end":408,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<IpAddr>::new_v4","value":"pub fn new_v4(u8, u8, u8, u8) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Create a new IpAddr that contains an IPv4 address.","sig":null,"attributes":[{"value":"/ Create a new IpAddr that contains an IPv4 address.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401093,"byte_end":401147,"line_start":405,"line_end":405,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401152,"byte_end":401155,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The result will represent the IP address a.b.c.d","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401160,"byte_end":401212,"line_start":407,"line_end":407,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401463,"byte_end":401469,"line_start":415,"line_end":415,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<IpAddr>::new_v6","value":"pub fn new_v6(u16, u16, u16, u16, u16, u16, u16, u16) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Create a new IpAddr that contains an IPv6 address.","sig":null,"attributes":[{"value":"/ Create a new IpAddr that contains an IPv6 address.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401328,"byte_end":401382,"line_start":412,"line_end":412,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401387,"byte_end":401390,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ The result will represent the IP address a:b:c:d:e:f","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401395,"byte_end":401451,"line_start":414,"line_end":414,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6766},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402495,"byte_end":402503,"line_start":457,"line_end":457,"column_start":12,"column_end":20},"name":"Ipv4Addr","qualname":"::sys::socket::addr::Ipv4Addr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6768},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402504,"byte_end":402521,"line_start":457,"line_end":457,"column_start":21,"column_end":38},"name":"0","qualname":"::sys::socket::addr::Ipv4Addr::0","value":"libc::in_addr","parent":{"krate":0,"index":6766},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402552,"byte_end":402555,"line_start":460,"line_end":460,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4Addr>::new","value":"pub fn new(u8, u8, u8, u8) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402828,"byte_end":402836,"line_start":469,"line_end":469,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Ipv4Addr>::from_std","value":"pub fn from_std(&net::Ipv4Addr) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402981,"byte_end":402984,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"any","qualname":"<Ipv4Addr>::any","value":"pub fn any() -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403080,"byte_end":403086,"line_start":478,"line_end":478,"column_start":12,"column_end":18},"name":"octets","qualname":"<Ipv4Addr>::octets","value":"pub fn octets(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403253,"byte_end":403259,"line_start":483,"line_end":483,"column_start":12,"column_end":18},"name":"to_std","qualname":"<Ipv4Addr>::to_std","value":"pub fn to_std(&Self) -> net::Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6770},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":404195,"byte_end":404203,"line_start":531,"line_end":531,"column_start":12,"column_end":20},"name":"Ipv6Addr","qualname":"::sys::socket::addr::Ipv6Addr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6772},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":404204,"byte_end":404222,"line_start":531,"line_end":531,"column_start":21,"column_end":39},"name":"0","qualname":"::sys::socket::addr::Ipv6Addr::0","value":"libc::in6_addr","parent":{"krate":0,"index":6770},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":404715,"byte_end":404718,"line_start":550,"line_end":550,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6Addr>::new","value":"pub fn new(u16, u16, u16, u16, u16, u16, u16, u16) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":404985,"byte_end":404993,"line_start":556,"line_end":556,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Ipv6Addr>::from_std","value":"pub fn from_std(&net::Ipv6Addr) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405216,"byte_end":405224,"line_start":562,"line_end":562,"column_start":12,"column_end":20},"name":"segments","qualname":"<Ipv6Addr>::segments","value":"pub fn segments(&Self) -> [u16; ]","parent":null,"children":[],"decl_id":null,"docs":" Return the eight 16-bit segments that make up this address\n","sig":null,"attributes":[{"value":"/ Return the eight 16-bit segments that make up this address","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405142,"byte_end":405204,"line_start":561,"line_end":561,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405331,"byte_end":405337,"line_start":566,"line_end":566,"column_start":12,"column_end":18},"name":"to_std","qualname":"<Ipv6Addr>::to_std","value":"pub fn to_std(&Self) -> net::Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6776},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":406269,"byte_end":406277,"line_start":599,"line_end":599,"column_start":12,"column_end":20},"name":"UnixAddr","qualname":"::sys::socket::addr::UnixAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around `sockaddr_un`.","sig":null,"attributes":[{"value":"/ A wrapper around `sockaddr_un`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405787,"byte_end":405822,"line_start":590,"line_end":590,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405823,"byte_end":405826,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/ This also tracks the length of `sun_path` address (excluding","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405827,"byte_end":405891,"line_start":592,"line_end":592,"column_start":1,"column_end":65}},{"value":"/ a terminating null), because it may not be null-terminated.  For example,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405892,"byte_end":405969,"line_start":593,"line_end":593,"column_start":1,"column_end":78}},{"value":"/ unconnected and Linux abstract sockets are never null-terminated, and POSIX","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405970,"byte_end":406049,"line_start":594,"line_end":594,"column_start":1,"column_end":80}},{"value":"/ does not require that `sun_len` include the terminating null even for normal","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":406050,"byte_end":406130,"line_start":595,"line_end":595,"column_start":1,"column_end":81}},{"value":"/ sockets.  Note that the actual sockaddr length is greater by","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":406131,"byte_end":406195,"line_start":596,"line_end":596,"column_start":1,"column_end":65}},{"value":"/ `offset_of!(libc::sockaddr_un, sun_path)`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":406196,"byte_end":406241,"line_start":597,"line_end":597,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":6778},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":406278,"byte_end":406299,"line_start":599,"line_end":599,"column_start":21,"column_end":42},"name":"0","qualname":"::sys::socket::addr::UnixAddr::0","value":"libc::sockaddr_un","parent":{"krate":0,"index":6776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6779},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":406301,"byte_end":406310,"line_start":599,"line_end":599,"column_start":44,"column_end":53},"name":"1","qualname":"::sys::socket::addr::UnixAddr::1","value":"usize","parent":{"krate":0,"index":6776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":406406,"byte_end":406409,"line_start":603,"line_end":603,"column_start":12,"column_end":15},"name":"new","qualname":"<UnixAddr>::new","value":"pub fn new<P: ?Sized + NixPath>(&P) -> Result<UnixAddr>","parent":null,"children":[],"decl_id":null,"docs":" Create a new sockaddr_un representing a filesystem path.\n","sig":null,"attributes":[{"value":"/ Create a new sockaddr_un representing a filesystem path.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":406334,"byte_end":406394,"line_start":602,"line_end":602,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":407642,"byte_end":407654,"line_start":633,"line_end":633,"column_start":12,"column_end":24},"name":"new_abstract","qualname":"<UnixAddr>::new_abstract","value":"pub fn new_abstract(&[u8]) -> Result<UnixAddr>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `sockaddr_un` representing an address in the \"abstract namespace\".","sig":null,"attributes":[{"value":"/ Create a new `sockaddr_un` representing an address in the \"abstract namespace\".","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":407155,"byte_end":407238,"line_start":626,"line_end":626,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":407243,"byte_end":407246,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ The leading null byte for the abstract namespace is automatically added;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":407251,"byte_end":407327,"line_start":628,"line_end":628,"column_start":5,"column_end":81}},{"value":"/ thus the input `path` is expected to be the bare name, not null-prefixed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":407332,"byte_end":407409,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/ This is a Linux-specific extension, primarily used to allow chrooted","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":407414,"byte_end":407486,"line_start":630,"line_end":630,"column_start":5,"column_end":77}},{"value":"/ processes to communicate with processes having a different filesystem view.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":407491,"byte_end":407570,"line_start":631,"line_end":631,"column_start":5,"column_end":84}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":407575,"byte_end":407630,"line_start":632,"line_end":632,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":408578,"byte_end":408582,"line_start":659,"line_end":659,"column_start":12,"column_end":16},"name":"path","qualname":"<UnixAddr>::path","value":"pub fn path(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" If this address represents a filesystem path, return that path.\n","sig":null,"attributes":[{"value":"/ If this address represents a filesystem path, return that path.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":408499,"byte_end":408566,"line_start":658,"line_end":658,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409576,"byte_end":409587,"line_start":680,"line_end":680,"column_start":12,"column_end":23},"name":"as_abstract","qualname":"<UnixAddr>::as_abstract","value":"pub fn as_abstract(&Self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" If this address represents an abstract socket, return its name.","sig":null,"attributes":[{"value":"/ If this address represents an abstract socket, return its name.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409274,"byte_end":409341,"line_start":675,"line_end":675,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409346,"byte_end":409349,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ For abstract sockets only the bare name is returned, without the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409354,"byte_end":409422,"line_start":677,"line_end":677,"column_start":5,"column_end":73}},{"value":"/ leading null byte. `None` is returned for unnamed or path-backed sockets.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409427,"byte_end":409504,"line_start":678,"line_end":678,"column_start":5,"column_end":82}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409509,"byte_end":409564,"line_start":679,"line_end":679,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6782},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410831,"byte_end":410835,"line_start":739,"line_end":739,"column_start":5,"column_end":9},"name":"Inet","qualname":"::sys::socket::addr::SockAddr::Inet","value":"SockAddr::Inet(InetAddr)","parent":{"krate":0,"index":6781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6785},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410851,"byte_end":410855,"line_start":740,"line_end":740,"column_start":5,"column_end":9},"name":"Unix","qualname":"::sys::socket::addr::SockAddr::Unix","value":"SockAddr::Unix(UnixAddr)","parent":{"krate":0,"index":6781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6788},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410931,"byte_end":410938,"line_start":742,"line_end":742,"column_start":5,"column_end":12},"name":"Netlink","qualname":"::sys::socket::addr::SockAddr::Netlink","value":"SockAddr::Netlink(NetlinkAddr)","parent":{"krate":0,"index":6781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410871,"byte_end":410926,"line_start":741,"line_end":741,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6791},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":411367,"byte_end":411371,"line_start":754,"line_end":754,"column_start":5,"column_end":9},"name":"Link","qualname":"::sys::socket::addr::SockAddr::Link","value":"SockAddr::Link(LinkAddr)","parent":{"krate":0,"index":6781},"children":[],"decl_id":null,"docs":" Datalink address (MAC)\n","sig":null,"attributes":[{"value":"/ Datalink address (MAC)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":411045,"byte_end":411071,"line_start":745,"line_end":745,"column_start":5,"column_end":31}},{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":411076,"byte_end":411362,"line_start":746,"line_end":753,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":6781},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410816,"byte_end":410824,"line_start":738,"line_end":738,"column_start":10,"column_end":18},"name":"SockAddr","qualname":"::sys::socket::addr::SockAddr","value":"pub enum SockAddr {\n    Inet(InetAddr),\n    Unix(UnixAddr),\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Netlink(NetlinkAddr),\n\n    /// Datalink address (MAC)\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"netbsd\", target_os = \"openbsd\"))]\n    Link(LinkAddr),\n}","parent":null,"children":[{"krate":0,"index":6782},{"krate":0,"index":6785},{"krate":0,"index":6788},{"krate":0,"index":6791}],"decl_id":null,"docs":" Represents a socket address\n","sig":null,"attributes":[{"value":"/ Represents a socket address","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410752,"byte_end":410783,"line_start":736,"line_end":736,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":411412,"byte_end":411420,"line_start":758,"line_end":758,"column_start":12,"column_end":20},"name":"new_inet","qualname":"<SockAddr>::new_inet","value":"pub fn new_inet(InetAddr) -> SockAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":411498,"byte_end":411506,"line_start":762,"line_end":762,"column_start":12,"column_end":20},"name":"new_unix","qualname":"<SockAddr>::new_unix","value":"pub fn new_unix<P: ?Sized + NixPath>(&P) -> Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":411687,"byte_end":411698,"line_start":767,"line_end":767,"column_start":12,"column_end":23},"name":"new_netlink","qualname":"<SockAddr>::new_netlink","value":"pub fn new_netlink(u32, u32) -> SockAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":411620,"byte_end":411675,"line_start":766,"line_end":766,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":412048,"byte_end":412054,"line_start":776,"line_end":776,"column_start":12,"column_end":18},"name":"family","qualname":"<SockAddr>::family","value":"pub fn family(&Self) -> AddressFamily","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":413027,"byte_end":413033,"line_start":797,"line_end":797,"column_start":12,"column_end":18},"name":"to_str","qualname":"<SockAddr>::to_str","value":"pub fn to_str(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":413315,"byte_end":413333,"line_start":805,"line_end":805,"column_start":19,"column_end":37},"name":"from_libc_sockaddr","qualname":"<SockAddr>::from_libc_sockaddr","value":"pub unsafe fn from_libc_sockaddr(*const libc::sockaddr) -> Option<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SockAddr` struct from libc's sockaddr.","sig":null,"attributes":[{"value":"/ Creates a `SockAddr` struct from libc's sockaddr.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":413092,"byte_end":413145,"line_start":801,"line_end":801,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":413150,"byte_end":413153,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Supports only the following address families: Unix, Inet (v4 & v6), Netlink and System.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":413158,"byte_end":413249,"line_start":803,"line_end":803,"column_start":5,"column_end":96}},{"value":"/ Returns None for unsupported families.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":413254,"byte_end":413296,"line_start":804,"line_end":804,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":415928,"byte_end":415939,"line_start":852,"line_end":852,"column_start":19,"column_end":30},"name":"as_ffi_pair","qualname":"<SockAddr>::as_ffi_pair","value":"pub unsafe fn as_ffi_pair(&Self) -> (&libc::sockaddr, libc::socklen_t)","parent":null,"children":[],"decl_id":null,"docs":" Conversion from nix's SockAddr type to the underlying libc sockaddr type.","sig":null,"attributes":[{"value":"/ Conversion from nix's SockAddr type to the underlying libc sockaddr type.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":415358,"byte_end":415435,"line_start":845,"line_end":845,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":415440,"byte_end":415443,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ This is useful for interfacing with other libc functions that don't yet have nix wrappers.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":415448,"byte_end":415542,"line_start":847,"line_end":847,"column_start":5,"column_end":99}},{"value":"/ Returns a reference to the underlying data type (as a sockaddr reference) along","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":415547,"byte_end":415630,"line_start":848,"line_end":848,"column_start":5,"column_end":88}},{"value":"/ with the size of the actual data type. sockaddr is commonly used as a proxy for","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":415635,"byte_end":415718,"line_start":849,"line_end":849,"column_start":5,"column_end":88}},{"value":"/ a superclass as C doesn't support inheritance, so many functions that take","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":415723,"byte_end":415801,"line_start":850,"line_end":850,"column_start":5,"column_end":83}},{"value":"/ a sockaddr * need to take the size of the underlying type as well and then internally cast it back.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":415806,"byte_end":415909,"line_start":851,"line_end":851,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":6797},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":420592,"byte_end":420603,"line_start":964,"line_end":964,"column_start":16,"column_end":27},"name":"NetlinkAddr","qualname":"::sys::socket::addr::netlink::NetlinkAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6799},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":420604,"byte_end":420619,"line_start":964,"line_end":964,"column_start":28,"column_end":43},"name":"0","qualname":"::sys::socket::addr::netlink::NetlinkAddr::0","value":"libc::sockaddr_nl","parent":{"krate":0,"index":6797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":421204,"byte_end":421207,"line_start":986,"line_end":986,"column_start":16,"column_end":19},"name":"new","qualname":"<NetlinkAddr>::new","value":"pub fn new(u32, u32) -> NetlinkAddr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":421507,"byte_end":421510,"line_start":995,"line_end":995,"column_start":16,"column_end":19},"name":"pid","qualname":"<NetlinkAddr>::pid","value":"pub fn pid(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":421579,"byte_end":421585,"line_start":999,"line_end":999,"column_start":16,"column_end":22},"name":"groups","qualname":"<NetlinkAddr>::groups","value":"pub fn groups(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6803},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425094,"byte_end":425102,"line_start":1123,"line_end":1123,"column_start":16,"column_end":24},"name":"LinkAddr","qualname":"::sys::socket::addr::datalink::LinkAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hardware Address\n","sig":null,"attributes":[{"value":"/ Hardware Address","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425031,"byte_end":425051,"line_start":1121,"line_end":1121,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":6805},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425103,"byte_end":425124,"line_start":1123,"line_end":1123,"column_start":25,"column_end":46},"name":"0","qualname":"::sys::socket::addr::datalink::LinkAddr::0","value":"libc::sockaddr_ll","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425192,"byte_end":425198,"line_start":1127,"line_end":1127,"column_start":16,"column_end":22},"name":"family","qualname":"<LinkAddr>::family","value":"pub fn family(&Self) -> AddressFamily","parent":null,"children":[],"decl_id":null,"docs":" Always AF_PACKET\n","sig":null,"attributes":[{"value":"/ Always AF_PACKET","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425156,"byte_end":425176,"line_start":1126,"line_end":1126,"column_start":9,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425388,"byte_end":425396,"line_start":1133,"line_end":1133,"column_start":16,"column_end":24},"name":"protocol","qualname":"<LinkAddr>::protocol","value":"pub fn protocol(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Physical-layer protocol\n","sig":null,"attributes":[{"value":"/ Physical-layer protocol","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425345,"byte_end":425372,"line_start":1132,"line_end":1132,"column_start":9,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425500,"byte_end":425507,"line_start":1138,"line_end":1138,"column_start":16,"column_end":23},"name":"ifindex","qualname":"<LinkAddr>::ifindex","value":"pub fn ifindex(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Interface number\n","sig":null,"attributes":[{"value":"/ Interface number","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425464,"byte_end":425484,"line_start":1137,"line_end":1137,"column_start":9,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425622,"byte_end":425628,"line_start":1143,"line_end":1143,"column_start":16,"column_end":22},"name":"hatype","qualname":"<LinkAddr>::hatype","value":"pub fn hatype(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ARP hardware type\n","sig":null,"attributes":[{"value":"/ ARP hardware type","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425585,"byte_end":425606,"line_start":1142,"line_end":1142,"column_start":9,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425725,"byte_end":425732,"line_start":1148,"line_end":1148,"column_start":16,"column_end":23},"name":"pkttype","qualname":"<LinkAddr>::pkttype","value":"pub fn pkttype(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Packet type\n","sig":null,"attributes":[{"value":"/ Packet type","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425694,"byte_end":425709,"line_start":1147,"line_end":1147,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425839,"byte_end":425844,"line_start":1153,"line_end":1153,"column_start":16,"column_end":21},"name":"halen","qualname":"<LinkAddr>::halen","value":"pub fn halen(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Length of MAC address\n","sig":null,"attributes":[{"value":"/ Length of MAC address","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425798,"byte_end":425823,"line_start":1152,"line_end":1152,"column_start":9,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425968,"byte_end":425972,"line_start":1158,"line_end":1158,"column_start":16,"column_end":20},"name":"addr","qualname":"<LinkAddr>::addr","value":"pub fn addr(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Physical-layer address (MAC)\n","sig":null,"attributes":[{"value":"/ Physical-layer address (MAC)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425920,"byte_end":425952,"line_start":1157,"line_end":1157,"column_start":9,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":1070},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sockopt","qualname":"::sys::socket::sockopt","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":6809},{"krate":0,"index":6815},{"krate":0,"index":6813},{"krate":0,"index":6811},{"krate":0,"index":6816},{"krate":0,"index":6819},{"krate":0,"index":6822},{"krate":0,"index":6828},{"krate":0,"index":6826},{"krate":0,"index":6824},{"krate":0,"index":6829},{"krate":0,"index":6832},{"krate":0,"index":6835},{"krate":0,"index":6841},{"krate":0,"index":6839},{"krate":0,"index":6837},{"krate":0,"index":6842},{"krate":0,"index":6845},{"krate":0,"index":6848},{"krate":0,"index":6854},{"krate":0,"index":6852},{"krate":0,"index":6850},{"krate":0,"index":6855},{"krate":0,"index":6858},{"krate":0,"index":6861},{"krate":0,"index":6867},{"krate":0,"index":6865},{"krate":0,"index":6863},{"krate":0,"index":6868},{"krate":0,"index":6871},{"krate":0,"index":6877},{"krate":0,"index":6875},{"krate":0,"index":6873},{"krate":0,"index":6878},{"krate":0,"index":6881},{"krate":0,"index":6887},{"krate":0,"index":6885},{"krate":0,"index":6883},{"krate":0,"index":6888},{"krate":0,"index":6891},{"krate":0,"index":6897},{"krate":0,"index":6895},{"krate":0,"index":6893},{"krate":0,"index":6898},{"krate":0,"index":6901},{"krate":0,"index":6907},{"krate":0,"index":6905},{"krate":0,"index":6903},{"krate":0,"index":6908},{"krate":0,"index":6911},{"krate":0,"index":6914},{"krate":0,"index":6920},{"krate":0,"index":6918},{"krate":0,"index":6916},{"krate":0,"index":6921},{"krate":0,"index":6924},{"krate":0,"index":6927},{"krate":0,"index":6933},{"krate":0,"index":6931},{"krate":0,"index":6929},{"krate":0,"index":6934},{"krate":0,"index":6937},{"krate":0,"index":6940},{"krate":0,"index":6946},{"krate":0,"index":6944},{"krate":0,"index":6942},{"krate":0,"index":6947},{"krate":0,"index":6950},{"krate":0,"index":6953},{"krate":0,"index":6959},{"krate":0,"index":6957},{"krate":0,"index":6955},{"krate":0,"index":6960},{"krate":0,"index":6963},{"krate":0,"index":6966},{"krate":0,"index":6972},{"krate":0,"index":6970},{"krate":0,"index":6968},{"krate":0,"index":6973},{"krate":0,"index":6976},{"krate":0,"index":6979},{"krate":0,"index":6985},{"krate":0,"index":6983},{"krate":0,"index":6981},{"krate":0,"index":6986},{"krate":0,"index":6989},{"krate":0,"index":6995},{"krate":0,"index":6993},{"krate":0,"index":6991},{"krate":0,"index":6996},{"krate":0,"index":6999},{"krate":0,"index":7002},{"krate":0,"index":7008},{"krate":0,"index":7006},{"krate":0,"index":7004},{"krate":0,"index":7009},{"krate":0,"index":7012},{"krate":0,"index":7018},{"krate":0,"index":7016},{"krate":0,"index":7014},{"krate":0,"index":7019},{"krate":0,"index":7022},{"krate":0,"index":7025},{"krate":0,"index":7031},{"krate":0,"index":7029},{"krate":0,"index":7027},{"krate":0,"index":7032},{"krate":0,"index":7035},{"krate":0,"index":7038},{"krate":0,"index":7044},{"krate":0,"index":7042},{"krate":0,"index":7040},{"krate":0,"index":7045},{"krate":0,"index":7048},{"krate":0,"index":7051},{"krate":0,"index":7057},{"krate":0,"index":7055},{"krate":0,"index":7053},{"krate":0,"index":7058},{"krate":0,"index":7061},{"krate":0,"index":7067},{"krate":0,"index":7065},{"krate":0,"index":7063},{"krate":0,"index":7068},{"krate":0,"index":7071},{"krate":0,"index":7077},{"krate":0,"index":7075},{"krate":0,"index":7073},{"krate":0,"index":7078},{"krate":0,"index":7081},{"krate":0,"index":7087},{"krate":0,"index":7085},{"krate":0,"index":7083},{"krate":0,"index":7088},{"krate":0,"index":7091},{"krate":0,"index":7097},{"krate":0,"index":7095},{"krate":0,"index":7093},{"krate":0,"index":7098},{"krate":0,"index":7101},{"krate":0,"index":7107},{"krate":0,"index":7105},{"krate":0,"index":7103},{"krate":0,"index":7108},{"krate":0,"index":7111},{"krate":0,"index":7114},{"krate":0,"index":7120},{"krate":0,"index":7118},{"krate":0,"index":7116},{"krate":0,"index":7121},{"krate":0,"index":7124},{"krate":0,"index":7127},{"krate":0,"index":7133},{"krate":0,"index":7131},{"krate":0,"index":7129},{"krate":0,"index":7134},{"krate":0,"index":7137},{"krate":0,"index":7140},{"krate":0,"index":7146},{"krate":0,"index":7144},{"krate":0,"index":7142},{"krate":0,"index":7147},{"krate":0,"index":7150},{"krate":0,"index":7153},{"krate":0,"index":7159},{"krate":0,"index":7157},{"krate":0,"index":7155},{"krate":0,"index":7160},{"krate":0,"index":7163},{"krate":0,"index":7167},{"krate":0,"index":7173},{"krate":0,"index":7171},{"krate":0,"index":7169},{"krate":0,"index":7174},{"krate":0,"index":7177},{"krate":0,"index":7180},{"krate":0,"index":7186},{"krate":0,"index":7184},{"krate":0,"index":7182},{"krate":0,"index":7187},{"krate":0,"index":7190},{"krate":0,"index":1092},{"krate":0,"index":1098},{"krate":0,"index":1104},{"krate":0,"index":1108},{"krate":0,"index":1114},{"krate":0,"index":1118},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1139},{"krate":0,"index":1142},{"krate":0,"index":1147},{"krate":0,"index":1149},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1169},{"krate":0,"index":1173},{"krate":0,"index":1179},{"krate":0,"index":1182}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6809},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":442491,"byte_end":442500,"line_start":212,"line_end":212,"column_start":21,"column_end":30},"name":"ReuseAddr","qualname":"::sys::socket::sockopt::ReuseAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6822},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":442567,"byte_end":442576,"line_start":213,"line_end":213,"column_start":21,"column_end":30},"name":"ReusePort","qualname":"::sys::socket::sockopt::ReusePort","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6835},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":442643,"byte_end":442653,"line_start":214,"line_end":214,"column_start":21,"column_end":31},"name":"TcpNoDelay","qualname":"::sys::socket::sockopt::TcpNoDelay","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6848},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":442720,"byte_end":442726,"line_start":215,"line_end":215,"column_start":21,"column_end":27},"name":"Linger","qualname":"::sys::socket::sockopt::Linger","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6861},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":442801,"byte_end":442816,"line_start":216,"line_end":216,"column_start":24,"column_end":39},"name":"IpAddMembership","qualname":"::sys::socket::sockopt::IpAddMembership","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6871},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":442913,"byte_end":442929,"line_start":217,"line_end":217,"column_start":24,"column_end":40},"name":"IpDropMembership","qualname":"::sys::socket::sockopt::IpDropMembership","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6881},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":443110,"byte_end":443127,"line_start":220,"line_end":220,"column_start":32,"column_end":49},"name":"Ipv6AddMembership","qualname":"::sys::socket::sockopt::Ipv6AddMembership","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6891},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":443238,"byte_end":443256,"line_start":221,"line_end":221,"column_start":32,"column_end":50},"name":"Ipv6DropMembership","qualname":"::sys::socket::sockopt::Ipv6DropMembership","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6901},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":443896,"byte_end":443910,"line_start":232,"line_end":232,"column_start":21,"column_end":35},"name":"IpMulticastTtl","qualname":"::sys::socket::sockopt::IpMulticastTtl","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6914},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":443979,"byte_end":443994,"line_start":233,"line_end":233,"column_start":21,"column_end":36},"name":"IpMulticastLoop","qualname":"::sys::socket::sockopt::IpMulticastLoop","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6927},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":444066,"byte_end":444080,"line_start":234,"line_end":234,"column_start":21,"column_end":35},"name":"ReceiveTimeout","qualname":"::sys::socket::sockopt::ReceiveTimeout","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6940},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":444149,"byte_end":444160,"line_start":235,"line_end":235,"column_start":21,"column_end":32},"name":"SendTimeout","qualname":"::sys::socket::sockopt::SendTimeout","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6953},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":444229,"byte_end":444238,"line_start":236,"line_end":236,"column_start":21,"column_end":30},"name":"Broadcast","qualname":"::sys::socket::sockopt::Broadcast","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6966},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":444305,"byte_end":444314,"line_start":237,"line_end":237,"column_start":21,"column_end":30},"name":"OobInline","qualname":"::sys::socket::sockopt::OobInline","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6979},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":444384,"byte_end":444395,"line_start":238,"line_end":238,"column_start":24,"column_end":35},"name":"SocketError","qualname":"::sys::socket::sockopt::SocketError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6989},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":444457,"byte_end":444466,"line_start":239,"line_end":239,"column_start":21,"column_end":30},"name":"KeepAlive","qualname":"::sys::socket::sockopt::KeepAlive","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7002},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":444592,"byte_end":444607,"line_start":241,"line_end":241,"column_start":24,"column_end":39},"name":"PeerCredentials","qualname":"::sys::socket::sockopt::PeerCredentials","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7012},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":444997,"byte_end":445008,"line_start":250,"line_end":250,"column_start":21,"column_end":32},"name":"TcpKeepIdle","qualname":"::sys::socket::sockopt::TcpKeepIdle","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7025},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":445075,"byte_end":445081,"line_start":251,"line_end":251,"column_start":21,"column_end":27},"name":"RcvBuf","qualname":"::sys::socket::sockopt::RcvBuf","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7038},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":445146,"byte_end":445152,"line_start":252,"line_end":252,"column_start":21,"column_end":27},"name":"SndBuf","qualname":"::sys::socket::sockopt::SndBuf","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7051},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":445276,"byte_end":445287,"line_start":254,"line_end":254,"column_start":24,"column_end":35},"name":"RcvBufForce","qualname":"::sys::socket::sockopt::RcvBufForce","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7061},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":445416,"byte_end":445427,"line_start":256,"line_end":256,"column_start":24,"column_end":35},"name":"SndBufForce","qualname":"::sys::socket::sockopt::SndBufForce","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7071},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":445500,"byte_end":445508,"line_start":257,"line_end":257,"column_start":24,"column_end":32},"name":"SockType","qualname":"::sys::socket::sockopt::SockType","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7081},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":445584,"byte_end":445594,"line_start":258,"line_end":258,"column_start":24,"column_end":34},"name":"AcceptConn","qualname":"::sys::socket::sockopt::AcceptConn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7091},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":445721,"byte_end":445732,"line_start":260,"line_end":260,"column_start":24,"column_end":35},"name":"OriginalDst","qualname":"::sys::socket::sockopt::OriginalDst","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7101},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":445811,"byte_end":445827,"line_start":261,"line_end":261,"column_start":21,"column_end":37},"name":"ReceiveTimestamp","qualname":"::sys::socket::sockopt::ReceiveTimestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7114},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":445950,"byte_end":445963,"line_start":263,"line_end":263,"column_start":21,"column_end":34},"name":"IpTransparent","qualname":"::sys::socket::sockopt::IpTransparent","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7127},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":446260,"byte_end":446264,"line_start":269,"line_end":269,"column_start":21,"column_end":25},"name":"Mark","qualname":"::sys::socket::sockopt::Mark","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7140},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":446381,"byte_end":446389,"line_start":271,"line_end":271,"column_start":21,"column_end":29},"name":"PassCred","qualname":"::sys::socket::sockopt::PassCred","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7153},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":446512,"byte_end":446525,"line_start":273,"line_end":273,"column_start":21,"column_end":34},"name":"TcpCongestion","qualname":"::sys::socket::sockopt::TcpCongestion","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7167},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":446736,"byte_end":446750,"line_start":280,"line_end":280,"column_start":21,"column_end":35},"name":"Ipv4PacketInfo","qualname":"::sys::socket::sockopt::Ipv4PacketInfo","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7180},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":446956,"byte_end":446974,"line_start":288,"line_end":288,"column_start":21,"column_end":39},"name":"Ipv6RecvPacketInfo","qualname":"::sys::socket::sockopt::Ipv6RecvPacketInfo","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7194},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344731,"byte_end":344737,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Stream","qualname":"::sys::socket::SockType::Stream","value":"SockType::Stream","parent":{"krate":0,"index":7193},"children":[],"decl_id":null,"docs":" Provides sequenced, reliable, two-way, connection-\n based byte streams.  An out-of-band data transmission\n mechanism may be supported.\n","sig":null,"attributes":[{"value":"/ Provides sequenced, reliable, two-way, connection-","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344574,"byte_end":344628,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/ based byte streams.  An out-of-band data transmission","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344633,"byte_end":344690,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/ mechanism may be supported.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344695,"byte_end":344726,"line_start":52,"line_end":52,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7197},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344863,"byte_end":344871,"line_start":56,"line_end":56,"column_start":5,"column_end":13},"name":"Datagram","qualname":"::sys::socket::SockType::Datagram","value":"SockType::Datagram","parent":{"krate":0,"index":7193},"children":[],"decl_id":null,"docs":" Supports datagrams (connectionless, unreliable\n messages of a fixed maximum length).\n","sig":null,"attributes":[{"value":"/ Supports datagrams (connectionless, unreliable","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344763,"byte_end":344813,"line_start":54,"line_end":54,"column_start":5,"column_end":55}},{"value":"/ messages of a fixed maximum length).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344818,"byte_end":344858,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7200},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345125,"byte_end":345134,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"SeqPacket","qualname":"::sys::socket::SockType::SeqPacket","value":"SockType::SeqPacket","parent":{"krate":0,"index":7193},"children":[],"decl_id":null,"docs":" Provides a sequenced, reliable, two-way connection-\n based data transmission path for datagrams of fixed\n maximum length; a consumer is required to read an\n entire packet with each input system call.\n","sig":null,"attributes":[{"value":"/ Provides a sequenced, reliable, two-way connection-","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344896,"byte_end":344951,"line_start":57,"line_end":57,"column_start":5,"column_end":60}},{"value":"/ based data transmission path for datagrams of fixed","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344956,"byte_end":345011,"line_start":58,"line_end":58,"column_start":5,"column_end":60}},{"value":"/ maximum length; a consumer is required to read an","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345016,"byte_end":345069,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/ entire packet with each input system call.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345074,"byte_end":345120,"line_start":60,"line_end":60,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7203},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345209,"byte_end":345212,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"Raw","qualname":"::sys::socket::SockType::Raw","value":"SockType::Raw","parent":{"krate":0,"index":7193},"children":[],"decl_id":null,"docs":" Provides raw network protocol access.\n","sig":null,"attributes":[{"value":"/ Provides raw network protocol access.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345163,"byte_end":345204,"line_start":62,"line_end":62,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7206},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345320,"byte_end":345323,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"name":"Rdm","qualname":"::sys::socket::SockType::Rdm","value":"SockType::Rdm","parent":{"krate":0,"index":7193},"children":[],"decl_id":null,"docs":" Provides a reliable datagram layer that does not\n guarantee ordering.\n","sig":null,"attributes":[{"value":"/ Provides a reliable datagram layer that does not","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345235,"byte_end":345287,"line_start":64,"line_end":64,"column_start":5,"column_end":57}},{"value":"/ guarantee ordering.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345292,"byte_end":345315,"line_start":65,"line_end":65,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":7193},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344559,"byte_end":344567,"line_start":49,"line_end":49,"column_start":10,"column_end":18},"name":"SockType","qualname":"::sys::socket::SockType","value":"pub enum SockType {\n\n    /// Provides sequenced, reliable, two-way, connection-\n    /// based byte streams.  An out-of-band data transmission\n    /// mechanism may be supported.\n    Stream = ,\n\n    /// Supports datagrams (connectionless, unreliable\n    /// messages of a fixed maximum length).\n    Datagram = ,\n\n    /// Provides a sequenced, reliable, two-way connection-\n    /// based data transmission path for datagrams of fixed\n    /// maximum length; a consumer is required to read an\n    /// entire packet with each input system call.\n    SeqPacket = ,\n\n    /// Provides raw network protocol access.\n    Raw = ,\n\n    /// Provides a reliable datagram layer that does not\n    /// guarantee ordering.\n    Rdm = ,\n}","parent":null,"children":[{"krate":0,"index":7194},{"krate":0,"index":7197},{"krate":0,"index":7200},{"krate":0,"index":7203},{"krate":0,"index":7206}],"decl_id":null,"docs":" These constants are used to specify the communication semantics\n when creating a socket with [`socket()`](fn.socket.html)\n","sig":null,"attributes":[{"value":"/ These constants are used to specify the communication semantics","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344363,"byte_end":344430,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/ when creating a socket with [`socket()`](fn.socket.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344431,"byte_end":344491,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":344537,"byte_end":344549,"line_start":48,"line_end":48,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7221},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345640,"byte_end":345643,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"Tcp","qualname":"::sys::socket::SockProtocol::Tcp","value":"SockProtocol::Tcp","parent":{"krate":0,"index":7220},"children":[],"decl_id":null,"docs":" TCP protocol ([ip(7)](http://man7.org/linux/man-pages/man7/ip.7.html))\n","sig":null,"attributes":[{"value":"/ TCP protocol ([ip(7)](http://man7.org/linux/man-pages/man7/ip.7.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345561,"byte_end":345635,"line_start":74,"line_end":74,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7224},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345748,"byte_end":345751,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"Udp","qualname":"::sys::socket::SockProtocol::Udp","value":"SockProtocol::Udp","parent":{"krate":0,"index":7220},"children":[],"decl_id":null,"docs":" UDP protocol ([ip(7)](http://man7.org/linux/man-pages/man7/ip.7.html))\n","sig":null,"attributes":[{"value":"/ UDP protocol ([ip(7)](http://man7.org/linux/man-pages/man7/ip.7.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345669,"byte_end":345743,"line_start":76,"line_end":76,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":7220},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345542,"byte_end":345554,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"SockProtocol","qualname":"::sys::socket::SockProtocol","value":"pub enum SockProtocol {\n\n    /// TCP protocol ([ip(7)](http://man7.org/linux/man-pages/man7/ip.7.html))\n    Tcp = ,\n\n    /// UDP protocol ([ip(7)](http://man7.org/linux/man-pages/man7/ip.7.html))\n    Udp = ,\n}","parent":null,"children":[{"krate":0,"index":7221},{"krate":0,"index":7224}],"decl_id":null,"docs":" Constants used in [`socket`](fn.socket.html) and [`socketpair`](fn.socketpair.html)\n to specify the protocol to use.\n","sig":null,"attributes":[{"value":"/ Constants used in [`socket`](fn.socket.html) and [`socketpair`](fn.socketpair.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345345,"byte_end":345432,"line_start":69,"line_end":69,"column_start":1,"column_end":88}},{"value":"/ to specify the protocol to use.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345433,"byte_end":345468,"line_start":70,"line_end":70,"column_start":1,"column_end":36}},{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":345469,"byte_end":345481,"line_start":71,"line_end":71,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":7241},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":346441,"byte_end":346449,"line_start":90,"line_end":90,"column_start":16,"column_end":24},"name":"SockFlag","qualname":"::sys::socket::SockFlag","value":"SockFlag {  }","parent":null,"children":[{"krate":0,"index":7242}],"decl_id":null,"docs":" Additional socket options\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7281},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":346766,"byte_end":346779,"line_start":98,"line_end":98,"column_start":9,"column_end":22},"name":"SOCK_NONBLOCK","qualname":"::sys::socket::SockFlag::SOCK_NONBLOCK","value":"SockFlag","parent":{"krate":0,"index":7280},"children":[],"decl_id":null,"docs":" Set non-blocking mode on the new socket\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os =\n          \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7282},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":347088,"byte_end":347100,"line_start":106,"line_end":106,"column_start":9,"column_end":21},"name":"SOCK_CLOEXEC","qualname":"::sys::socket::SockFlag::SOCK_CLOEXEC","value":"SockFlag","parent":{"krate":0,"index":7280},"children":[],"decl_id":null,"docs":" Set close-on-exec on the new descriptor\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os =\n          \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7336},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":347498,"byte_end":347506,"line_start":119,"line_end":119,"column_start":16,"column_end":24},"name":"MsgFlags","qualname":"::sys::socket::MsgFlags","value":"MsgFlags {  }","parent":null,"children":[{"krate":0,"index":7337}],"decl_id":null,"docs":" Flags for send/recv and their relatives\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7380},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":347739,"byte_end":347746,"line_start":123,"line_end":123,"column_start":9,"column_end":16},"name":"MSG_OOB","qualname":"::sys::socket::MsgFlags::MSG_OOB","value":"MsgFlags","parent":{"krate":0,"index":7379},"children":[],"decl_id":null,"docs":" Sends or requests out-of-band data on sockets that support this notion\n (e.g., of type [`Stream`](enum.SockType.html)); the underlying protocol must also\n support out-of-band data.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7381},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":347940,"byte_end":347948,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"name":"MSG_PEEK","qualname":"::sys::socket::MsgFlags::MSG_PEEK","value":"MsgFlags","parent":{"krate":0,"index":7379},"children":[],"decl_id":null,"docs":" Peeks at an incoming message. The data is treated as unread and the next\n [`recv()`](fn.recv.html)\n or similar function shall still return this data.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7382},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":348655,"byte_end":348667,"line_start":138,"line_end":138,"column_start":9,"column_end":21},"name":"MSG_DONTWAIT","qualname":"::sys::socket::MsgFlags::MSG_DONTWAIT","value":"MsgFlags","parent":{"krate":0,"index":7379},"children":[],"decl_id":null,"docs":" Enables nonblocking operation; if the operation would block,\n `EAGAIN` or `EWOULDBLOCK` is returned.  This provides similar\n behavior to setting the `O_NONBLOCK` flag\n (via the [`fcntl`](../../fcntl/fn.fcntl.html)\n `F_SETFL` operation), but differs in that `MSG_DONTWAIT` is a per-\n call option, whereas `O_NONBLOCK` is a setting on the open file\n description (see [open(2)](http://man7.org/linux/man-pages/man2/open.2.html)),\n which will affect all threads in\n the calling process and as well as other processes that hold\n file descriptors referring to the same open file description.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7383},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":348750,"byte_end":348760,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"MSG_CTRUNC","qualname":"::sys::socket::MsgFlags::MSG_CTRUNC","value":"MsgFlags","parent":{"krate":0,"index":7379},"children":[],"decl_id":null,"docs":" Receive flags: Control Data was discarded (buffer too small)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7384},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":349308,"byte_end":349317,"line_start":149,"line_end":149,"column_start":9,"column_end":18},"name":"MSG_TRUNC","qualname":"::sys::socket::MsgFlags::MSG_TRUNC","value":"MsgFlags","parent":{"krate":0,"index":7379},"children":[],"decl_id":null,"docs":" For raw ([`Packet`](addr/enum.AddressFamily.html)), Internet datagram\n (since Linux 2.4.27/2.6.8),\n netlink (since Linux 2.6.22) and UNIX datagram (since Linux 3.4)\n sockets: return the real length of the packet or datagram, even\n when it was longer than the passed buffer. Not implemented for UNIX\n domain ([unix(7)](https://linux.die.net/man/7/unix)) sockets.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7385},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":349462,"byte_end":349469,"line_start":152,"line_end":152,"column_start":9,"column_end":16},"name":"MSG_EOR","qualname":"::sys::socket::MsgFlags::MSG_EOR","value":"MsgFlags","parent":{"krate":0,"index":7379},"children":[],"decl_id":null,"docs":" Terminates a record (when this notion is supported, as for\n sockets of type [`SeqPacket`](enum.SockType.html)).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7386},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":349742,"byte_end":349754,"line_start":157,"line_end":157,"column_start":9,"column_end":21},"name":"MSG_ERRQUEUE","qualname":"::sys::socket::MsgFlags::MSG_ERRQUEUE","value":"MsgFlags","parent":{"krate":0,"index":7379},"children":[],"decl_id":null,"docs":" This flag specifies that queued errors should be received from\n the socket error queue. (For more details, see\n [recvfrom(2)](https://linux.die.net/man/2/recvfrom))\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7387},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":350484,"byte_end":350500,"line_start":171,"line_end":171,"column_start":9,"column_end":25},"name":"MSG_CMSG_CLOEXEC","qualname":"::sys::socket::MsgFlags::MSG_CMSG_CLOEXEC","value":"MsgFlags","parent":{"krate":0,"index":7379},"children":[],"decl_id":null,"docs":" Set the `close-on-exec` flag for the file descriptor received via a UNIX domain\n file descriptor using the `SCM_RIGHTS` operation (described in\n [unix(7)](https://linux.die.net/man/7/unix)).\n This flag is useful for the same reasons as the `O_CLOEXEC` flag of\n [open(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/open.html).","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os =\n          \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7470},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":350811,"byte_end":350826,"line_start":182,"line_end":182,"column_start":20,"column_end":35},"name":"UnixCredentials","qualname":"::sys::socket::UnixCredentials","value":"","parent":null,"children":[],"decl_id":null,"docs":" Unix credentials of the sending process.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":350750,"byte_end":350760,"line_start":180,"line_end":180,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":7458},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":350939,"byte_end":350942,"line_start":186,"line_end":186,"column_start":20,"column_end":23},"name":"pid","qualname":"<UnixCredentials>::pid","value":"pub fn pid(&Self) -> libc::pid_t","parent":null,"children":[],"decl_id":null,"docs":" Returns the process identifier\n","sig":null,"attributes":[{"value":"/ Returns the process identifier","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":350885,"byte_end":350919,"line_start":185,"line_end":185,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":7459},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351072,"byte_end":351075,"line_start":191,"line_end":191,"column_start":20,"column_end":23},"name":"uid","qualname":"<UnixCredentials>::uid","value":"pub fn uid(&Self) -> libc::uid_t","parent":null,"children":[],"decl_id":null,"docs":" Returns the user identifier\n","sig":null,"attributes":[{"value":"/ Returns the user identifier","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351021,"byte_end":351052,"line_start":190,"line_end":190,"column_start":13,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":7460},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351206,"byte_end":351209,"line_start":196,"line_end":196,"column_start":20,"column_end":23},"name":"gid","qualname":"<UnixCredentials>::gid","value":"pub fn gid(&Self) -> libc::gid_t","parent":null,"children":[],"decl_id":null,"docs":" Returns the group identifier\n","sig":null,"attributes":[{"value":"/ Returns the group identifier","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351154,"byte_end":351186,"line_start":195,"line_end":195,"column_start":13,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":7476},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352358,"byte_end":352377,"line_start":237,"line_end":237,"column_start":12,"column_end":31},"name":"IpMembershipRequest","qualname":"::sys::socket::IpMembershipRequest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Request for multicast socket operations","sig":null,"attributes":[{"value":"/ Request for multicast socket operations","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352220,"byte_end":352263,"line_start":232,"line_end":232,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352264,"byte_end":352267,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper type around `ip_mreq`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352268,"byte_end":352312,"line_start":234,"line_end":234,"column_start":1,"column_end":45}},{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352313,"byte_end":352323,"line_start":235,"line_end":235,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352578,"byte_end":352581,"line_start":243,"line_end":243,"column_start":12,"column_end":15},"name":"new","qualname":"<IpMembershipRequest>::new","value":"pub fn new(Ipv4Addr, Option<Ipv4Addr>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a new `IpMembershipRequest`","sig":null,"attributes":[{"value":"/ Instantiate a new `IpMembershipRequest`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352426,"byte_end":352469,"line_start":240,"line_end":240,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352474,"byte_end":352477,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ If `interface` is `None`, then `Ipv4Addr::any()` will be used for the interface.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352482,"byte_end":352566,"line_start":242,"line_end":242,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":7482},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353640,"byte_end":353661,"line_start":277,"line_end":277,"column_start":12,"column_end":33},"name":"Ipv6MembershipRequest","qualname":"::sys::socket::Ipv6MembershipRequest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Request for ipv6 multicast socket operations","sig":null,"attributes":[{"value":"/ Request for ipv6 multicast socket operations","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353495,"byte_end":353543,"line_start":272,"line_end":272,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353544,"byte_end":353547,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper type around `ipv6_mreq`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353548,"byte_end":353594,"line_start":274,"line_end":274,"column_start":1,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353595,"byte_end":353605,"line_start":275,"line_end":275,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353771,"byte_end":353774,"line_start":281,"line_end":281,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6MembershipRequest>::new","value":"pub fn new(Ipv6Addr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a new `Ipv6MembershipRequest`\n","sig":null,"attributes":[{"value":"/ Instantiate a new `Ipv6MembershipRequest`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353714,"byte_end":353759,"line_start":280,"line_end":280,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1224},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356338,"byte_end":356347,"line_start":363,"line_end":363,"column_start":12,"column_end":21},"name":"CmsgSpace","qualname":"::sys::socket::CmsgSpace","value":"CmsgSpace {  }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1229}],"decl_id":null,"docs":" A structure used to make room in a cmsghdr passed to recvmsg. The\n size and alignment match that of a cmsghdr followed by a T, but the\n fields are not accessible, as the actual types will change on a call\n to recvmsg.","sig":null,"attributes":[{"value":"/ A structure used to make room in a cmsghdr passed to recvmsg. The","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":355788,"byte_end":355857,"line_start":348,"line_end":348,"column_start":1,"column_end":70}},{"value":"/ size and alignment match that of a cmsghdr followed by a T, but the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":355858,"byte_end":355929,"line_start":349,"line_end":349,"column_start":1,"column_end":72}},{"value":"/ fields are not accessible, as the actual types will change on a call","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":355930,"byte_end":356002,"line_start":350,"line_end":350,"column_start":1,"column_end":73}},{"value":"/ to recvmsg.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356003,"byte_end":356018,"line_start":351,"line_end":351,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356019,"byte_end":356022,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ To make room for multiple messages, nest the type parameter with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356023,"byte_end":356091,"line_start":353,"line_end":353,"column_start":1,"column_end":69}},{"value":"/ tuples:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356092,"byte_end":356103,"line_start":354,"line_end":354,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356104,"byte_end":356107,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356108,"byte_end":356115,"line_start":356,"line_end":356,"column_start":1,"column_end":8}},{"value":"/ use std::os::unix::io::RawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356116,"byte_end":356149,"line_start":357,"line_end":357,"column_start":1,"column_end":34}},{"value":"/ use nix::sys::socket::CmsgSpace;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356150,"byte_end":356186,"line_start":358,"line_end":358,"column_start":1,"column_end":37}},{"value":"/ let cmsg: CmsgSpace<([RawFd; 3], CmsgSpace<[RawFd; 2]>)> = CmsgSpace::new();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356187,"byte_end":356267,"line_start":359,"line_end":359,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356268,"byte_end":356275,"line_start":360,"line_end":360,"column_start":1,"column_end":8}},{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356276,"byte_end":356286,"line_start":361,"line_end":361,"column_start":1,"column_end":11}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356287,"byte_end":356326,"line_start":362,"line_end":362,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356568,"byte_end":356571,"line_start":372,"line_end":372,"column_start":12,"column_end":15},"name":"new","qualname":"<CmsgSpace<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a CmsgSpace<T>. The structure is used only for space, so\n the fields are uninitialized.\n","sig":null,"attributes":[{"value":"/ Create a CmsgSpace<T>. The structure is used only for space, so","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356451,"byte_end":356518,"line_start":370,"line_end":370,"column_start":5,"column_end":72}},{"value":"/ the fields are uninitialized.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356523,"byte_end":356556,"line_start":371,"line_end":371,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":7489},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356726,"byte_end":356733,"line_start":379,"line_end":379,"column_start":12,"column_end":19},"name":"RecvMsg","qualname":"::sys::socket::RecvMsg","value":"RecvMsg { bytes, address, flags }","parent":null,"children":[{"krate":0,"index":7491},{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7491},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356785,"byte_end":356790,"line_start":381,"line_end":381,"column_start":9,"column_end":14},"name":"bytes","qualname":"::sys::socket::RecvMsg::bytes","value":"usize","parent":{"krate":0,"index":7489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7493},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356834,"byte_end":356841,"line_start":383,"line_end":383,"column_start":9,"column_end":16},"name":"address","qualname":"::sys::socket::RecvMsg::address","value":"std::option::Option<sys::socket::addr::SockAddr>","parent":{"krate":0,"index":7489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7494},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356869,"byte_end":356874,"line_start":384,"line_end":384,"column_start":9,"column_end":14},"name":"flags","qualname":"::sys::socket::RecvMsg::flags","value":"sys::socket::MsgFlags","parent":{"krate":0,"index":7489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":357006,"byte_end":357011,"line_start":390,"line_end":390,"column_start":12,"column_end":17},"name":"cmsgs","qualname":"<RecvMsg>::cmsgs","value":"pub fn cmsgs(&Self) -> CmsgIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the valid control messages pointed to by this\n msghdr.\n","sig":null,"attributes":[{"value":"/ Iterate over the valid control messages pointed to by this","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356916,"byte_end":356978,"line_start":388,"line_end":388,"column_start":5,"column_end":67}},{"value":"/ msghdr.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356983,"byte_end":356994,"line_start":389,"line_end":389,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":7498},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":357142,"byte_end":357154,"line_start":398,"line_end":398,"column_start":12,"column_end":24},"name":"CmsgIterator","qualname":"::sys::socket::CmsgIterator","value":"CmsgIterator {  }","parent":null,"children":[{"krate":0,"index":7500}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1242},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359312,"byte_end":359321,"line_start":450,"line_end":450,"column_start":5,"column_end":14},"name":"ScmRights","qualname":"::sys::socket::ControlMessage::ScmRights","value":"ControlMessage::ScmRights(&'a [RawFd])","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" A message of type `SCM_RIGHTS`, containing an array of file\n descriptors passed between processes.","sig":null,"attributes":[{"value":"/ A message of type `SCM_RIGHTS`, containing an array of file","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358718,"byte_end":358781,"line_start":440,"line_end":440,"column_start":5,"column_end":68}},{"value":"/ descriptors passed between processes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358786,"byte_end":358827,"line_start":441,"line_end":441,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358832,"byte_end":358835,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ See the description in the \"Ancillary messages\" section of the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358840,"byte_end":358906,"line_start":443,"line_end":443,"column_start":5,"column_end":71}},{"value":"/ [unix(7) man page](http://man7.org/linux/man-pages/man7/unix.7.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358911,"byte_end":358984,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358989,"byte_end":358992,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Using multiple `ScmRights` messages for a single `sendmsg` call isn't recommended since it","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358997,"byte_end":359091,"line_start":446,"line_end":446,"column_start":5,"column_end":99}},{"value":"/ causes platform-dependent behaviour: It might swallow all but the first `ScmRights` message","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359096,"byte_end":359191,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ or fail with `EINVAL`. Instead, you can put all fds to be passed into a single `ScmRights`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359196,"byte_end":359290,"line_start":448,"line_end":448,"column_start":5,"column_end":99}},{"value":"/ message.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359295,"byte_end":359307,"line_start":449,"line_end":449,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1245},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360083,"byte_end":360097,"line_start":464,"line_end":464,"column_start":5,"column_end":19},"name":"ScmCredentials","qualname":"::sys::socket::ControlMessage::ScmCredentials","value":"ControlMessage::ScmCredentials(&'a libc::ucred)","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" A message of type `SCM_CREDENTIALS`, containing the pid, uid and gid of\n a process connected to the socket.","sig":null,"attributes":[{"value":"/ A message of type `SCM_CREDENTIALS`, containing the pid, uid and gid of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359340,"byte_end":359415,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"/ a process connected to the socket.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359420,"byte_end":359458,"line_start":452,"line_end":452,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359463,"byte_end":359466,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This is similar to the socket option `SO_PEERCRED`, but requires a","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359471,"byte_end":359541,"line_start":454,"line_end":454,"column_start":5,"column_end":75}},{"value":"/ process to explicitly send its credentials. A process running as root is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359546,"byte_end":359622,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ allowed to specify any credentials, while credentials sent by other","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359627,"byte_end":359698,"line_start":456,"line_end":456,"column_start":5,"column_end":76}},{"value":"/ processes are verified by the kernel.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359703,"byte_end":359744,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359749,"byte_end":359752,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ For further information, please refer to the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359757,"byte_end":359805,"line_start":459,"line_end":459,"column_start":5,"column_end":53}},{"value":"/ [`unix(7)`](http://man7.org/linux/man-pages/man7/unix.7.html) man page.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":359810,"byte_end":359885,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360023,"byte_end":360078,"line_start":463,"line_end":463,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1248},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362725,"byte_end":362737,"line_start":521,"line_end":521,"column_start":5,"column_end":17},"name":"ScmTimestamp","qualname":"::sys::socket::ControlMessage::ScmTimestamp","value":"ControlMessage::ScmTimestamp(&'a TimeVal)","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" A message of type `SCM_TIMESTAMP`, containing the time the\n packet was received by the kernel.","sig":null,"attributes":[{"value":"/ A message of type `SCM_TIMESTAMP`, containing the time the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360120,"byte_end":360182,"line_start":465,"line_end":465,"column_start":5,"column_end":67}},{"value":"/ packet was received by the kernel.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360187,"byte_end":360225,"line_start":466,"line_end":466,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360230,"byte_end":360233,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ See the kernel's explanation in \"SO_TIMESTAMP\" of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360238,"byte_end":360291,"line_start":468,"line_end":468,"column_start":5,"column_end":58}},{"value":"/ [networking/timestamping](https://www.kernel.org/doc/Documentation/networking/timestamping.txt).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360296,"byte_end":360396,"line_start":469,"line_end":469,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360401,"byte_end":360404,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360409,"byte_end":360423,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360428,"byte_end":360431,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ use nix::sys::socket::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360710,"byte_end":360738,"line_start":477,"line_end":477,"column_start":5,"column_end":33}},{"value":"/ use nix::sys::uio::IoVec;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360743,"byte_end":360772,"line_start":478,"line_end":478,"column_start":5,"column_end":34}},{"value":"/ use nix::sys::time::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360777,"byte_end":360803,"line_start":479,"line_end":479,"column_start":5,"column_end":31}},{"value":"/ use std::time::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360808,"byte_end":360829,"line_start":480,"line_end":480,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360834,"byte_end":360837,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ // Set up","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360842,"byte_end":360855,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ let message = \"Ohayō!\".as_bytes();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360860,"byte_end":360899,"line_start":483,"line_end":483,"column_start":5,"column_end":43}},{"value":"/ let in_socket = socket(","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360904,"byte_end":360931,"line_start":484,"line_end":484,"column_start":5,"column_end":32}},{"value":"/     AddressFamily::Inet,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360936,"byte_end":360964,"line_start":485,"line_end":485,"column_start":5,"column_end":33}},{"value":"/     SockType::Datagram,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":360969,"byte_end":360996,"line_start":486,"line_end":486,"column_start":5,"column_end":32}},{"value":"/     SockFlag::empty(),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361001,"byte_end":361027,"line_start":487,"line_end":487,"column_start":5,"column_end":31}},{"value":"/     None).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361032,"byte_end":361055,"line_start":488,"line_end":488,"column_start":5,"column_end":28}},{"value":"/ setsockopt(in_socket, sockopt::ReceiveTimestamp, &true).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361060,"byte_end":361129,"line_start":489,"line_end":489,"column_start":5,"column_end":74}},{"value":"/ let localhost = InetAddr::new(IpAddr::new_v4(127, 0, 0, 1), 0);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361134,"byte_end":361201,"line_start":490,"line_end":490,"column_start":5,"column_end":72}},{"value":"/ bind(in_socket, &SockAddr::new_inet(localhost)).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361206,"byte_end":361267,"line_start":491,"line_end":491,"column_start":5,"column_end":66}},{"value":"/ let address = getsockname(in_socket).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361272,"byte_end":361322,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/ // Get initial time","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361327,"byte_end":361350,"line_start":493,"line_end":493,"column_start":5,"column_end":28}},{"value":"/ let time0 = SystemTime::now();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361355,"byte_end":361389,"line_start":494,"line_end":494,"column_start":5,"column_end":39}},{"value":"/ // Send the message","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361394,"byte_end":361417,"line_start":495,"line_end":495,"column_start":5,"column_end":28}},{"value":"/ let iov = [IoVec::from_slice(message)];","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361422,"byte_end":361465,"line_start":496,"line_end":496,"column_start":5,"column_end":48}},{"value":"/ let flags = MsgFlags::empty();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361470,"byte_end":361504,"line_start":497,"line_end":497,"column_start":5,"column_end":39}},{"value":"/ let l = sendmsg(in_socket, &iov, &[], flags, Some(&address)).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361509,"byte_end":361583,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(message.len(), l);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361588,"byte_end":361621,"line_start":499,"line_end":499,"column_start":5,"column_end":38}},{"value":"/ // Receive the message","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361626,"byte_end":361652,"line_start":500,"line_end":500,"column_start":5,"column_end":31}},{"value":"/ let mut buffer = vec![0u8; message.len()];","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361657,"byte_end":361703,"line_start":501,"line_end":501,"column_start":5,"column_end":51}},{"value":"/ let mut cmsgspace: CmsgSpace<TimeVal> = CmsgSpace::new();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361708,"byte_end":361769,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/ let iov = [IoVec::from_mut_slice(&mut buffer)];","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361774,"byte_end":361825,"line_start":503,"line_end":503,"column_start":5,"column_end":56}},{"value":"/ let r = recvmsg(in_socket, &iov, Some(&mut cmsgspace), flags).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361830,"byte_end":361905,"line_start":504,"line_end":504,"column_start":5,"column_end":80}},{"value":"/ let rtime = match r.cmsgs().next() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361910,"byte_end":361950,"line_start":505,"line_end":505,"column_start":5,"column_end":45}},{"value":"/     Some(ControlMessage::ScmTimestamp(&rtime)) => rtime,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":361955,"byte_end":362015,"line_start":506,"line_end":506,"column_start":5,"column_end":65}},{"value":"/     Some(_) => panic!(\"Unexpected control message\"),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362020,"byte_end":362076,"line_start":507,"line_end":507,"column_start":5,"column_end":61}},{"value":"/     None => panic!(\"No control message\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362081,"byte_end":362125,"line_start":508,"line_end":508,"column_start":5,"column_end":49}},{"value":"/ };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362130,"byte_end":362136,"line_start":509,"line_end":509,"column_start":5,"column_end":11}},{"value":"/ // Check the final time","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362141,"byte_end":362168,"line_start":510,"line_end":510,"column_start":5,"column_end":32}},{"value":"/ let time1 = SystemTime::now();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362173,"byte_end":362207,"line_start":511,"line_end":511,"column_start":5,"column_end":39}},{"value":"/ // the packet's received timestamp should lie in-between the two system","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362212,"byte_end":362287,"line_start":512,"line_end":512,"column_start":5,"column_end":80}},{"value":"/ // times, unless the system clock was adjusted in the meantime.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362292,"byte_end":362359,"line_start":513,"line_end":513,"column_start":5,"column_end":72}},{"value":"/ let rduration = Duration::new(rtime.tv_sec() as u64,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362364,"byte_end":362420,"line_start":514,"line_end":514,"column_start":5,"column_end":61}},{"value":"/                               rtime.tv_usec() as u32 * 1000);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362425,"byte_end":362490,"line_start":515,"line_end":515,"column_start":5,"column_end":70}},{"value":"/ assert!(time0.duration_since(UNIX_EPOCH).unwrap() <= rduration);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362495,"byte_end":362563,"line_start":516,"line_end":516,"column_start":5,"column_end":73}},{"value":"/ assert!(rduration <= time1.duration_since(UNIX_EPOCH).unwrap());","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362568,"byte_end":362636,"line_start":517,"line_end":517,"column_start":5,"column_end":73}},{"value":"/ // Close socket","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362641,"byte_end":362660,"line_start":518,"line_end":518,"column_start":5,"column_end":24}},{"value":"/ nix::unistd::close(in_socket).unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362665,"byte_end":362708,"line_start":519,"line_end":519,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362713,"byte_end":362720,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1251},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362895,"byte_end":362909,"line_start":529,"line_end":529,"column_start":5,"column_end":19},"name":"Ipv4PacketInfo","qualname":"::sys::socket::ControlMessage::Ipv4PacketInfo","value":"ControlMessage::Ipv4PacketInfo(&'a libc::in_pktinfo)","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"ios\", target_os = \"linux\",\n          target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362757,"byte_end":362890,"line_start":523,"line_end":528,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1254},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":363106,"byte_end":363120,"line_start":537,"line_end":537,"column_start":5,"column_end":19},"name":"Ipv6PacketInfo","qualname":"::sys::socket::ControlMessage::Ipv6PacketInfo","value":"ControlMessage::Ipv6PacketInfo(&'a libc::in6_pktinfo)","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":362937,"byte_end":363101,"line_start":530,"line_end":536,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1257},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":363225,"byte_end":363232,"line_start":541,"line_end":541,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::sys::socket::ControlMessage::Unknown","value":"ControlMessage::Unknown(UnknownCmsg)","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":" Catch-all variant for unimplemented cmsg types.\n","sig":null,"attributes":[{"value":"/ Catch-all variant for unimplemented cmsg types.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":363150,"byte_end":363201,"line_start":539,"line_end":539,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":1240},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358693,"byte_end":358707,"line_start":439,"line_end":439,"column_start":10,"column_end":24},"name":"ControlMessage","qualname":"::sys::socket::ControlMessage","value":"pub enum ControlMessage<'a> {\n\n    /// A message of type `SCM_RIGHTS`, containing an array of file\n    /// descriptors passed between processes.\n    ///\n    /// See the description in the \"Ancillary messages\" section of the\n    /// [unix(7) man page](http://man7.org/linux/man-pages/man7/unix.7.html).\n    ///\n    /// Using multiple `ScmRights` messages for a single `sendmsg` call isn't recommended since it\n    /// causes platform-dependent behaviour: It might swallow all but the first `ScmRights` message\n    /// or fail with `EINVAL`. Instead, you can put all fds to be passed into a single `ScmRights`\n    /// message.\n    ScmRights(&'a [RawFd]),\n\n    /// A message of type `SCM_CREDENTIALS`, containing the pid, uid and gid of\n    /// a process connected to the socket.\n    ///\n    /// This is similar to the socket option `SO_PEERCRED`, but requires a\n    /// process to explicitly send its credentials. A process running as root is\n    /// allowed to specify any credentials, while credentials sent by other\n    /// processes are verified by the kernel.\n    ///\n    /// For further information, please refer to the\n    /// [`unix(7)`](http://man7.org/linux/man-pages/man7/unix.7.html) man page.\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    ScmCredentials(&'a libc::ucred),\n\n    /// A message of type `SCM_TIMESTAMP`, containing the time the\n    /// packet was received by the kernel.\n    ///\n    /// See the kernel's explanation in \"SO_TIMESTAMP\" of\n    /// [networking/timestamping](https://www.kernel.org/doc/Documentation/networking/timestamping.txt).\n    ///\n    /// # Examples\n    ///\n    #[doc = \" ```\"]\n    /// use nix::sys::socket::*;\n    /// use nix::sys::uio::IoVec;\n    /// use nix::sys::time::*;\n    /// use std::time::*;\n    ///\n    /// // Set up\n    /// let message = \"Ohayō!\".as_bytes();\n    /// let in_socket = socket(\n    ///     AddressFamily::Inet,\n    ///     SockType::Datagram,\n    ///     SockFlag::empty(),\n    ///     None).unwrap();\n    /// setsockopt(in_socket, sockopt::ReceiveTimestamp, &true).unwrap();\n    /// let localhost = InetAddr::new(IpAddr::new_v4(127, 0, 0, 1), 0);\n    /// bind(in_socket, &SockAddr::new_inet(localhost)).unwrap();\n    /// let address = getsockname(in_socket).unwrap();\n    /// // Get initial time\n    /// let time0 = SystemTime::now();\n    /// // Send the message\n    /// let iov = [IoVec::from_slice(message)];\n    /// let flags = MsgFlags::empty();\n    /// let l = sendmsg(in_socket, &iov, &[], flags, Some(&address)).unwrap();\n    /// assert_eq!(message.len(), l);\n    /// // Receive the message\n    /// let mut buffer = vec![0u8; message.len()];\n    /// let mut cmsgspace: CmsgSpace<TimeVal> = CmsgSpace::new();\n    /// let iov = [IoVec::from_mut_slice(&mut buffer)];\n    /// let r = recvmsg(in_socket, &iov, Some(&mut cmsgspace), flags).unwrap();\n    /// let rtime = match r.cmsgs().next() {\n    ///     Some(ControlMessage::ScmTimestamp(&rtime)) => rtime,\n    ///     Some(_) => panic!(\"Unexpected control message\"),\n    ///     None => panic!(\"No control message\")\n    /// };\n    /// // Check the final time\n    /// let time1 = SystemTime::now();\n    /// // the packet's received timestamp should lie in-between the two system\n    /// // times, unless the system clock was adjusted in the meantime.\n    /// let rduration = Duration::new(rtime.tv_sec() as u64,\n    ///                               rtime.tv_usec() as u32 * 1000);\n    /// assert!(time0.duration_since(UNIX_EPOCH).unwrap() <= rduration);\n    /// assert!(rduration <= time1.duration_since(UNIX_EPOCH).unwrap());\n    /// // Close socket\n    /// nix::unistd::close(in_socket).unwrap();\n    /// ```\n    ScmTimestamp(&'a TimeVal),\n\n    #[cfg(any(target_os = \"android\", target_os = \"ios\", target_os = \"linux\",\n              target_os = \"macos\"))]\n    Ipv4PacketInfo(&'a libc::in_pktinfo),\n\n    #[cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"ios\",\n              target_os = \"linux\", target_os = \"macos\"))]\n    Ipv6PacketInfo(&'a libc::in6_pktinfo),\n\n    /// Catch-all variant for unimplemented cmsg types.\n    #[doc(hidden)]\n    Unknown(UnknownCmsg),\n}","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1257}],"decl_id":null,"docs":" A type-safe wrapper around a single control message. More types may\n be added to this enum; do not exhaustively pattern-match it.\n [Further reading](http://man7.org/linux/man-pages/man3/cmsg.3.html)\n","sig":null,"attributes":[{"value":"/ A type-safe wrapper around a single control message. More types may","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358435,"byte_end":358506,"line_start":435,"line_end":435,"column_start":1,"column_end":72}},{"value":"/ be added to this enum; do not exhaustively pattern-match it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358507,"byte_end":358571,"line_start":436,"line_end":436,"column_start":1,"column_end":65}},{"value":"/ [Further reading](http://man7.org/linux/man-pages/man3/cmsg.3.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358572,"byte_end":358643,"line_start":437,"line_end":437,"column_start":1,"column_end":72}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":358644,"byte_end":358683,"line_start":438,"line_end":438,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1260},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":363392,"byte_end":363403,"line_start":547,"line_end":547,"column_start":12,"column_end":23},"name":"UnknownCmsg","qualname":"::sys::socket::UnknownCmsg","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":363341,"byte_end":363380,"line_start":546,"line_end":546,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1274},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":371970,"byte_end":371977,"line_start":777,"line_end":777,"column_start":8,"column_end":15},"name":"sendmsg","qualname":"::sys::socket::sendmsg","value":"pub fn sendmsg<'a>(RawFd, &[IoVec<&'a [u8]>], &[ControlMessage], MsgFlags,\n                   Option<&'a SockAddr>) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Send data in scatter-gather vectors to a socket, possibly accompanied\n by ancillary data. Optionally direct the message at the given address,\n as with sendto.","sig":null,"attributes":[{"value":"/ Send data in scatter-gather vectors to a socket, possibly accompanied","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":371754,"byte_end":371827,"line_start":772,"line_end":772,"column_start":1,"column_end":74}},{"value":"/ by ancillary data. Optionally direct the message at the given address,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":371828,"byte_end":371902,"line_start":773,"line_end":773,"column_start":1,"column_end":75}},{"value":"/ as with sendto.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":371903,"byte_end":371922,"line_start":774,"line_end":774,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":371923,"byte_end":371926,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ Allocates if cmsgs is nonempty.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":371927,"byte_end":371962,"line_start":776,"line_end":776,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":1277},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":373686,"byte_end":373693,"line_start":830,"line_end":830,"column_start":8,"column_end":15},"name":"recvmsg","qualname":"::sys::socket::recvmsg","value":"pub fn recvmsg<'a,\n               T>(RawFd, &[IoVec<&mut [u8]>], Option<&'a mut CmsgSpace<T>>,\n                  MsgFlags) -> Result<RecvMsg>","parent":null,"children":[],"decl_id":null,"docs":" Receive message in scatter-gather vectors from a socket, and\n optionally receive ancillary data into the provided buffer.\n If no ancillary data is desired, use () as the type parameter.\n","sig":null,"attributes":[{"value":"/ Receive message in scatter-gather vectors from a socket, and","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":373483,"byte_end":373547,"line_start":827,"line_end":827,"column_start":1,"column_end":65}},{"value":"/ optionally receive ancillary data into the provided buffer.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":373548,"byte_end":373611,"line_start":828,"line_end":828,"column_start":1,"column_end":64}},{"value":"/ If no ancillary data is desired, use () as the type parameter.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":373612,"byte_end":373678,"line_start":829,"line_end":829,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1280},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375981,"byte_end":375987,"line_start":883,"line_end":883,"column_start":8,"column_end":14},"name":"socket","qualname":"::sys::socket::socket","value":"pub fn socket<T: Into<Option<SockProtocol>>>(AddressFamily, SockType,\n                                             SockFlag, T) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":" Create an endpoint for communication","sig":null,"attributes":[{"value":"/ Create an endpoint for communication","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375448,"byte_end":375488,"line_start":873,"line_end":873,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375489,"byte_end":375492,"line_start":874,"line_end":874,"column_start":1,"column_end":4}},{"value":"/ The `protocol` specifies a particular protocol to be used with the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375493,"byte_end":375563,"line_start":875,"line_end":875,"column_start":1,"column_end":71}},{"value":"/ socket.  Normally only a single protocol exists to support a","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375564,"byte_end":375628,"line_start":876,"line_end":876,"column_start":1,"column_end":65}},{"value":"/ particular socket type within a given protocol family, in which case","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375629,"byte_end":375701,"line_start":877,"line_end":877,"column_start":1,"column_end":73}},{"value":"/ protocol can be specified as `None`.  However, it is possible that many","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375702,"byte_end":375777,"line_start":878,"line_end":878,"column_start":1,"column_end":76}},{"value":"/ protocols may exist, in which case a particular protocol must be","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375778,"byte_end":375846,"line_start":879,"line_end":879,"column_start":1,"column_end":69}},{"value":"/ specified in this manner.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375847,"byte_end":375876,"line_start":880,"line_end":880,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375877,"byte_end":375880,"line_start":881,"line_end":881,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/socket.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":375881,"byte_end":375973,"line_start":882,"line_end":882,"column_start":1,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":1282},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":376705,"byte_end":376715,"line_start":903,"line_end":903,"column_start":8,"column_end":18},"name":"socketpair","qualname":"::sys::socket::socketpair","value":"pub fn socketpair<T: Into<Option<SockProtocol>>>(AddressFamily, SockType, T,\n                                                 SockFlag)\n-> Result<(RawFd, RawFd)>","parent":null,"children":[],"decl_id":null,"docs":" Create a pair of connected sockets","sig":null,"attributes":[{"value":"/ Create a pair of connected sockets","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":376558,"byte_end":376596,"line_start":900,"line_end":900,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":376597,"byte_end":376600,"line_start":901,"line_end":901,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/socketpair.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":376601,"byte_end":376697,"line_start":902,"line_end":902,"column_start":1,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":1284},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":377534,"byte_end":377540,"line_start":927,"line_end":927,"column_start":8,"column_end":14},"name":"listen","qualname":"::sys::socket::listen","value":"pub fn listen(RawFd, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Listen for connections on a socket","sig":null,"attributes":[{"value":"/ Listen for connections on a socket","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":377391,"byte_end":377429,"line_start":924,"line_end":924,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":377430,"byte_end":377433,"line_start":925,"line_end":925,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/listen.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":377434,"byte_end":377526,"line_start":926,"line_end":926,"column_start":1,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":1285},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":377820,"byte_end":377824,"line_start":936,"line_end":936,"column_start":8,"column_end":12},"name":"bind","qualname":"::sys::socket::bind","value":"pub fn bind(RawFd, &SockAddr) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind a name to a socket","sig":null,"attributes":[{"value":"/ Bind a name to a socket","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":377690,"byte_end":377717,"line_start":933,"line_end":933,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":377718,"byte_end":377721,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/bind.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":377722,"byte_end":377812,"line_start":935,"line_end":935,"column_start":1,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":1286},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378154,"byte_end":378160,"line_start":948,"line_end":948,"column_start":8,"column_end":14},"name":"accept","qualname":"::sys::socket::accept","value":"pub fn accept(RawFd) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":" Accept a connection on a socket","sig":null,"attributes":[{"value":"/ Accept a connection on a socket","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378014,"byte_end":378049,"line_start":945,"line_end":945,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378050,"byte_end":378053,"line_start":946,"line_end":946,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/accept.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378054,"byte_end":378146,"line_start":947,"line_end":947,"column_start":1,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":1287},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378556,"byte_end":378563,"line_start":961,"line_end":961,"column_start":8,"column_end":15},"name":"accept4","qualname":"::sys::socket::accept4","value":"pub fn accept4(RawFd, SockFlag) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":" Accept a connection on a socket","sig":null,"attributes":[{"value":"/ Accept a connection on a socket","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378303,"byte_end":378338,"line_start":954,"line_end":954,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378339,"byte_end":378342,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://man7.org/linux/man-pages/man2/accept.2.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378343,"byte_end":378416,"line_start":956,"line_end":956,"column_start":1,"column_end":74}},{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"linux\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378417,"byte_end":378548,"line_start":957,"line_end":960,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1288},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378881,"byte_end":378888,"line_start":970,"line_end":970,"column_start":8,"column_end":15},"name":"connect","qualname":"::sys::socket::connect","value":"pub fn connect(RawFd, &SockAddr) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a connection on a socket","sig":null,"attributes":[{"value":"/ Initiate a connection on a socket","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378738,"byte_end":378775,"line_start":967,"line_end":967,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378776,"byte_end":378779,"line_start":968,"line_end":968,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/connect.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":378780,"byte_end":378873,"line_start":969,"line_end":969,"column_start":1,"column_end":94}}]},{"kind":"Function","id":{"krate":0,"index":1289},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":379272,"byte_end":379276,"line_start":983,"line_end":983,"column_start":8,"column_end":12},"name":"recv","qualname":"::sys::socket::recv","value":"pub fn recv(RawFd, &mut [u8], MsgFlags) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receive data from a connection-oriented socket. Returns the number of\n bytes read","sig":null,"attributes":[{"value":"/ Receive data from a connection-oriented socket. Returns the number of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":379081,"byte_end":379154,"line_start":979,"line_end":979,"column_start":1,"column_end":74}},{"value":"/ bytes read","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":379155,"byte_end":379169,"line_start":980,"line_end":980,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":379170,"byte_end":379173,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/recv.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":379174,"byte_end":379264,"line_start":982,"line_end":982,"column_start":1,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":1291},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":379816,"byte_end":379824,"line_start":999,"line_end":999,"column_start":8,"column_end":16},"name":"recvfrom","qualname":"::sys::socket::recvfrom","value":"pub fn recvfrom(RawFd, &mut [u8]) -> Result<(usize, SockAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receive data from a connectionless or connection-oriented socket. Returns\n the number of bytes read and the socket address of the sender.","sig":null,"attributes":[{"value":"/ Receive data from a connectionless or connection-oriented socket. Returns","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":379565,"byte_end":379642,"line_start":995,"line_end":995,"column_start":1,"column_end":78}},{"value":"/ the number of bytes read and the socket address of the sender.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":379643,"byte_end":379709,"line_start":996,"line_end":996,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":379710,"byte_end":379713,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/recvfrom.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":379714,"byte_end":379808,"line_start":998,"line_end":998,"column_start":1,"column_end":95}}]},{"kind":"Function","id":{"krate":0,"index":1293},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":380504,"byte_end":380510,"line_start":1020,"line_end":1020,"column_start":8,"column_end":14},"name":"sendto","qualname":"::sys::socket::sendto","value":"pub fn sendto(RawFd, &[u8], &SockAddr, MsgFlags) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Send a message to a socket","sig":null,"attributes":[{"value":"/ Send a message to a socket","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":380369,"byte_end":380399,"line_start":1017,"line_end":1017,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":380400,"byte_end":380403,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/sendto.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":380404,"byte_end":380496,"line_start":1019,"line_end":1019,"column_start":1,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":1295},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":380992,"byte_end":380996,"line_start":1032,"line_end":1032,"column_start":8,"column_end":12},"name":"send","qualname":"::sys::socket::send","value":"pub fn send(RawFd, &[u8], MsgFlags) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Send data to a connection-oriented socket. Returns the number of bytes read","sig":null,"attributes":[{"value":"/ Send data to a connection-oriented socket. Returns the number of bytes read","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":380810,"byte_end":380889,"line_start":1029,"line_end":1029,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":380890,"byte_end":380893,"line_start":1030,"line_end":1030,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/send.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":380894,"byte_end":380984,"line_start":1031,"line_end":1031,"column_start":1,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7505},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381575,"byte_end":381581,"line_start":1053,"line_end":1053,"column_start":5,"column_end":11},"name":"Socket","qualname":"::sys::socket::SockLevel::Socket","value":"SockLevel::Socket","parent":{"krate":0,"index":7504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7508},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381606,"byte_end":381609,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8},"name":"Tcp","qualname":"::sys::socket::SockLevel::Tcp","value":"SockLevel::Tcp","parent":{"krate":0,"index":7504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7511},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381635,"byte_end":381637,"line_start":1055,"line_end":1055,"column_start":5,"column_end":7},"name":"Ip","qualname":"::sys::socket::SockLevel::Ip","value":"SockLevel::Ip","parent":{"krate":0,"index":7504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7514},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381662,"byte_end":381666,"line_start":1056,"line_end":1056,"column_start":5,"column_end":9},"name":"Ipv6","qualname":"::sys::socket::SockLevel::Ipv6","value":"SockLevel::Ipv6","parent":{"krate":0,"index":7504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7517},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381693,"byte_end":381696,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8},"name":"Udp","qualname":"::sys::socket::SockLevel::Udp","value":"SockLevel::Udp","parent":{"krate":0,"index":7504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7520},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381782,"byte_end":381789,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12},"name":"Netlink","qualname":"::sys::socket::SockLevel::Netlink","value":"SockLevel::Netlink","parent":{"krate":0,"index":7504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381722,"byte_end":381777,"line_start":1058,"line_end":1058,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":7504},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381559,"byte_end":381568,"line_start":1052,"line_end":1052,"column_start":10,"column_end":19},"name":"SockLevel","qualname":"::sys::socket::SockLevel","value":"pub enum SockLevel {\n    Socket = ,\n    Tcp = ,\n    Ip = ,\n    Ipv6 = ,\n    Udp = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    Netlink = ,\n}","parent":null,"children":[{"krate":0,"index":7505},{"krate":0,"index":7508},{"krate":0,"index":7511},{"krate":0,"index":7514},{"krate":0,"index":7517},{"krate":0,"index":7520}],"decl_id":null,"docs":" The protocol level at which to get / set socket options. Used as an\n argument to `getsockopt` and `setsockopt`.","sig":null,"attributes":[{"value":"/ The protocol level at which to get / set socket options. Used as an","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381266,"byte_end":381337,"line_start":1046,"line_end":1046,"column_start":1,"column_end":72}},{"value":"/ argument to `getsockopt` and `setsockopt`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381338,"byte_end":381384,"line_start":1047,"line_end":1047,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381385,"byte_end":381388,"line_start":1048,"line_end":1048,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/setsockopt.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381389,"byte_end":381485,"line_start":1049,"line_end":1049,"column_start":1,"column_end":97}},{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381486,"byte_end":381498,"line_start":1050,"line_end":1050,"column_start":1,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":1297},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381924,"byte_end":381934,"line_start":1064,"line_end":1064,"column_start":11,"column_end":21},"name":"GetSockOpt","qualname":"::sys::socket::GetSockOpt","value":"GetSockOpt: Copy","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1299}],"decl_id":null,"docs":" Represents a socket option that can be accessed or set. Used as an argument\n to `getsockopt`\n","sig":null,"attributes":[{"value":"/ Represents a socket option that can be accessed or set. Used as an argument","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381814,"byte_end":381893,"line_start":1062,"line_end":1062,"column_start":1,"column_end":80}},{"value":"/ to `getsockopt`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381894,"byte_end":381913,"line_start":1063,"line_end":1063,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":1298},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381953,"byte_end":381956,"line_start":1065,"line_end":1065,"column_start":10,"column_end":13},"name":"Val","qualname":"::sys::socket::GetSockOpt::Val","value":"type Val;","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381985,"byte_end":381988,"line_start":1068,"line_end":1068,"column_start":8,"column_end":11},"name":"get","qualname":"::sys::socket::GetSockOpt::get","value":"pub fn get(&Self, RawFd) -> Result<Self::Val>","parent":{"krate":0,"index":1297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1300},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382142,"byte_end":382152,"line_start":1073,"line_end":1073,"column_start":11,"column_end":21},"name":"SetSockOpt","qualname":"::sys::socket::SetSockOpt","value":"SetSockOpt: Copy","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302}],"decl_id":null,"docs":" Represents a socket option that can be accessed or set. Used as an argument\n to `setsockopt`\n","sig":null,"attributes":[{"value":"/ Represents a socket option that can be accessed or set. Used as an argument","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382032,"byte_end":382111,"line_start":1071,"line_end":1071,"column_start":1,"column_end":80}},{"value":"/ to `setsockopt`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382112,"byte_end":382131,"line_start":1072,"line_end":1072,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":1301},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382171,"byte_end":382174,"line_start":1074,"line_end":1074,"column_start":10,"column_end":13},"name":"Val","qualname":"::sys::socket::SetSockOpt::Val","value":"type Val;","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382203,"byte_end":382206,"line_start":1077,"line_end":1077,"column_start":8,"column_end":11},"name":"set","qualname":"::sys::socket::SetSockOpt::set","value":"pub fn set(&Self, RawFd, &Self::Val) -> Result<()>","parent":{"krate":0,"index":1300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1303},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382426,"byte_end":382436,"line_start":1083,"line_end":1083,"column_start":8,"column_end":18},"name":"getsockopt","qualname":"::sys::socket::getsockopt","value":"pub fn getsockopt<O: GetSockOpt>(RawFd, O) -> Result<O::Val>","parent":null,"children":[],"decl_id":null,"docs":" Get the current value for the requested socket option","sig":null,"attributes":[{"value":"/ Get the current value for the requested socket option","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382260,"byte_end":382317,"line_start":1080,"line_end":1080,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382318,"byte_end":382321,"line_start":1081,"line_end":1081,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getsockopt.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382322,"byte_end":382418,"line_start":1082,"line_end":1082,"column_start":1,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":1305},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":383032,"byte_end":383042,"line_start":1104,"line_end":1104,"column_start":8,"column_end":18},"name":"setsockopt","qualname":"::sys::socket::setsockopt","value":"pub fn setsockopt<O: SetSockOpt>(RawFd, O, &O::Val) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the requested socket option","sig":null,"attributes":[{"value":"/ Sets the value for the requested socket option","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382510,"byte_end":382560,"line_start":1087,"line_end":1087,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382561,"byte_end":382564,"line_start":1088,"line_end":1088,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/setsockopt.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382565,"byte_end":382661,"line_start":1089,"line_end":1089,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382662,"byte_end":382665,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382666,"byte_end":382680,"line_start":1091,"line_end":1091,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382681,"byte_end":382684,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382685,"byte_end":382692,"line_start":1093,"line_end":1093,"column_start":1,"column_end":8}},{"value":"/ use nix::sys::socket::setsockopt;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382693,"byte_end":382730,"line_start":1094,"line_end":1094,"column_start":1,"column_end":38}},{"value":"/ use nix::sys::socket::sockopt::KeepAlive;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382731,"byte_end":382776,"line_start":1095,"line_end":1095,"column_start":1,"column_end":46}},{"value":"/ use std::net::TcpListener;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382777,"byte_end":382807,"line_start":1096,"line_end":1096,"column_start":1,"column_end":31}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382808,"byte_end":382843,"line_start":1097,"line_end":1097,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382844,"byte_end":382847,"line_start":1098,"line_end":1098,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"0.0.0.0:0\").unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382848,"byte_end":382907,"line_start":1099,"line_end":1099,"column_start":1,"column_end":60}},{"value":"/ let fd = listener.as_raw_fd();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382908,"byte_end":382942,"line_start":1100,"line_end":1100,"column_start":1,"column_end":35}},{"value":"/ let res = setsockopt(fd, KeepAlive, &true);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382943,"byte_end":382990,"line_start":1101,"line_end":1101,"column_start":1,"column_end":48}},{"value":"/ assert!(res.is_ok());","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382991,"byte_end":383016,"line_start":1102,"line_end":1102,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":383017,"byte_end":383024,"line_start":1103,"line_end":1103,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1307},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":383302,"byte_end":383313,"line_start":1111,"line_end":1111,"column_start":8,"column_end":19},"name":"getpeername","qualname":"::sys::socket::getpeername","value":"pub fn getpeername(RawFd) -> Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the address of the peer connected to the socket `fd`.","sig":null,"attributes":[{"value":"/ Get the address of the peer connected to the socket `fd`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":383131,"byte_end":383192,"line_start":1108,"line_end":1108,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":383193,"byte_end":383196,"line_start":1109,"line_end":1109,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getpeername.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":383197,"byte_end":383294,"line_start":1110,"line_end":1110,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":1308},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":383831,"byte_end":383842,"line_start":1127,"line_end":1127,"column_start":8,"column_end":19},"name":"getsockname","qualname":"::sys::socket::getsockname","value":"pub fn getsockname(RawFd) -> Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the current address to which the socket `fd` is bound.","sig":null,"attributes":[{"value":"/ Get the current address to which the socket `fd` is bound.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":383659,"byte_end":383721,"line_start":1124,"line_end":1124,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":383722,"byte_end":383725,"line_start":1125,"line_end":1125,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getsockname.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":383726,"byte_end":383823,"line_start":1126,"line_end":1126,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":1309},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":384630,"byte_end":384654,"line_start":1146,"line_end":1146,"column_start":15,"column_end":39},"name":"sockaddr_storage_to_addr","qualname":"::sys::socket::sockaddr_storage_to_addr","value":"pub unsafe fn sockaddr_storage_to_addr(&sockaddr_storage, usize)\n-> Result<SockAddr>","parent":null,"children":[],"decl_id":null,"docs":" Return the appropriate `SockAddr` type from a `sockaddr_storage` of a certain\n size.  In C this would usually be done by casting.  The `len` argument\n should be the number of bytes in the `sockaddr_storage` that are actually\n allocated and valid.  It must be at least as large as all the useful parts\n of the structure.  Note that in the case of a `sockaddr_un`, `len` need not\n include the terminating null.\n","sig":null,"attributes":[{"value":"/ Return the appropriate `SockAddr` type from a `sockaddr_storage` of a certain","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":384188,"byte_end":384269,"line_start":1140,"line_end":1140,"column_start":1,"column_end":82}},{"value":"/ size.  In C this would usually be done by casting.  The `len` argument","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":384270,"byte_end":384344,"line_start":1141,"line_end":1141,"column_start":1,"column_end":75}},{"value":"/ should be the number of bytes in the `sockaddr_storage` that are actually","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":384345,"byte_end":384422,"line_start":1142,"line_end":1142,"column_start":1,"column_end":78}},{"value":"/ allocated and valid.  It must be at least as large as all the useful parts","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":384423,"byte_end":384501,"line_start":1143,"line_end":1143,"column_start":1,"column_end":79}},{"value":"/ of the structure.  Note that in the case of a `sockaddr_un`, `len` need not","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":384502,"byte_end":384581,"line_start":1144,"line_end":1144,"column_start":1,"column_end":80}},{"value":"/ include the terminating null.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":384582,"byte_end":384615,"line_start":1145,"line_end":1145,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7538},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":385924,"byte_end":385928,"line_start":1182,"line_end":1182,"column_start":5,"column_end":9},"name":"Read","qualname":"::sys::socket::Shutdown::Read","value":"Shutdown::Read","parent":{"krate":0,"index":7537},"children":[],"decl_id":null,"docs":" Further receptions will be disallowed.\n","sig":null,"attributes":[{"value":"/ Further receptions will be disallowed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":385877,"byte_end":385919,"line_start":1181,"line_end":1181,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7540},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":385985,"byte_end":385990,"line_start":1184,"line_end":1184,"column_start":5,"column_end":10},"name":"Write","qualname":"::sys::socket::Shutdown::Write","value":"Shutdown::Write","parent":{"krate":0,"index":7537},"children":[],"decl_id":null,"docs":" Further  transmissions will be disallowed.\n","sig":null,"attributes":[{"value":"/ Further  transmissions will be disallowed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":385934,"byte_end":385980,"line_start":1183,"line_end":1183,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7542},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":386061,"byte_end":386065,"line_start":1186,"line_end":1186,"column_start":5,"column_end":9},"name":"Both","qualname":"::sys::socket::Shutdown::Both","value":"Shutdown::Both","parent":{"krate":0,"index":7537},"children":[],"decl_id":null,"docs":" Further receptions and transmissions will be disallowed.\n","sig":null,"attributes":[{"value":"/ Further receptions and transmissions will be disallowed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":385996,"byte_end":386056,"line_start":1185,"line_end":1185,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":7537},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":385862,"byte_end":385870,"line_start":1180,"line_end":1180,"column_start":10,"column_end":18},"name":"Shutdown","qualname":"::sys::socket::Shutdown","value":"pub enum Shutdown {\n\n    /// Further receptions will be disallowed.\n    Read,\n\n    /// Further  transmissions will be disallowed.\n    Write,\n\n    /// Further receptions and transmissions will be disallowed.\n    Both,\n}","parent":null,"children":[{"krate":0,"index":7538},{"krate":0,"index":7540},{"krate":0,"index":7542}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1311},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":386224,"byte_end":386232,"line_start":1192,"line_end":1192,"column_start":8,"column_end":16},"name":"shutdown","qualname":"::sys::socket::shutdown","value":"pub fn shutdown(RawFd, Shutdown) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down part of a full-duplex connection.","sig":null,"attributes":[{"value":"/ Shut down part of a full-duplex connection.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":386070,"byte_end":386117,"line_start":1189,"line_end":1189,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":386118,"byte_end":386121,"line_start":1190,"line_end":1190,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/9699919799/functions/shutdown.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":386122,"byte_end":386216,"line_start":1191,"line_end":1191,"column_start":1,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1313},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stat","qualname":"::sys::stat","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":10388},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":7558},{"krate":0,"index":7580},{"krate":0,"index":7576},{"krate":0,"index":7577},{"krate":0,"index":7573},{"krate":0,"index":7574},{"krate":0,"index":7571},{"krate":0,"index":7565},{"krate":0,"index":7563},{"krate":0,"index":7560},{"krate":0,"index":7581},{"krate":0,"index":7593},{"krate":0,"index":7595},{"krate":0,"index":7597},{"krate":0,"index":7599},{"krate":0,"index":7601},{"krate":0,"index":7615},{"krate":0,"index":7618},{"krate":0,"index":7620},{"krate":0,"index":7623},{"krate":0,"index":7625},{"krate":0,"index":7628},{"krate":0,"index":7630},{"krate":0,"index":7633},{"krate":0,"index":7635},{"krate":0,"index":7638},{"krate":0,"index":7641},{"krate":0,"index":7679},{"krate":0,"index":7701},{"krate":0,"index":7697},{"krate":0,"index":7698},{"krate":0,"index":7694},{"krate":0,"index":7695},{"krate":0,"index":7692},{"krate":0,"index":7686},{"krate":0,"index":7684},{"krate":0,"index":7681},{"krate":0,"index":7702},{"krate":0,"index":7721},{"krate":0,"index":7723},{"krate":0,"index":7725},{"krate":0,"index":7727},{"krate":0,"index":7729},{"krate":0,"index":7750},{"krate":0,"index":7753},{"krate":0,"index":7755},{"krate":0,"index":7758},{"krate":0,"index":7760},{"krate":0,"index":7763},{"krate":0,"index":7765},{"krate":0,"index":7768},{"krate":0,"index":7770},{"krate":0,"index":7773},{"krate":0,"index":7776},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1341},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":7835},{"krate":0,"index":7843},{"krate":0,"index":7842},{"krate":0,"index":7840},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1356},{"krate":0,"index":1360},{"krate":0,"index":7845},{"krate":0,"index":7853},{"krate":0,"index":7852},{"krate":0,"index":7850},{"krate":0,"index":1362}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7558},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456088,"byte_end":456093,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"SFlag","qualname":"::sys::stat::SFlag","value":"SFlag {  }","parent":null,"children":[{"krate":0,"index":7559}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7602},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456112,"byte_end":456119,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"S_IFIFO","qualname":"::sys::stat::SFlag::S_IFIFO","value":"SFlag","parent":{"krate":0,"index":7601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7603},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456129,"byte_end":456136,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"S_IFCHR","qualname":"::sys::stat::SFlag::S_IFCHR","value":"SFlag","parent":{"krate":0,"index":7601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7604},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456146,"byte_end":456153,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"S_IFDIR","qualname":"::sys::stat::SFlag::S_IFDIR","value":"SFlag","parent":{"krate":0,"index":7601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7605},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456163,"byte_end":456170,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"S_IFBLK","qualname":"::sys::stat::SFlag::S_IFBLK","value":"SFlag","parent":{"krate":0,"index":7601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7606},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456180,"byte_end":456187,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"S_IFREG","qualname":"::sys::stat::SFlag::S_IFREG","value":"SFlag","parent":{"krate":0,"index":7601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7607},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456197,"byte_end":456204,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"S_IFLNK","qualname":"::sys::stat::SFlag::S_IFLNK","value":"SFlag","parent":{"krate":0,"index":7601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7608},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456214,"byte_end":456222,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"name":"S_IFSOCK","qualname":"::sys::stat::SFlag::S_IFSOCK","value":"SFlag","parent":{"krate":0,"index":7601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7609},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456232,"byte_end":456238,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"name":"S_IFMT","qualname":"::sys::stat::SFlag::S_IFMT","value":"SFlag","parent":{"krate":0,"index":7601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7679},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456282,"byte_end":456286,"line_start":26,"line_end":26,"column_start":16,"column_end":20},"name":"Mode","qualname":"::sys::stat::Mode","value":"Mode {  }","parent":null,"children":[{"krate":0,"index":7680}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7730},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456305,"byte_end":456312,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"S_IRWXU","qualname":"::sys::stat::Mode::S_IRWXU","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7731},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456322,"byte_end":456329,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"S_IRUSR","qualname":"::sys::stat::Mode::S_IRUSR","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7732},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456339,"byte_end":456346,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"S_IWUSR","qualname":"::sys::stat::Mode::S_IWUSR","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7733},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456356,"byte_end":456363,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"S_IXUSR","qualname":"::sys::stat::Mode::S_IXUSR","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7734},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456373,"byte_end":456380,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"S_IRWXG","qualname":"::sys::stat::Mode::S_IRWXG","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7735},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456390,"byte_end":456397,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"name":"S_IRGRP","qualname":"::sys::stat::Mode::S_IRGRP","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7736},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456407,"byte_end":456414,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"name":"S_IWGRP","qualname":"::sys::stat::Mode::S_IWGRP","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7737},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456424,"byte_end":456431,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"S_IXGRP","qualname":"::sys::stat::Mode::S_IXGRP","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7738},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456441,"byte_end":456448,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"name":"S_IRWXO","qualname":"::sys::stat::Mode::S_IRWXO","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7739},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456458,"byte_end":456465,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"S_IROTH","qualname":"::sys::stat::Mode::S_IROTH","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7740},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456475,"byte_end":456482,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"S_IWOTH","qualname":"::sys::stat::Mode::S_IWOTH","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7741},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456492,"byte_end":456499,"line_start":38,"line_end":38,"column_start":9,"column_end":16},"name":"S_IXOTH","qualname":"::sys::stat::Mode::S_IXOTH","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7742},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456509,"byte_end":456516,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"name":"S_ISUID","qualname":"::sys::stat::Mode::S_ISUID","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7743},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456536,"byte_end":456543,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"name":"S_ISGID","qualname":"::sys::stat::Mode::S_ISGID","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7744},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456563,"byte_end":456570,"line_start":41,"line_end":41,"column_start":9,"column_end":16},"name":"S_ISVTX","qualname":"::sys::stat::Mode::S_ISVTX","value":"Mode","parent":{"krate":0,"index":7729},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1331},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456598,"byte_end":456603,"line_start":45,"line_end":45,"column_start":8,"column_end":13},"name":"mknod","qualname":"::sys::stat::mknod","value":"pub fn mknod<P: ?Sized + NixPath>(&P, SFlag, Mode, dev_t) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1334},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456917,"byte_end":456922,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"major","qualname":"::sys::stat::major","value":"pub fn major(dev_t) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":456882,"byte_end":456909,"line_start":55,"line_end":55,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1335},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":457048,"byte_end":457053,"line_start":62,"line_end":62,"column_start":8,"column_end":13},"name":"minor","qualname":"::sys::stat::minor","value":"pub fn minor(dev_t) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":457013,"byte_end":457040,"line_start":61,"line_end":61,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1336},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":457179,"byte_end":457186,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"makedev","qualname":"::sys::stat::makedev","value":"pub fn makedev(u64, u64) -> dev_t","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":457144,"byte_end":457171,"line_start":67,"line_end":67,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1337},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":457367,"byte_end":457372,"line_start":75,"line_end":75,"column_start":8,"column_end":13},"name":"umask","qualname":"::sys::stat::umask","value":"pub fn umask(Mode) -> Mode","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1338},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":457537,"byte_end":457541,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"stat","qualname":"::sys::stat::stat","value":"pub fn stat<P: ?Sized + NixPath>(&P) -> Result<FileStat>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1341},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":457838,"byte_end":457843,"line_start":93,"line_end":93,"column_start":8,"column_end":13},"name":"lstat","qualname":"::sys::stat::lstat","value":"pub fn lstat<P: ?Sized + NixPath>(&P) -> Result<FileStat>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1344},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":458141,"byte_end":458146,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"fstat","qualname":"::sys::stat::fstat","value":"pub fn fstat(RawFd) -> Result<FileStat>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1345},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":458349,"byte_end":458356,"line_start":115,"line_end":115,"column_start":8,"column_end":15},"name":"fstatat","qualname":"::sys::stat::fstatat","value":"pub fn fstatat<P: ?Sized + NixPath>(RawFd, &P, AtFlags) -> Result<FileStat>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1348},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":458895,"byte_end":458901,"line_start":131,"line_end":131,"column_start":8,"column_end":14},"name":"fchmod","qualname":"::sys::stat::fchmod","value":"pub fn fchmod(RawFd, Mode) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the file permission bits of the file specified by a file descriptor.","sig":null,"attributes":[{"value":"/ Change the file permission bits of the file specified by a file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":458695,"byte_end":458774,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":458775,"byte_end":458778,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":458779,"byte_end":458795,"line_start":128,"line_end":128,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":458796,"byte_end":458799,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ [fchmod(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fchmod.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":458800,"byte_end":458887,"line_start":130,"line_end":130,"column_start":1,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7836},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459138,"byte_end":459151,"line_start":140,"line_end":140,"column_start":5,"column_end":18},"name":"FollowSymlink","qualname":"::sys::stat::FchmodatFlags::FollowSymlink","value":"FchmodatFlags::FollowSymlink","parent":{"krate":0,"index":7835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7838},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459157,"byte_end":459172,"line_start":141,"line_end":141,"column_start":5,"column_end":20},"name":"NoFollowSymlink","qualname":"::sys::stat::FchmodatFlags::NoFollowSymlink","value":"FchmodatFlags::NoFollowSymlink","parent":{"krate":0,"index":7835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7835},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459118,"byte_end":459131,"line_start":139,"line_end":139,"column_start":10,"column_end":23},"name":"FchmodatFlags","qualname":"::sys::stat::FchmodatFlags","value":"pub enum FchmodatFlags { FollowSymlink, NoFollowSymlink, }","parent":null,"children":[{"krate":0,"index":7836},{"krate":0,"index":7838}],"decl_id":null,"docs":" Flags for `fchmodat` function.\n","sig":null,"attributes":[{"value":"/ Flags for `fchmodat` function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459044,"byte_end":459078,"line_start":137,"line_end":137,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1349},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459834,"byte_end":459842,"line_start":160,"line_end":160,"column_start":8,"column_end":16},"name":"fchmodat","qualname":"::sys::stat::fchmodat","value":"pub fn fchmodat<P: ?Sized + NixPath>(Option<RawFd>, &P, Mode, FchmodatFlags)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the file permission bits.","sig":null,"attributes":[{"value":"/ Change the file permission bits.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459177,"byte_end":459213,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459214,"byte_end":459217,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ The file to be changed is determined relative to the directory associated","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459218,"byte_end":459295,"line_start":146,"line_end":146,"column_start":1,"column_end":78}},{"value":"/ with the file descriptor `dirfd` or the current working directory","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459296,"byte_end":459365,"line_start":147,"line_end":147,"column_start":1,"column_end":70}},{"value":"/ if `dirfd` is `None`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459366,"byte_end":459391,"line_start":148,"line_end":148,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459392,"byte_end":459395,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If `flag` is `FchmodatFlags::NoFollowSymlink` and `path` names a symbolic link,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459396,"byte_end":459479,"line_start":150,"line_end":150,"column_start":1,"column_end":84}},{"value":"/ then the mode of the symbolic link is changed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459480,"byte_end":459530,"line_start":151,"line_end":151,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459531,"byte_end":459534,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ `fchmod(None, path, mode, FchmodatFlags::FollowSymlink)` is identical to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459535,"byte_end":459611,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ a call `libc::chmod(path, mode)`. That's why `chmod` is unimplemented","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459612,"byte_end":459685,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ in the `nix` crate.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459686,"byte_end":459709,"line_start":155,"line_end":155,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459710,"byte_end":459713,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459714,"byte_end":459730,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459731,"byte_end":459734,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [fchmodat(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fchmodat.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":459735,"byte_end":459826,"line_start":159,"line_end":159,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":1352},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460812,"byte_end":460818,"line_start":193,"line_end":193,"column_start":8,"column_end":14},"name":"utimes","qualname":"::sys::stat::utimes","value":"pub fn utimes<P: ?Sized + NixPath>(&P, &TimeVal, &TimeVal) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the access and modification times of a file.","sig":null,"attributes":[{"value":"/ Change the access and modification times of a file.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460413,"byte_end":460468,"line_start":183,"line_end":183,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460469,"byte_end":460472,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ `utimes(path, times)` is identical to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460473,"byte_end":460514,"line_start":185,"line_end":185,"column_start":1,"column_end":42}},{"value":"/ `utimensat(None, path, times, UtimensatFlags::FollowSymlink)`. The former","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460515,"byte_end":460592,"line_start":186,"line_end":186,"column_start":1,"column_end":78}},{"value":"/ is a deprecated API so prefer using the latter if the platforms you care","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460593,"byte_end":460669,"line_start":187,"line_end":187,"column_start":1,"column_end":77}},{"value":"/ about support it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460670,"byte_end":460691,"line_start":188,"line_end":188,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460692,"byte_end":460695,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460696,"byte_end":460712,"line_start":190,"line_end":190,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460713,"byte_end":460716,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [utimes(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/utimes.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":460717,"byte_end":460804,"line_start":192,"line_end":192,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":1356},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461734,"byte_end":461741,"line_start":218,"line_end":218,"column_start":8,"column_end":15},"name":"lutimes","qualname":"::sys::stat::lutimes","value":"pub fn lutimes<P: ?Sized + NixPath>(&P, &TimeVal, &TimeVal) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the access and modification times of a file without following symlinks.","sig":null,"attributes":[{"value":"/ Change the access and modification times of a file without following symlinks.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461114,"byte_end":461196,"line_start":202,"line_end":202,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461197,"byte_end":461200,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ `lutimes(path, times)` is identical to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461201,"byte_end":461243,"line_start":204,"line_end":204,"column_start":1,"column_end":43}},{"value":"/ `utimensat(None, path, times, UtimensatFlags::NoFollowSymlink)`. The former","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461244,"byte_end":461323,"line_start":205,"line_end":205,"column_start":1,"column_end":80}},{"value":"/ is a deprecated API so prefer using the latter if the platforms you care","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461324,"byte_end":461400,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ about support it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461401,"byte_end":461422,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461423,"byte_end":461426,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461427,"byte_end":461443,"line_start":209,"line_end":209,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461444,"byte_end":461447,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [lutimes(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/lutimes.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461448,"byte_end":461537,"line_start":211,"line_end":211,"column_start":1,"column_end":90}},{"value":"cfg(any(target_os = \"linux\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"macos\", target_os = \"freebsd\", target_os = \"netbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":461538,"byte_end":461726,"line_start":212,"line_end":217,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":1360},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462261,"byte_end":462269,"line_start":233,"line_end":233,"column_start":8,"column_end":16},"name":"futimens","qualname":"::sys::stat::futimens","value":"pub fn futimens(RawFd, &TimeSpec, &TimeSpec) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the access and modification times of the file specified by a file descriptor.","sig":null,"attributes":[{"value":"/ Change the access and modification times of the file specified by a file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462038,"byte_end":462126,"line_start":227,"line_end":227,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462127,"byte_end":462130,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462131,"byte_end":462147,"line_start":229,"line_end":229,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462148,"byte_end":462151,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ [futimens(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/futimens.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462152,"byte_end":462243,"line_start":231,"line_end":231,"column_start":1,"column_end":92}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462244,"byte_end":462253,"line_start":232,"line_end":232,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7846},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462595,"byte_end":462608,"line_start":243,"line_end":243,"column_start":5,"column_end":18},"name":"FollowSymlink","qualname":"::sys::stat::UtimensatFlags::FollowSymlink","value":"UtimensatFlags::FollowSymlink","parent":{"krate":0,"index":7845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7848},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462614,"byte_end":462629,"line_start":244,"line_end":244,"column_start":5,"column_end":20},"name":"NoFollowSymlink","qualname":"::sys::stat::UtimensatFlags::NoFollowSymlink","value":"UtimensatFlags::NoFollowSymlink","parent":{"krate":0,"index":7845},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7845},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462574,"byte_end":462588,"line_start":242,"line_end":242,"column_start":10,"column_end":24},"name":"UtimensatFlags","qualname":"::sys::stat::UtimensatFlags","value":"pub enum UtimensatFlags { FollowSymlink, NoFollowSymlink, }","parent":null,"children":[{"krate":0,"index":7846},{"krate":0,"index":7848}],"decl_id":null,"docs":" Flags for `utimensat` function.\n","sig":null,"attributes":[{"value":"/ Flags for `utimensat` function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462499,"byte_end":462534,"line_start":240,"line_end":240,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":1362},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":463351,"byte_end":463360,"line_start":263,"line_end":263,"column_start":8,"column_end":17},"name":"utimensat","qualname":"::sys::stat::utimensat","value":"pub fn utimensat<P: ?Sized +\n                 NixPath>(Option<RawFd>, &P, &TimeSpec, &TimeSpec,\n                          UtimensatFlags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the access and modification times of a file.","sig":null,"attributes":[{"value":"/ Change the access and modification times of a file.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462634,"byte_end":462689,"line_start":247,"line_end":247,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462690,"byte_end":462693,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ The file to be changed is determined relative to the directory associated","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462694,"byte_end":462771,"line_start":249,"line_end":249,"column_start":1,"column_end":78}},{"value":"/ with the file descriptor `dirfd` or the current working directory","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462772,"byte_end":462841,"line_start":250,"line_end":250,"column_start":1,"column_end":70}},{"value":"/ if `dirfd` is `None`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462842,"byte_end":462867,"line_start":251,"line_end":251,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462868,"byte_end":462871,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ If `flag` is `UtimensatFlags::NoFollowSymlink` and `path` names a symbolic link,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462872,"byte_end":462956,"line_start":253,"line_end":253,"column_start":1,"column_end":85}},{"value":"/ then the mode of the symbolic link is changed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":462957,"byte_end":463007,"line_start":254,"line_end":254,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":463008,"byte_end":463011,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ `utimensat(None, path, times, UtimensatFlags::FollowSymlink)` is identical to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":463012,"byte_end":463093,"line_start":256,"line_end":256,"column_start":1,"column_end":82}},{"value":"/ `utimes(path, times)`. The latter is a deprecated API so prefer using the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":463094,"byte_end":463171,"line_start":257,"line_end":257,"column_start":1,"column_end":78}},{"value":"/ former if the platforms you care about support it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":463172,"byte_end":463226,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":463227,"byte_end":463230,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":463231,"byte_end":463247,"line_start":260,"line_end":260,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":463248,"byte_end":463251,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ [utimensat(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/utimens.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/stat.rs","byte_start":463252,"byte_end":463343,"line_start":262,"line_end":262,"column_start":1,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":1366},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statfs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"statfs","qualname":"::sys::statfs","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statfs.rs","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1376}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160679,"byte_end":160755,"line_start":74,"line_end":74,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1373},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statfs.rs","byte_start":464114,"byte_end":464120,"line_start":6,"line_end":6,"column_start":8,"column_end":14},"name":"statfs","qualname":"::sys::statfs::statfs","value":"pub fn statfs<P: ?Sized + NixPath>(&P, &mut libc::statfs) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1376},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statfs.rs","byte_start":464365,"byte_end":464372,"line_start":15,"line_end":15,"column_start":8,"column_end":15},"name":"fstatfs","qualname":"::sys::statfs::fstatfs","value":"pub fn fstatfs<T: AsRawFd>(&T, &mut libc::statfs) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1378},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"statvfs","qualname":"::sys::statvfs","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":7855},{"krate":0,"index":7878},{"krate":0,"index":7877},{"krate":0,"index":7873},{"krate":0,"index":7874},{"krate":0,"index":7870},{"krate":0,"index":7871},{"krate":0,"index":7868},{"krate":0,"index":7862},{"krate":0,"index":7860},{"krate":0,"index":7857},{"krate":0,"index":7880},{"krate":0,"index":7896},{"krate":0,"index":7898},{"krate":0,"index":7900},{"krate":0,"index":7902},{"krate":0,"index":7904},{"krate":0,"index":7922},{"krate":0,"index":7925},{"krate":0,"index":7927},{"krate":0,"index":7930},{"krate":0,"index":7932},{"krate":0,"index":7935},{"krate":0,"index":7937},{"krate":0,"index":7940},{"krate":0,"index":7942},{"krate":0,"index":7945},{"krate":0,"index":7948},{"krate":0,"index":7998},{"krate":0,"index":8002},{"krate":0,"index":8001},{"krate":0,"index":1388},{"krate":0,"index":1400},{"krate":0,"index":1404}],"decl_id":null,"docs":" Get filesystem statistics","sig":null,"attributes":[{"value":"/ Get filesystem statistics","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":464549,"byte_end":464578,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":464579,"byte_end":464582,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [the man pages](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fstatvfs.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":464583,"byte_end":464679,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ for more details.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":464680,"byte_end":464701,"line_start":4,"line_end":4,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7855},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":464920,"byte_end":464927,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"FsFlags","qualname":"::sys::statvfs::FsFlags","value":"FsFlags {  }","parent":null,"children":[{"krate":0,"index":7856}],"decl_id":null,"docs":" File system mount Flags\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9446833,"byte_end":9446842,"line_start":405,"line_end":405,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":7905},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":464969,"byte_end":464978,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"ST_RDONLY","qualname":"::sys::statvfs::FsFlags::ST_RDONLY","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Read Only\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7906},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":465048,"byte_end":465057,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"name":"ST_NOSUID","qualname":"::sys::statvfs::FsFlags::ST_NOSUID","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Do not allow the set-uid bits to have an effect\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7907},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":465195,"byte_end":465203,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"name":"ST_NODEV","qualname":"::sys::statvfs::FsFlags::ST_NODEV","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Do not interpret character or block-special devices\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7908},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":465342,"byte_end":465351,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"name":"ST_NOEXEC","qualname":"::sys::statvfs::FsFlags::ST_NOEXEC","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Do not allow execution of binaries on the filesystem\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7909},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":465473,"byte_end":465487,"line_start":30,"line_end":30,"column_start":9,"column_end":23},"name":"ST_SYNCHRONOUS","qualname":"::sys::statvfs::FsFlags::ST_SYNCHRONOUS","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" All IO should be done synchronously\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7910},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":465613,"byte_end":465624,"line_start":33,"line_end":33,"column_start":9,"column_end":20},"name":"ST_MANDLOCK","qualname":"::sys::statvfs::FsFlags::ST_MANDLOCK","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Allow mandatory locks on the filesystem\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7911},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":465714,"byte_end":465722,"line_start":36,"line_end":36,"column_start":9,"column_end":17},"name":"ST_WRITE","qualname":"::sys::statvfs::FsFlags::ST_WRITE","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Write on file/directory/symlink\n","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7912},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":465797,"byte_end":465806,"line_start":39,"line_end":39,"column_start":9,"column_end":18},"name":"ST_APPEND","qualname":"::sys::statvfs::FsFlags::ST_APPEND","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Append-only file\n","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7913},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":465879,"byte_end":465891,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"name":"ST_IMMUTABLE","qualname":"::sys::statvfs::FsFlags::ST_IMMUTABLE","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Immutable file\n","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7914},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466013,"byte_end":466023,"line_start":45,"line_end":45,"column_start":9,"column_end":19},"name":"ST_NOATIME","qualname":"::sys::statvfs::FsFlags::ST_NOATIME","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Do not update access times on files\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7915},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466145,"byte_end":466158,"line_start":48,"line_end":48,"column_start":9,"column_end":22},"name":"ST_NODIRATIME","qualname":"::sys::statvfs::FsFlags::ST_NODIRATIME","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Do not update access times on files\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":7916},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466325,"byte_end":466336,"line_start":51,"line_end":51,"column_start":9,"column_end":20},"name":"ST_RELATIME","qualname":"::sys::statvfs::FsFlags::ST_RELATIME","value":"FsFlags","parent":{"krate":0,"index":7904},"children":[],"decl_id":null,"docs":" Update access time relative to modify/change time\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\",\n          all(target_os = \"linux\", not(target_env = \"musl\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":7998},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466660,"byte_end":466667,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"Statvfs","qualname":"::sys::statvfs::Statvfs","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around the POSIX `statvfs` struct","sig":null,"attributes":[{"value":"/ Wrapper around the POSIX `statvfs` struct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466348,"byte_end":466393,"line_start":55,"line_end":55,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466394,"byte_end":466397,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ For more information see the [`statvfs(3)` man pages](http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/sys_statvfs.h.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466398,"byte_end":466533,"line_start":57,"line_end":57,"column_start":1,"column_end":136}},{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466575,"byte_end":466585,"line_start":59,"line_end":59,"column_start":1,"column_end":11}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466609,"byte_end":466648,"line_start":61,"line_end":61,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466750,"byte_end":466760,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"block_size","qualname":"<Statvfs>::block_size","value":"pub fn block_size(&Self) -> c_ulong","parent":null,"children":[],"decl_id":null,"docs":" get the file system block size\n","sig":null,"attributes":[{"value":"/ get the file system block size","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466704,"byte_end":466738,"line_start":65,"line_end":65,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466873,"byte_end":466886,"line_start":71,"line_end":71,"column_start":12,"column_end":25},"name":"fragment_size","qualname":"<Statvfs>::fragment_size","value":"pub fn fragment_size(&Self) -> c_ulong","parent":null,"children":[],"decl_id":null,"docs":" Get the fundamental file system block size\n","sig":null,"attributes":[{"value":"/ Get the fundamental file system block size","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466815,"byte_end":466861,"line_start":70,"line_end":70,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467039,"byte_end":467045,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"blocks","qualname":"<Statvfs>::blocks","value":"pub fn blocks(&Self) -> libc::fsblkcnt_t","parent":null,"children":[],"decl_id":null,"docs":" Get the number of blocks.","sig":null,"attributes":[{"value":"/ Get the number of blocks.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466942,"byte_end":466971,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466976,"byte_end":466979,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Units are in units of `fragment_size()`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466984,"byte_end":467027,"line_start":77,"line_end":77,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467174,"byte_end":467185,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"blocks_free","qualname":"<Statvfs>::blocks_free","value":"pub fn blocks_free(&Self) -> libc::fsblkcnt_t","parent":null,"children":[],"decl_id":null,"docs":" Get the number of free blocks in the file system\n","sig":null,"attributes":[{"value":"/ Get the number of free blocks in the file system","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467110,"byte_end":467162,"line_start":82,"line_end":82,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467317,"byte_end":467333,"line_start":88,"line_end":88,"column_start":12,"column_end":28},"name":"blocks_available","qualname":"<Statvfs>::blocks_available","value":"pub fn blocks_available(&Self) -> libc::fsblkcnt_t","parent":null,"children":[],"decl_id":null,"docs":" Get the number of free blocks for unprivileged users\n","sig":null,"attributes":[{"value":"/ Get the number of free blocks for unprivileged users","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467249,"byte_end":467305,"line_start":87,"line_end":87,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467449,"byte_end":467454,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"name":"files","qualname":"<Statvfs>::files","value":"pub fn files(&Self) -> libc::fsfilcnt_t","parent":null,"children":[],"decl_id":null,"docs":" Get the total number of file inodes\n","sig":null,"attributes":[{"value":"/ Get the total number of file inodes","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467398,"byte_end":467437,"line_start":92,"line_end":92,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467568,"byte_end":467578,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"files_free","qualname":"<Statvfs>::files_free","value":"pub fn files_free(&Self) -> libc::fsfilcnt_t","parent":null,"children":[],"decl_id":null,"docs":" Get the number of free file inodes\n","sig":null,"attributes":[{"value":"/ Get the number of free file inodes","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467518,"byte_end":467556,"line_start":97,"line_end":97,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467715,"byte_end":467730,"line_start":103,"line_end":103,"column_start":12,"column_end":27},"name":"files_available","qualname":"<Statvfs>::files_available","value":"pub fn files_available(&Self) -> libc::fsfilcnt_t","parent":null,"children":[],"decl_id":null,"docs":" Get the number of free file inodes for unprivileged users\n","sig":null,"attributes":[{"value":"/ Get the number of free file inodes for unprivileged users","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467642,"byte_end":467703,"line_start":102,"line_end":102,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467833,"byte_end":467846,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"filesystem_id","qualname":"<Statvfs>::filesystem_id","value":"pub fn filesystem_id(&Self) -> c_ulong","parent":null,"children":[],"decl_id":null,"docs":" Get the file system id\n","sig":null,"attributes":[{"value":"/ Get the file system id","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467795,"byte_end":467821,"line_start":107,"line_end":107,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467935,"byte_end":467940,"line_start":113,"line_end":113,"column_start":12,"column_end":17},"name":"flags","qualname":"<Statvfs>::flags","value":"pub fn flags(&Self) -> FsFlags","parent":null,"children":[],"decl_id":null,"docs":" Get the mount flags\n","sig":null,"attributes":[{"value":"/ Get the mount flags","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":467900,"byte_end":467923,"line_start":112,"line_end":112,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":468070,"byte_end":468078,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"name_max","qualname":"<Statvfs>::name_max","value":"pub fn name_max(&Self) -> c_ulong","parent":null,"children":[],"decl_id":null,"docs":" Get the maximum filename length\n","sig":null,"attributes":[{"value":"/ Get the maximum filename length","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":468023,"byte_end":468058,"line_start":117,"line_end":117,"column_start":5,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1400},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":468205,"byte_end":468212,"line_start":125,"line_end":125,"column_start":8,"column_end":15},"name":"statvfs","qualname":"::sys::statvfs::statvfs","value":"pub fn statvfs<P: ?Sized + NixPath>(&P) -> Result<Statvfs>","parent":null,"children":[],"decl_id":null,"docs":" Return a `Statvfs` object with information about the `path`\n","sig":null,"attributes":[{"value":"/ Return a `Statvfs` object with information about the `path`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":468134,"byte_end":468197,"line_start":124,"line_end":124,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":1404},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":468582,"byte_end":468590,"line_start":138,"line_end":138,"column_start":8,"column_end":16},"name":"fstatvfs","qualname":"::sys::statvfs::fstatvfs","value":"pub fn fstatvfs<T: AsRawFd>(&T) -> Result<Statvfs>","parent":null,"children":[],"decl_id":null,"docs":" Return a `Statvfs` object with information about `fd`\n","sig":null,"attributes":[{"value":"/ Return a `Statvfs` object with information about `fd`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":468517,"byte_end":468574,"line_start":137,"line_end":137,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1407},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sysinfo","qualname":"::sys::sysinfo","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":8004},{"krate":0,"index":8009},{"krate":0,"index":8007},{"krate":0,"index":1417},{"krate":0,"index":1426}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160791,"byte_end":160846,"line_start":79,"line_end":79,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":8004},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469366,"byte_end":469373,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"SysInfo","qualname":"::sys::sysinfo::SysInfo","value":"","parent":null,"children":[],"decl_id":null,"docs":" System info structure returned by `sysinfo`.\n","sig":null,"attributes":[{"value":"/ System info structure returned by `sysinfo`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469207,"byte_end":469255,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469279,"byte_end":469318,"line_start":10,"line_end":10,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469587,"byte_end":469599,"line_start":18,"line_end":18,"column_start":12,"column_end":24},"name":"load_average","qualname":"<SysInfo>::load_average","value":"pub fn load_average(&Self) -> (f64, f64, f64)","parent":null,"children":[],"decl_id":null,"docs":" Returns the load average tuple.","sig":null,"attributes":[{"value":"/ Returns the load average tuple.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469410,"byte_end":469445,"line_start":14,"line_end":14,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469450,"byte_end":469453,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ The returned values represent the load average over time intervals of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469458,"byte_end":469531,"line_start":16,"line_end":16,"column_start":5,"column_end":78}},{"value":"/ 1, 5, and 15 minutes, respectively.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469536,"byte_end":469575,"line_start":17,"line_end":17,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469908,"byte_end":469914,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"uptime","qualname":"<SysInfo>::uptime","value":"pub fn uptime(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the time since system boot.\n","sig":null,"attributes":[{"value":"/ Returns the time since system boot.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469857,"byte_end":469896,"line_start":26,"line_end":26,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470095,"byte_end":470108,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"process_count","qualname":"<SysInfo>::process_count","value":"pub fn process_count(&Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Current number of processes.\n","sig":null,"attributes":[{"value":"/ Current number of processes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470051,"byte_end":470083,"line_start":32,"line_end":32,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470216,"byte_end":470226,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"swap_total","qualname":"<SysInfo>::swap_total","value":"pub fn swap_total(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of swap memory in Bytes.\n","sig":null,"attributes":[{"value":"/ Returns the amount of swap memory in Bytes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470157,"byte_end":470204,"line_start":37,"line_end":37,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470361,"byte_end":470370,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"swap_free","qualname":"<SysInfo>::swap_free","value":"pub fn swap_free(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of unused swap memory in Bytes.\n","sig":null,"attributes":[{"value":"/ Returns the amount of unused swap memory in Bytes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470295,"byte_end":470349,"line_start":42,"line_end":42,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470505,"byte_end":470514,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"ram_total","qualname":"<SysInfo>::ram_total","value":"pub fn ram_total(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total amount of installed RAM in Bytes.\n","sig":null,"attributes":[{"value":"/ Returns the total amount of installed RAM in Bytes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470438,"byte_end":470493,"line_start":47,"line_end":47,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470875,"byte_end":470885,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"ram_unused","qualname":"<SysInfo>::ram_unused","value":"pub fn ram_unused(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of completely unused RAM in Bytes.","sig":null,"attributes":[{"value":"/ Returns the amount of completely unused RAM in Bytes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470582,"byte_end":470639,"line_start":52,"line_end":52,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470644,"byte_end":470647,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ \"Unused\" in this context means that the RAM in neither actively used by","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470652,"byte_end":470727,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ programs, nor by the operating system as disk cache or buffer. It is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470732,"byte_end":470804,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ \"wasted\" RAM since it currently serves no purpose.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":470809,"byte_end":470863,"line_start":56,"line_end":56,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1426},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":471178,"byte_end":471185,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"sysinfo","qualname":"::sys::sysinfo::sysinfo","value":"pub fn sysinfo() -> Result<SysInfo>","parent":null,"children":[],"decl_id":null,"docs":" Returns system information.","sig":null,"attributes":[{"value":"/ Returns system information.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":471058,"byte_end":471089,"line_start":66,"line_end":66,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":471090,"byte_end":471093,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [See `sysinfo(2)`](http://man7.org/linux/man-pages/man2/sysinfo.2.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":471094,"byte_end":471170,"line_start":68,"line_end":68,"column_start":1,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":1428},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"termios","qualname":"::sys::termios","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":8010},{"krate":0,"index":8018},{"krate":0,"index":1442},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":8020},{"krate":0,"index":8130},{"krate":0,"index":8129},{"krate":0,"index":8127},{"krate":0,"index":8124},{"krate":0,"index":8125},{"krate":0,"index":8121},{"krate":0,"index":8119},{"krate":0,"index":8116},{"krate":0,"index":8117},{"krate":0,"index":8114},{"krate":0,"index":1452},{"krate":0,"index":8132},{"krate":0,"index":8158},{"krate":0,"index":8157},{"krate":0,"index":8155},{"krate":0,"index":8152},{"krate":0,"index":8153},{"krate":0,"index":8149},{"krate":0,"index":8147},{"krate":0,"index":8144},{"krate":0,"index":8145},{"krate":0,"index":8142},{"krate":0,"index":8160},{"krate":0,"index":8186},{"krate":0,"index":8185},{"krate":0,"index":8183},{"krate":0,"index":8180},{"krate":0,"index":8181},{"krate":0,"index":8177},{"krate":0,"index":8175},{"krate":0,"index":8172},{"krate":0,"index":8173},{"krate":0,"index":8170},{"krate":0,"index":8188},{"krate":0,"index":8217},{"krate":0,"index":8216},{"krate":0,"index":8214},{"krate":0,"index":8211},{"krate":0,"index":8212},{"krate":0,"index":8208},{"krate":0,"index":8206},{"krate":0,"index":8203},{"krate":0,"index":8204},{"krate":0,"index":8201},{"krate":0,"index":8219},{"krate":0,"index":8287},{"krate":0,"index":8286},{"krate":0,"index":8284},{"krate":0,"index":8281},{"krate":0,"index":8282},{"krate":0,"index":8278},{"krate":0,"index":8276},{"krate":0,"index":8273},{"krate":0,"index":8274},{"krate":0,"index":8271},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":8289},{"krate":0,"index":8311},{"krate":0,"index":8307},{"krate":0,"index":8308},{"krate":0,"index":8304},{"krate":0,"index":8305},{"krate":0,"index":8302},{"krate":0,"index":8296},{"krate":0,"index":8294},{"krate":0,"index":8291},{"krate":0,"index":8312},{"krate":0,"index":8330},{"krate":0,"index":8332},{"krate":0,"index":8334},{"krate":0,"index":8336},{"krate":0,"index":8338},{"krate":0,"index":8358},{"krate":0,"index":8361},{"krate":0,"index":8363},{"krate":0,"index":8366},{"krate":0,"index":8368},{"krate":0,"index":8371},{"krate":0,"index":8373},{"krate":0,"index":8376},{"krate":0,"index":8378},{"krate":0,"index":8381},{"krate":0,"index":8384},{"krate":0,"index":8440},{"krate":0,"index":8462},{"krate":0,"index":8458},{"krate":0,"index":8459},{"krate":0,"index":8455},{"krate":0,"index":8456},{"krate":0,"index":8453},{"krate":0,"index":8447},{"krate":0,"index":8445},{"krate":0,"index":8442},{"krate":0,"index":8463},{"krate":0,"index":8500},{"krate":0,"index":8502},{"krate":0,"index":8504},{"krate":0,"index":8506},{"krate":0,"index":8508},{"krate":0,"index":8545},{"krate":0,"index":8548},{"krate":0,"index":8550},{"krate":0,"index":8553},{"krate":0,"index":8555},{"krate":0,"index":8558},{"krate":0,"index":8560},{"krate":0,"index":8563},{"krate":0,"index":8565},{"krate":0,"index":8568},{"krate":0,"index":8571},{"krate":0,"index":8680},{"krate":0,"index":8702},{"krate":0,"index":8698},{"krate":0,"index":8699},{"krate":0,"index":8695},{"krate":0,"index":8696},{"krate":0,"index":8693},{"krate":0,"index":8687},{"krate":0,"index":8685},{"krate":0,"index":8682},{"krate":0,"index":8703},{"krate":0,"index":8731},{"krate":0,"index":8733},{"krate":0,"index":8735},{"krate":0,"index":8737},{"krate":0,"index":8739},{"krate":0,"index":8761},{"krate":0,"index":8764},{"krate":0,"index":8766},{"krate":0,"index":8769},{"krate":0,"index":8771},{"krate":0,"index":8774},{"krate":0,"index":8776},{"krate":0,"index":8779},{"krate":0,"index":8781},{"krate":0,"index":8784},{"krate":0,"index":8787},{"krate":0,"index":8857},{"krate":0,"index":8879},{"krate":0,"index":8875},{"krate":0,"index":8876},{"krate":0,"index":8872},{"krate":0,"index":8873},{"krate":0,"index":8870},{"krate":0,"index":8864},{"krate":0,"index":8862},{"krate":0,"index":8859},{"krate":0,"index":8880},{"krate":0,"index":8901},{"krate":0,"index":8903},{"krate":0,"index":8905},{"krate":0,"index":8907},{"krate":0,"index":8909},{"krate":0,"index":8930},{"krate":0,"index":8933},{"krate":0,"index":8935},{"krate":0,"index":8938},{"krate":0,"index":8940},{"krate":0,"index":8943},{"krate":0,"index":8945},{"krate":0,"index":8948},{"krate":0,"index":8950},{"krate":0,"index":8953},{"krate":0,"index":8956},{"krate":0,"index":9017},{"krate":0,"index":9018},{"krate":0,"index":9019},{"krate":0,"index":9020},{"krate":0,"index":9021},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498}],"decl_id":null,"docs":" An interface for controlling asynchronous communication ports","sig":null,"attributes":[{"value":"/ An interface for controlling asynchronous communication ports","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471376,"byte_end":471441,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471442,"byte_end":471445,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This interface provides a safe wrapper around the termios subsystem defined by POSIX. The","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471446,"byte_end":471539,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ underlying types are all implemented in libc for most platforms and either wrapped in safer","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471540,"byte_end":471635,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ types here or exported directly.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471636,"byte_end":471672,"line_start":5,"line_end":5,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471673,"byte_end":471676,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ If you are unfamiliar with the `termios` API, you should first read the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471677,"byte_end":471752,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ [API documentation](http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/termios.h.html) and","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471753,"byte_end":471853,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"/ then come back to understand how `nix` safely wraps it.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471854,"byte_end":471913,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471914,"byte_end":471917,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It should be noted that this API incurs some runtime overhead above the base `libc` definitions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":471918,"byte_end":472018,"line_start":11,"line_end":11,"column_start":1,"column_end":101}},{"value":"/ As this interface is not used with high-bandwidth information, this should be fine in most","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472019,"byte_end":472113,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ cases. The primary cost when using this API is that the `Termios` datatype here duplicates the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472114,"byte_end":472212,"line_start":13,"line_end":13,"column_start":1,"column_end":99}},{"value":"/ standard fields of the underlying `termios` struct and uses safe type wrappers for those fields.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472213,"byte_end":472313,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ This means that when crossing the FFI interface to the underlying C library, data is first","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472314,"byte_end":472408,"line_start":15,"line_end":15,"column_start":1,"column_end":95}},{"value":"/ copied into the underlying `termios` struct, then the operation is done, and the data is copied","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472409,"byte_end":472508,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ back (with additional sanity checking) into the safe wrapper types. The `termios` struct is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472509,"byte_end":472604,"line_start":17,"line_end":17,"column_start":1,"column_end":96}},{"value":"/ relatively small across all platforms (on the order of 32-64 bytes).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472605,"byte_end":472677,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472678,"byte_end":472681,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The following examples highlight some of the API use cases such that users coming from using C","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472682,"byte_end":472780,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ or reading the standard documentation will understand how to use the safe API exposed here.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472781,"byte_end":472876,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472877,"byte_end":472880,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Example disabling processing of the end-of-file control character:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472881,"byte_end":472951,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472952,"byte_end":472955,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472956,"byte_end":472963,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # use self::nix::sys::termios::SpecialCharacterIndices::VEOF;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":472964,"byte_end":473029,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # use self::nix::sys::termios::{_POSIX_VDISABLE, Termios};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473030,"byte_end":473092,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ # let mut termios = unsafe { Termios::default_uninit() };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473093,"byte_end":473154,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/ termios.control_chars[VEOF as usize] = _POSIX_VDISABLE;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473155,"byte_end":473214,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473215,"byte_end":473222,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473223,"byte_end":473226,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The flags within `Termios` are defined as bitfields using the `bitflags` crate. This provides","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473227,"byte_end":473324,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ an interface for working with bitfields that is similar to working with the raw unsigned","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473325,"byte_end":473417,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ integer types but offers type safety because of the internal checking that values will always","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473418,"byte_end":473515,"line_start":34,"line_end":34,"column_start":1,"column_end":98}},{"value":"/ be a valid combination of the defined flags.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473516,"byte_end":473564,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473565,"byte_end":473568,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ An example showing some of the basic operations for interacting with the control flags:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473569,"byte_end":473660,"line_start":37,"line_end":37,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473661,"byte_end":473664,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473665,"byte_end":473672,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # use self::nix::sys::termios::{ControlFlags, Termios};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473673,"byte_end":473732,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"/ # let mut termios = unsafe { Termios::default_uninit() };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473733,"byte_end":473794,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/ termios.control_flags & ControlFlags::CSIZE == ControlFlags::CS5;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473795,"byte_end":473864,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ termios.control_flags |= ControlFlags::CS5;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473865,"byte_end":473912,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473913,"byte_end":473920,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473921,"byte_end":473924,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Baud rates","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473925,"byte_end":473941,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473942,"byte_end":473945,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This API is not consistent across platforms when it comes to `BaudRate`: Android and Linux both","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":473946,"byte_end":474045,"line_start":48,"line_end":48,"column_start":1,"column_end":100}},{"value":"/ only support the rates specified by the `BaudRate` enum through their termios API while the BSDs","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474046,"byte_end":474146,"line_start":49,"line_end":49,"column_start":1,"column_end":101}},{"value":"/ support arbitrary baud rates as the values of the `BaudRate` enum constants are the same integer","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474147,"byte_end":474247,"line_start":50,"line_end":50,"column_start":1,"column_end":101}},{"value":"/ value of the constant (`B9600` == `9600`). Therefore the `nix::termios` API uses the following","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474248,"byte_end":474346,"line_start":51,"line_end":51,"column_start":1,"column_end":99}},{"value":"/ conventions:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474347,"byte_end":474363,"line_start":52,"line_end":52,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474364,"byte_end":474367,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ * `cfgetispeed()` - Returns `u32` on BSDs, `BaudRate` on Android/Linux","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474368,"byte_end":474442,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ * `cfgetospeed()` - Returns `u32` on BSDs, `BaudRate` on Android/Linux","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474443,"byte_end":474517,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/ * `cfsetispeed()` - Takes `u32` or `BaudRate` on BSDs, `BaudRate` on Android/Linux","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474518,"byte_end":474604,"line_start":56,"line_end":56,"column_start":1,"column_end":87}},{"value":"/ * `cfsetospeed()` - Takes `u32` or `BaudRate` on BSDs, `BaudRate` on Android/Linux","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474605,"byte_end":474691,"line_start":57,"line_end":57,"column_start":1,"column_end":87}},{"value":"/ * `cfsetspeed()` - Takes `u32` or `BaudRate` on BSDs, `BaudRate` on Android/Linux","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474692,"byte_end":474777,"line_start":58,"line_end":58,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474778,"byte_end":474781,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The most common use case of specifying a baud rate using the enum will work the same across","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474782,"byte_end":474877,"line_start":60,"line_end":60,"column_start":1,"column_end":96}},{"value":"/ platforms:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474878,"byte_end":474892,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474893,"byte_end":474896,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474897,"byte_end":474908,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474909,"byte_end":474945,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/ # use nix::sys::termios::{BaudRate, cfsetispeed, cfsetospeed, cfsetspeed, Termios};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":474946,"byte_end":475033,"line_start":65,"line_end":65,"column_start":1,"column_end":88}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475034,"byte_end":475051,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/ # let mut t = unsafe { Termios::default_uninit() };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475052,"byte_end":475107,"line_start":67,"line_end":67,"column_start":1,"column_end":56}},{"value":"/ cfsetispeed(&mut t, BaudRate::B9600);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475108,"byte_end":475149,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ cfsetospeed(&mut t, BaudRate::B9600);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475150,"byte_end":475191,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/ cfsetspeed(&mut t, BaudRate::B9600);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475192,"byte_end":475232,"line_start":70,"line_end":70,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475233,"byte_end":475240,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475241,"byte_end":475248,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475249,"byte_end":475252,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Additionally round-tripping baud rates is consistent across platforms:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475253,"byte_end":475327,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475328,"byte_end":475331,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475332,"byte_end":475343,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475344,"byte_end":475367,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/ # use nix::sys::termios::{BaudRate, cfgetispeed, cfgetospeed, cfsetispeed, cfsetspeed, Termios};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475368,"byte_end":475468,"line_start":78,"line_end":78,"column_start":1,"column_end":101}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475469,"byte_end":475486,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/ # let mut t = unsafe { Termios::default_uninit() };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475487,"byte_end":475542,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/ # cfsetspeed(&mut t, BaudRate::B9600);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475543,"byte_end":475585,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/ let speed = cfgetispeed(&t);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475586,"byte_end":475618,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/ assert!(speed == cfgetospeed(&t));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475619,"byte_end":475657,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/ cfsetispeed(&mut t, speed);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475658,"byte_end":475689,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475690,"byte_end":475697,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475698,"byte_end":475705,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475706,"byte_end":475709,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ On non-BSDs, `cfgetispeed()` and `cfgetospeed()` both return a `BaudRate`:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475710,"byte_end":475788,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":475789,"byte_end":475792,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476296,"byte_end":476319,"line_start":97,"line_end":97,"column_start":1,"column_end":24}},{"value":"/ # use nix::sys::termios::{BaudRate, cfgetispeed, cfgetospeed, cfsetspeed, Termios};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476320,"byte_end":476407,"line_start":98,"line_end":98,"column_start":1,"column_end":88}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476408,"byte_end":476425,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"/ # let mut t = unsafe { Termios::default_uninit() };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476426,"byte_end":476481,"line_start":100,"line_end":100,"column_start":1,"column_end":56}},{"value":"/ # cfsetspeed(&mut t, BaudRate::B9600);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476482,"byte_end":476524,"line_start":101,"line_end":101,"column_start":1,"column_end":43}},{"value":"/ assert!(cfgetispeed(&t) == BaudRate::B9600);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476525,"byte_end":476573,"line_start":102,"line_end":102,"column_start":1,"column_end":49}},{"value":"/ assert!(cfgetospeed(&t) == BaudRate::B9600);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476574,"byte_end":476622,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476623,"byte_end":476630,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476631,"byte_end":476638,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476639,"byte_end":476642,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ But on the BSDs, `cfgetispeed()` and `cfgetospeed()` both return `u32`s:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476643,"byte_end":476719,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":476720,"byte_end":476723,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477227,"byte_end":477250,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ # use nix::sys::termios::{BaudRate, cfgetispeed, cfgetospeed, cfsetspeed, Termios};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477251,"byte_end":477338,"line_start":117,"line_end":117,"column_start":1,"column_end":88}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477339,"byte_end":477356,"line_start":118,"line_end":118,"column_start":1,"column_end":18}},{"value":"/ # let mut t = unsafe { Termios::default_uninit() };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477357,"byte_end":477412,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/ # cfsetspeed(&mut t, 9600u32);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477413,"byte_end":477447,"line_start":120,"line_end":120,"column_start":1,"column_end":35}},{"value":"/ assert!(cfgetispeed(&t) == 9600u32);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477448,"byte_end":477488,"line_start":121,"line_end":121,"column_start":1,"column_end":41}},{"value":"/ assert!(cfgetospeed(&t) == 9600u32);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477489,"byte_end":477529,"line_start":122,"line_end":122,"column_start":1,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477530,"byte_end":477537,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477538,"byte_end":477545,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477546,"byte_end":477549,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ It's trivial to convert from a `BaudRate` to a `u32` on BSDs:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477550,"byte_end":477615,"line_start":126,"line_end":126,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":477616,"byte_end":477619,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478123,"byte_end":478146,"line_start":135,"line_end":135,"column_start":1,"column_end":24}},{"value":"/ # use nix::sys::termios::{BaudRate, cfgetispeed, cfsetspeed, Termios};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478147,"byte_end":478221,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478222,"byte_end":478239,"line_start":137,"line_end":137,"column_start":1,"column_end":18}},{"value":"/ # let mut t = unsafe { Termios::default_uninit() };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478240,"byte_end":478295,"line_start":138,"line_end":138,"column_start":1,"column_end":56}},{"value":"/ # cfsetspeed(&mut t, 9600u32);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478296,"byte_end":478330,"line_start":139,"line_end":139,"column_start":1,"column_end":35}},{"value":"/ assert!(cfgetispeed(&t) == BaudRate::B9600.into());","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478331,"byte_end":478386,"line_start":140,"line_end":140,"column_start":1,"column_end":56}},{"value":"/ assert!(u32::from(BaudRate::B9600) == 9600u32);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478387,"byte_end":478438,"line_start":141,"line_end":141,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478439,"byte_end":478446,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478447,"byte_end":478454,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478455,"byte_end":478458,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ And on BSDs you can specify arbitrary baud rates (**note** this depends on hardware support)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478459,"byte_end":478555,"line_start":145,"line_end":145,"column_start":1,"column_end":97}},{"value":"/ by specifying baud rates directly using `u32`s:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478556,"byte_end":478607,"line_start":146,"line_end":146,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":478608,"byte_end":478611,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479115,"byte_end":479138,"line_start":155,"line_end":155,"column_start":1,"column_end":24}},{"value":"/ # use nix::sys::termios::{cfsetispeed, cfsetospeed, cfsetspeed, Termios};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479139,"byte_end":479216,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479217,"byte_end":479234,"line_start":157,"line_end":157,"column_start":1,"column_end":18}},{"value":"/ # let mut t = unsafe { Termios::default_uninit() };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479235,"byte_end":479290,"line_start":158,"line_end":158,"column_start":1,"column_end":56}},{"value":"/ cfsetispeed(&mut t, 9600u32);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479291,"byte_end":479324,"line_start":159,"line_end":159,"column_start":1,"column_end":34}},{"value":"/ cfsetospeed(&mut t, 9600u32);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479325,"byte_end":479358,"line_start":160,"line_end":160,"column_start":1,"column_end":34}},{"value":"/ cfsetspeed(&mut t, 9600u32);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479359,"byte_end":479391,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479392,"byte_end":479399,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479400,"byte_end":479407,"line_start":163,"line_end":163,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8010},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479936,"byte_end":479943,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"Termios","qualname":"::sys::termios::Termios","value":"Termios { input_flags, output_flags, control_flags, local_flags, control_chars }","parent":null,"children":[{"krate":0,"index":8011},{"krate":0,"index":8012},{"krate":0,"index":8013},{"krate":0,"index":8014},{"krate":0,"index":8015},{"krate":0,"index":8016}],"decl_id":null,"docs":" Stores settings for the termios API","sig":null,"attributes":[{"value":"/ Stores settings for the termios API","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479593,"byte_end":479632,"line_start":174,"line_end":174,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479633,"byte_end":479636,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around the `libc::termios` struct that provides a safe interface for the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479637,"byte_end":479731,"line_start":176,"line_end":176,"column_start":1,"column_end":95}},{"value":"/ standard fields. The only safe way to obtain an instance of this struct is to extract it from","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479732,"byte_end":479829,"line_start":177,"line_end":177,"column_start":1,"column_end":98}},{"value":"/ an open port using `tcgetattr()`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479830,"byte_end":479867,"line_start":178,"line_end":178,"column_start":1,"column_end":38}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479885,"byte_end":479924,"line_start":180,"line_end":180,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":8012},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480052,"byte_end":480063,"line_start":184,"line_end":184,"column_start":9,"column_end":20},"name":"input_flags","qualname":"::sys::termios::Termios::input_flags","value":"sys::termios::InputFlags","parent":{"krate":0,"index":8010},"children":[],"decl_id":null,"docs":" Input mode flags (see `termios.c_iflag` documentation)\n","sig":null,"attributes":[{"value":"/ Input mode flags (see `termios.c_iflag` documentation)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":479985,"byte_end":480043,"line_start":183,"line_end":183,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8013},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480149,"byte_end":480161,"line_start":186,"line_end":186,"column_start":9,"column_end":21},"name":"output_flags","qualname":"::sys::termios::Termios::output_flags","value":"sys::termios::OutputFlags","parent":{"krate":0,"index":8010},"children":[],"decl_id":null,"docs":" Output mode flags (see `termios.c_oflag` documentation)\n","sig":null,"attributes":[{"value":"/ Output mode flags (see `termios.c_oflag` documentation)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480081,"byte_end":480140,"line_start":185,"line_end":185,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":8014},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480249,"byte_end":480262,"line_start":188,"line_end":188,"column_start":9,"column_end":22},"name":"control_flags","qualname":"::sys::termios::Termios::control_flags","value":"sys::termios::ControlFlags","parent":{"krate":0,"index":8010},"children":[],"decl_id":null,"docs":" Control mode flags (see `termios.c_cflag` documentation)\n","sig":null,"attributes":[{"value":"/ Control mode flags (see `termios.c_cflag` documentation)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480180,"byte_end":480240,"line_start":187,"line_end":187,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":8015},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480349,"byte_end":480360,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"name":"local_flags","qualname":"::sys::termios::Termios::local_flags","value":"sys::termios::LocalFlags","parent":{"krate":0,"index":8010},"children":[],"decl_id":null,"docs":" Local mode flags (see `termios.c_lflag` documentation)\n","sig":null,"attributes":[{"value":"/ Local mode flags (see `termios.c_lflag` documentation)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480282,"byte_end":480340,"line_start":189,"line_end":189,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8016},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480444,"byte_end":480457,"line_start":192,"line_end":192,"column_start":9,"column_end":22},"name":"control_chars","qualname":"::sys::termios::Termios::control_chars","value":"[u8; _]","parent":{"krate":0,"index":8010},"children":[],"decl_id":null,"docs":" Control characters (see `termios.c_cc` documentation)\n","sig":null,"attributes":[{"value":"/ Control characters (see `termios.c_cc` documentation)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480378,"byte_end":480435,"line_start":191,"line_end":191,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":481269,"byte_end":481285,"line_start":215,"line_end":215,"column_start":12,"column_end":28},"name":"get_libc_termios","qualname":"<Termios>::get_libc_termios","value":"pub fn get_libc_termios(&Self) -> Ref<, libc::termios>","parent":null,"children":[],"decl_id":null,"docs":" Exposes an immutable reference to the underlying `libc::termios` data structure.","sig":null,"attributes":[{"value":"/ Exposes an immutable reference to the underlying `libc::termios` data structure.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480501,"byte_end":480585,"line_start":196,"line_end":196,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480590,"byte_end":480593,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This can be used for interfacing with other FFI functions like:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480598,"byte_end":480665,"line_start":198,"line_end":198,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480670,"byte_end":480673,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480678,"byte_end":480689,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/ # extern crate libc;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480694,"byte_end":480718,"line_start":201,"line_end":201,"column_start":5,"column_end":29}},{"value":"/ # extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480723,"byte_end":480746,"line_start":202,"line_end":202,"column_start":5,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480751,"byte_end":480768,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/ # use nix::sys::termios::Termios;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480773,"byte_end":480810,"line_start":204,"line_end":204,"column_start":5,"column_end":42}},{"value":"/ # let mut termios = unsafe { Termios::default_uninit() };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480815,"byte_end":480876,"line_start":205,"line_end":205,"column_start":5,"column_end":66}},{"value":"/ let inner_termios = termios.get_libc_termios();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480881,"byte_end":480932,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/ unsafe { libc::cfgetispeed(&*inner_termios) };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480937,"byte_end":480987,"line_start":207,"line_end":207,"column_start":5,"column_end":55}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480992,"byte_end":480999,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":481004,"byte_end":481011,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":481016,"byte_end":481019,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ There is no public API exposed for functions that modify the underlying `libc::termios`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":481024,"byte_end":481115,"line_start":211,"line_end":211,"column_start":5,"column_end":96}},{"value":"/ data because it requires additional work to maintain type safety.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":481120,"byte_end":481189,"line_start":212,"line_end":212,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":482934,"byte_end":482948,"line_start":252,"line_end":252,"column_start":19,"column_end":33},"name":"default_uninit","qualname":"<Termios>::default_uninit","value":"pub unsafe fn default_uninit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for easily creating new `Termios` structs that will be overwritten with real data.","sig":null,"attributes":[{"value":"/ Allows for easily creating new `Termios` structs that will be overwritten with real data.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":482631,"byte_end":482724,"line_start":246,"line_end":246,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":482729,"byte_end":482732,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This should only be used when the inner libc::termios struct will be overwritten before it's","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":482737,"byte_end":482833,"line_start":248,"line_end":248,"column_start":5,"column_end":101}},{"value":"/ read.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":482838,"byte_end":482847,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":483408,"byte_end":483422,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"update_wrapper","qualname":"<Termios>::update_wrapper","value":"pub fn update_wrapper(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Updates the wrapper values from the internal `libc::termios` data structure.\n","sig":null,"attributes":[{"value":"/ Updates the wrapper values from the internal `libc::termios` data structure.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":483297,"byte_end":483377,"line_start":263,"line_end":263,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8021},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":484961,"byte_end":484963,"line_start":304,"line_end":304,"column_start":9,"column_end":11},"name":"B0","qualname":"::sys::termios::BaudRate::B0","value":"BaudRate::B0","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8024},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":484973,"byte_end":484976,"line_start":305,"line_end":305,"column_start":9,"column_end":12},"name":"B50","qualname":"::sys::termios::BaudRate::B50","value":"BaudRate::B50","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8027},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":484986,"byte_end":484989,"line_start":306,"line_end":306,"column_start":9,"column_end":12},"name":"B75","qualname":"::sys::termios::BaudRate::B75","value":"BaudRate::B75","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8030},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":484999,"byte_end":485003,"line_start":307,"line_end":307,"column_start":9,"column_end":13},"name":"B110","qualname":"::sys::termios::BaudRate::B110","value":"BaudRate::B110","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8033},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485013,"byte_end":485017,"line_start":308,"line_end":308,"column_start":9,"column_end":13},"name":"B134","qualname":"::sys::termios::BaudRate::B134","value":"BaudRate::B134","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8036},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485027,"byte_end":485031,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"name":"B150","qualname":"::sys::termios::BaudRate::B150","value":"BaudRate::B150","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8039},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485041,"byte_end":485045,"line_start":310,"line_end":310,"column_start":9,"column_end":13},"name":"B200","qualname":"::sys::termios::BaudRate::B200","value":"BaudRate::B200","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8042},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485055,"byte_end":485059,"line_start":311,"line_end":311,"column_start":9,"column_end":13},"name":"B300","qualname":"::sys::termios::BaudRate::B300","value":"BaudRate::B300","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8045},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485069,"byte_end":485073,"line_start":312,"line_end":312,"column_start":9,"column_end":13},"name":"B600","qualname":"::sys::termios::BaudRate::B600","value":"BaudRate::B600","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8048},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485083,"byte_end":485088,"line_start":313,"line_end":313,"column_start":9,"column_end":14},"name":"B1200","qualname":"::sys::termios::BaudRate::B1200","value":"BaudRate::B1200","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8051},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485098,"byte_end":485103,"line_start":314,"line_end":314,"column_start":9,"column_end":14},"name":"B1800","qualname":"::sys::termios::BaudRate::B1800","value":"BaudRate::B1800","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8054},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485113,"byte_end":485118,"line_start":315,"line_end":315,"column_start":9,"column_end":14},"name":"B2400","qualname":"::sys::termios::BaudRate::B2400","value":"BaudRate::B2400","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8057},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485128,"byte_end":485133,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"B4800","qualname":"::sys::termios::BaudRate::B4800","value":"BaudRate::B4800","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8060},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485356,"byte_end":485361,"line_start":323,"line_end":323,"column_start":9,"column_end":14},"name":"B9600","qualname":"::sys::termios::BaudRate::B9600","value":"BaudRate::B9600","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8063},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485585,"byte_end":485591,"line_start":330,"line_end":330,"column_start":9,"column_end":15},"name":"B19200","qualname":"::sys::termios::BaudRate::B19200","value":"BaudRate::B19200","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8066},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485815,"byte_end":485821,"line_start":337,"line_end":337,"column_start":9,"column_end":15},"name":"B38400","qualname":"::sys::termios::BaudRate::B38400","value":"BaudRate::B38400","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8069},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":485831,"byte_end":485837,"line_start":338,"line_end":338,"column_start":9,"column_end":15},"name":"B57600","qualname":"::sys::termios::BaudRate::B57600","value":"BaudRate::B57600","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8072},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":486061,"byte_end":486068,"line_start":345,"line_end":345,"column_start":9,"column_end":16},"name":"B115200","qualname":"::sys::termios::BaudRate::B115200","value":"BaudRate::B115200","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8075},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":486078,"byte_end":486085,"line_start":346,"line_end":346,"column_start":9,"column_end":16},"name":"B230400","qualname":"::sys::termios::BaudRate::B230400","value":"BaudRate::B230400","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8078},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":486258,"byte_end":486265,"line_start":351,"line_end":351,"column_start":9,"column_end":16},"name":"B460800","qualname":"::sys::termios::BaudRate::B460800","value":"BaudRate::B460800","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"linux\",\n          target_os = \"netbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8081},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":486339,"byte_end":486346,"line_start":353,"line_end":353,"column_start":9,"column_end":16},"name":"B500000","qualname":"::sys::termios::BaudRate::B500000","value":"BaudRate::B500000","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8084},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":486420,"byte_end":486427,"line_start":355,"line_end":355,"column_start":9,"column_end":16},"name":"B576000","qualname":"::sys::termios::BaudRate::B576000","value":"BaudRate::B576000","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8087},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":486600,"byte_end":486607,"line_start":360,"line_end":360,"column_start":9,"column_end":16},"name":"B921600","qualname":"::sys::termios::BaudRate::B921600","value":"BaudRate::B921600","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"linux\",\n          target_os = \"netbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8090},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":486681,"byte_end":486689,"line_start":362,"line_end":362,"column_start":9,"column_end":17},"name":"B1000000","qualname":"::sys::termios::BaudRate::B1000000","value":"BaudRate::B1000000","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8093},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":486763,"byte_end":486771,"line_start":364,"line_end":364,"column_start":9,"column_end":17},"name":"B1152000","qualname":"::sys::termios::BaudRate::B1152000","value":"BaudRate::B1152000","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8096},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":486845,"byte_end":486853,"line_start":366,"line_end":366,"column_start":9,"column_end":17},"name":"B1500000","qualname":"::sys::termios::BaudRate::B1500000","value":"BaudRate::B1500000","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8099},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":486927,"byte_end":486935,"line_start":368,"line_end":368,"column_start":9,"column_end":17},"name":"B2000000","qualname":"::sys::termios::BaudRate::B2000000","value":"BaudRate::B2000000","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8102},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":487044,"byte_end":487052,"line_start":370,"line_end":370,"column_start":9,"column_end":17},"name":"B2500000","qualname":"::sys::termios::BaudRate::B2500000","value":"BaudRate::B2500000","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\",\n          all(target_os = \"linux\", not(target_arch = \"sparc64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8105},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":487161,"byte_end":487169,"line_start":372,"line_end":372,"column_start":9,"column_end":17},"name":"B3000000","qualname":"::sys::termios::BaudRate::B3000000","value":"BaudRate::B3000000","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\",\n          all(target_os = \"linux\", not(target_arch = \"sparc64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8108},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":487278,"byte_end":487286,"line_start":374,"line_end":374,"column_start":9,"column_end":17},"name":"B3500000","qualname":"::sys::termios::BaudRate::B3500000","value":"BaudRate::B3500000","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\",\n          all(target_os = \"linux\", not(target_arch = \"sparc64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8111},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":487395,"byte_end":487403,"line_start":376,"line_end":376,"column_start":9,"column_end":17},"name":"B4000000","qualname":"::sys::termios::BaudRate::B4000000","value":"BaudRate::B4000000","parent":{"krate":0,"index":8020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\",\n          all(target_os = \"linux\", not(target_arch = \"sparc64\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":8020},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":484942,"byte_end":484950,"line_start":303,"line_end":303,"column_start":14,"column_end":22},"name":"BaudRate","qualname":"::sys::termios::BaudRate","value":"pub enum BaudRate {\n    B0 = ,\n    B50 = ,\n    B75 = ,\n    B110 = ,\n    B134 = ,\n    B150 = ,\n    B200 = ,\n    B300 = ,\n    B600 = ,\n    B1200 = ,\n    B1800 = ,\n    B2400 = ,\n    B4800 = ,\n    B9600 = ,\n    B19200 = ,\n    B38400 = ,\n    B57600 = ,\n    B115200 = ,\n    B230400 = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os =\n              \"linux\", target_os = \"netbsd\"))]\n    B460800 = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    B500000 = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    B576000 = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os =\n              \"linux\", target_os = \"netbsd\"))]\n    B921600 = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    B1000000 = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    B1152000 = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    B1500000 = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"linux\"))]\n    B2000000 = ,\n\n    #[cfg(any(target_os = \"android\",\n              all(target_os = \"linux\", not(target_arch = \"sparc64\"))))]\n    B2500000 = ,\n\n    #[cfg(any(target_os = \"android\",\n              all(target_os = \"linux\", not(target_arch = \"sparc64\"))))]\n    B3000000 = ,\n\n    #[cfg(any(target_os = \"android\",\n              all(target_os = \"linux\", not(target_arch = \"sparc64\"))))]\n    B3500000 = ,\n\n    #[cfg(any(target_os = \"android\",\n              all(target_os = \"linux\", not(target_arch = \"sparc64\"))))]\n    B4000000 = ,\n}","parent":null,"children":[{"krate":0,"index":8021},{"krate":0,"index":8024},{"krate":0,"index":8027},{"krate":0,"index":8030},{"krate":0,"index":8033},{"krate":0,"index":8036},{"krate":0,"index":8039},{"krate":0,"index":8042},{"krate":0,"index":8045},{"krate":0,"index":8048},{"krate":0,"index":8051},{"krate":0,"index":8054},{"krate":0,"index":8057},{"krate":0,"index":8060},{"krate":0,"index":8063},{"krate":0,"index":8066},{"krate":0,"index":8069},{"krate":0,"index":8072},{"krate":0,"index":8075},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":8084},{"krate":0,"index":8087},{"krate":0,"index":8090},{"krate":0,"index":8093},{"krate":0,"index":8096},{"krate":0,"index":8099},{"krate":0,"index":8102},{"krate":0,"index":8105},{"krate":0,"index":8108},{"krate":0,"index":8111}],"decl_id":null,"docs":" Baud rates supported by the system.","sig":null,"attributes":[{"value":"repr(u32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":484917,"byte_end":484926,"line_start":302,"line_end":302,"column_start":100,"column_end":109}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8133},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":492643,"byte_end":492650,"line_start":501,"line_end":501,"column_start":9,"column_end":16},"name":"TCSANOW","qualname":"::sys::termios::SetArg::TCSANOW","value":"SetArg::TCSANOW","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" The change will occur immediately\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8136},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":492724,"byte_end":492733,"line_start":503,"line_end":503,"column_start":9,"column_end":18},"name":"TCSADRAIN","qualname":"::sys::termios::SetArg::TCSADRAIN","value":"SetArg::TCSADRAIN","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" The change occurs after all output has been written\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8139},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":492813,"byte_end":492822,"line_start":505,"line_end":505,"column_start":9,"column_end":18},"name":"TCSAFLUSH","qualname":"::sys::termios::SetArg::TCSAFLUSH","value":"SetArg::TCSAFLUSH","parent":{"krate":0,"index":8132},"children":[],"decl_id":null,"docs":" Same as `TCSADRAIN`, but will also flush the input buffer\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8132},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":492580,"byte_end":492586,"line_start":499,"line_end":499,"column_start":14,"column_end":20},"name":"SetArg","qualname":"::sys::termios::SetArg","value":"pub enum SetArg {\n\n    #[doc = r\" The change will occur immediately\"]\n    TCSANOW = ,\n\n    #[doc = r\" The change occurs after all output has been written\"]\n    TCSADRAIN = ,\n\n    #[doc = r\" Same as `TCSADRAIN`, but will also flush the input buffer\"]\n    TCSAFLUSH = ,\n}","parent":null,"children":[{"krate":0,"index":8133},{"krate":0,"index":8136},{"krate":0,"index":8139}],"decl_id":null,"docs":" Specify when a port configuration change should occur.","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8161},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":493072,"byte_end":493080,"line_start":516,"line_end":516,"column_start":9,"column_end":17},"name":"TCIFLUSH","qualname":"::sys::termios::FlushArg::TCIFLUSH","value":"FlushArg::TCIFLUSH","parent":{"krate":0,"index":8160},"children":[],"decl_id":null,"docs":" Flush data that was received but not read\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8164},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":493141,"byte_end":493149,"line_start":518,"line_end":518,"column_start":9,"column_end":17},"name":"TCOFLUSH","qualname":"::sys::termios::FlushArg::TCOFLUSH","value":"FlushArg::TCOFLUSH","parent":{"krate":0,"index":8160},"children":[],"decl_id":null,"docs":" Flush data written but not transmitted\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8167},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":493238,"byte_end":493247,"line_start":520,"line_end":520,"column_start":9,"column_end":18},"name":"TCIOFLUSH","qualname":"::sys::termios::FlushArg::TCIOFLUSH","value":"FlushArg::TCIOFLUSH","parent":{"krate":0,"index":8160},"children":[],"decl_id":null,"docs":" Flush both received data not read and written data not transmitted\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8160},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":492999,"byte_end":493007,"line_start":514,"line_end":514,"column_start":14,"column_end":22},"name":"FlushArg","qualname":"::sys::termios::FlushArg","value":"pub enum FlushArg {\n\n    #[doc = r\" Flush data that was received but not read\"]\n    TCIFLUSH = ,\n\n    #[doc = r\" Flush data written but not transmitted\"]\n    TCOFLUSH = ,\n\n    #[doc =\n      r\" Flush both received data not read and written data not transmitted\"]\n    TCIOFLUSH = ,\n}","parent":null,"children":[{"krate":0,"index":8161},{"krate":0,"index":8164},{"krate":0,"index":8167}],"decl_id":null,"docs":" Specify a combination of the input and output buffers to flush","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8189},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":493459,"byte_end":493465,"line_start":531,"line_end":531,"column_start":9,"column_end":15},"name":"TCOOFF","qualname":"::sys::termios::FlowArg::TCOOFF","value":"FlowArg::TCOOFF","parent":{"krate":0,"index":8188},"children":[],"decl_id":null,"docs":" Suspend transmission\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8192},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":493507,"byte_end":493512,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"name":"TCOON","qualname":"::sys::termios::FlowArg::TCOON","value":"FlowArg::TCOON","parent":{"krate":0,"index":8188},"children":[],"decl_id":null,"docs":" Resume transmission\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8195},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":493610,"byte_end":493616,"line_start":535,"line_end":535,"column_start":9,"column_end":15},"name":"TCIOFF","qualname":"::sys::termios::FlowArg::TCIOFF","value":"FlowArg::TCIOFF","parent":{"krate":0,"index":8188},"children":[],"decl_id":null,"docs":" Transmit a STOP character, which should disable a connected terminal device\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8198},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":493717,"byte_end":493722,"line_start":537,"line_end":537,"column_start":9,"column_end":14},"name":"TCION","qualname":"::sys::termios::FlowArg::TCION","value":"FlowArg::TCION","parent":{"krate":0,"index":8188},"children":[],"decl_id":null,"docs":" Transmit a START character, which should re-enable a connected terminal device\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8188},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":493408,"byte_end":493415,"line_start":529,"line_end":529,"column_start":14,"column_end":21},"name":"FlowArg","qualname":"::sys::termios::FlowArg","value":"pub enum FlowArg {\n\n    #[doc = r\" Suspend transmission\"]\n    TCOOFF = ,\n\n    #[doc = r\" Resume transmission\"]\n    TCOON = ,\n\n    #[doc =\n      r\" Transmit a STOP character, which should disable a connected terminal device\"]\n    TCIOFF = ,\n\n    #[doc =\n      r\" Transmit a START character, which should re-enable a connected terminal device\"]\n    TCION = ,\n}","parent":null,"children":[{"krate":0,"index":8189},{"krate":0,"index":8192},{"krate":0,"index":8195},{"krate":0,"index":8198}],"decl_id":null,"docs":" Specify how transmission flow should be altered","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8220},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":493935,"byte_end":493943,"line_start":546,"line_end":546,"column_start":9,"column_end":17},"name":"VDISCARD","qualname":"::sys::termios::SpecialCharacterIndices::VDISCARD","value":"SpecialCharacterIndices::VDISCARD","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8223},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494167,"byte_end":494171,"line_start":553,"line_end":553,"column_start":9,"column_end":13},"name":"VEOF","qualname":"::sys::termios::SpecialCharacterIndices::VEOF","value":"SpecialCharacterIndices::VEOF","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8226},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494181,"byte_end":494185,"line_start":554,"line_end":554,"column_start":9,"column_end":13},"name":"VEOL","qualname":"::sys::termios::SpecialCharacterIndices::VEOL","value":"SpecialCharacterIndices::VEOL","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8229},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494195,"byte_end":494200,"line_start":555,"line_end":555,"column_start":9,"column_end":14},"name":"VEOL2","qualname":"::sys::termios::SpecialCharacterIndices::VEOL2","value":"SpecialCharacterIndices::VEOL2","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8232},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494210,"byte_end":494216,"line_start":556,"line_end":556,"column_start":9,"column_end":15},"name":"VERASE","qualname":"::sys::termios::SpecialCharacterIndices::VERASE","value":"SpecialCharacterIndices::VERASE","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8235},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494311,"byte_end":494316,"line_start":559,"line_end":559,"column_start":9,"column_end":14},"name":"VINTR","qualname":"::sys::termios::SpecialCharacterIndices::VINTR","value":"SpecialCharacterIndices::VINTR","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8238},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494326,"byte_end":494331,"line_start":560,"line_end":560,"column_start":9,"column_end":14},"name":"VKILL","qualname":"::sys::termios::SpecialCharacterIndices::VKILL","value":"SpecialCharacterIndices::VKILL","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8241},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494341,"byte_end":494347,"line_start":561,"line_end":561,"column_start":9,"column_end":15},"name":"VLNEXT","qualname":"::sys::termios::SpecialCharacterIndices::VLNEXT","value":"SpecialCharacterIndices::VLNEXT","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8244},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494428,"byte_end":494432,"line_start":563,"line_end":563,"column_start":9,"column_end":13},"name":"VMIN","qualname":"::sys::termios::SpecialCharacterIndices::VMIN","value":"SpecialCharacterIndices::VMIN","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(all(target_os = \"linux\", target_arch = \"sparc64\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8247},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494442,"byte_end":494447,"line_start":564,"line_end":564,"column_start":9,"column_end":14},"name":"VQUIT","qualname":"::sys::termios::SpecialCharacterIndices::VQUIT","value":"SpecialCharacterIndices::VQUIT","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8250},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494457,"byte_end":494465,"line_start":565,"line_end":565,"column_start":9,"column_end":17},"name":"VREPRINT","qualname":"::sys::termios::SpecialCharacterIndices::VREPRINT","value":"SpecialCharacterIndices::VREPRINT","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8253},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494475,"byte_end":494481,"line_start":566,"line_end":566,"column_start":9,"column_end":15},"name":"VSTART","qualname":"::sys::termios::SpecialCharacterIndices::VSTART","value":"SpecialCharacterIndices::VSTART","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8256},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494706,"byte_end":494711,"line_start":573,"line_end":573,"column_start":9,"column_end":14},"name":"VSTOP","qualname":"::sys::termios::SpecialCharacterIndices::VSTOP","value":"SpecialCharacterIndices::VSTOP","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8259},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494721,"byte_end":494726,"line_start":574,"line_end":574,"column_start":9,"column_end":14},"name":"VSUSP","qualname":"::sys::termios::SpecialCharacterIndices::VSUSP","value":"SpecialCharacterIndices::VSUSP","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8262},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494772,"byte_end":494777,"line_start":576,"line_end":576,"column_start":9,"column_end":14},"name":"VSWTC","qualname":"::sys::termios::SpecialCharacterIndices::VSWTC","value":"SpecialCharacterIndices::VSWTC","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8265},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494910,"byte_end":494915,"line_start":580,"line_end":580,"column_start":9,"column_end":14},"name":"VTIME","qualname":"::sys::termios::SpecialCharacterIndices::VTIME","value":"SpecialCharacterIndices::VTIME","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(all(target_os = \"linux\", target_arch = \"sparc64\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":11715,"byte_end":11723,"line_start":164,"line_end":164,"column_start":17,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8268},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":494925,"byte_end":494932,"line_start":581,"line_end":581,"column_start":9,"column_end":16},"name":"VWERASE","qualname":"::sys::termios::SpecialCharacterIndices::VWERASE","value":"SpecialCharacterIndices::VWERASE","parent":{"krate":0,"index":8219},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8219},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":493901,"byte_end":493924,"line_start":545,"line_end":545,"column_start":14,"column_end":37},"name":"SpecialCharacterIndices","qualname":"::sys::termios::SpecialCharacterIndices","value":"pub enum SpecialCharacterIndices {\n    VDISCARD = ,\n    VEOF = ,\n    VEOL = ,\n    VEOL2 = ,\n    VERASE = ,\n    VINTR = ,\n    VKILL = ,\n    VLNEXT = ,\n\n    #[cfg(not(all(target_os = \"linux\", target_arch = \"sparc64\")))]\n    VMIN = ,\n    VQUIT = ,\n    VREPRINT = ,\n    VSTART = ,\n    VSTOP = ,\n    VSUSP = ,\n\n    #[cfg(target_os = \"linux\")]\n    VSWTC = ,\n\n    #[cfg(not(all(target_os = \"linux\", target_arch = \"sparc64\")))]\n    VTIME = ,\n    VWERASE = ,\n}","parent":null,"children":[{"krate":0,"index":8220},{"krate":0,"index":8223},{"krate":0,"index":8226},{"krate":0,"index":8229},{"krate":0,"index":8232},{"krate":0,"index":8235},{"krate":0,"index":8238},{"krate":0,"index":8241},{"krate":0,"index":8244},{"krate":0,"index":8247},{"krate":0,"index":8250},{"krate":0,"index":8253},{"krate":0,"index":8256},{"krate":0,"index":8259},{"krate":0,"index":8262},{"krate":0,"index":8265},{"krate":0,"index":8268}],"decl_id":null,"docs":" Indices into the `termios.c_cc` array for special characters.\n","sig":null,"attributes":[{"value":"repr(usize)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/macros.rs","byte_start":13565,"byte_end":13573,"line_start":250,"line_end":250,"column_start":27,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8289},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495341,"byte_end":495351,"line_start":598,"line_end":598,"column_start":16,"column_end":26},"name":"InputFlags","qualname":"::sys::termios::InputFlags","value":"InputFlags {  }","parent":null,"children":[{"krate":0,"index":8290}],"decl_id":null,"docs":" Flags for configuring the input mode of a terminal\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8339},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495372,"byte_end":495378,"line_start":599,"line_end":599,"column_start":9,"column_end":15},"name":"IGNBRK","qualname":"::sys::termios::InputFlags::IGNBRK","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8340},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495388,"byte_end":495394,"line_start":600,"line_end":600,"column_start":9,"column_end":15},"name":"BRKINT","qualname":"::sys::termios::InputFlags::BRKINT","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8341},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495404,"byte_end":495410,"line_start":601,"line_end":601,"column_start":9,"column_end":15},"name":"IGNPAR","qualname":"::sys::termios::InputFlags::IGNPAR","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8342},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495420,"byte_end":495426,"line_start":602,"line_end":602,"column_start":9,"column_end":15},"name":"PARMRK","qualname":"::sys::termios::InputFlags::PARMRK","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8343},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495436,"byte_end":495441,"line_start":603,"line_end":603,"column_start":9,"column_end":14},"name":"INPCK","qualname":"::sys::termios::InputFlags::INPCK","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8344},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495451,"byte_end":495457,"line_start":604,"line_end":604,"column_start":9,"column_end":15},"name":"ISTRIP","qualname":"::sys::termios::InputFlags::ISTRIP","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8345},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495467,"byte_end":495472,"line_start":605,"line_end":605,"column_start":9,"column_end":14},"name":"INLCR","qualname":"::sys::termios::InputFlags::INLCR","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8346},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495482,"byte_end":495487,"line_start":606,"line_end":606,"column_start":9,"column_end":14},"name":"IGNCR","qualname":"::sys::termios::InputFlags::IGNCR","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8347},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495497,"byte_end":495502,"line_start":607,"line_end":607,"column_start":9,"column_end":14},"name":"ICRNL","qualname":"::sys::termios::InputFlags::ICRNL","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8348},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495512,"byte_end":495516,"line_start":608,"line_end":608,"column_start":9,"column_end":13},"name":"IXON","qualname":"::sys::termios::InputFlags::IXON","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8349},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495526,"byte_end":495531,"line_start":609,"line_end":609,"column_start":9,"column_end":14},"name":"IXOFF","qualname":"::sys::termios::InputFlags::IXOFF","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8350},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495541,"byte_end":495546,"line_start":610,"line_end":610,"column_start":9,"column_end":14},"name":"IXANY","qualname":"::sys::termios::InputFlags::IXANY","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8351},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495556,"byte_end":495563,"line_start":611,"line_end":611,"column_start":9,"column_end":16},"name":"IMAXBEL","qualname":"::sys::termios::InputFlags::IMAXBEL","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8352},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495658,"byte_end":495663,"line_start":613,"line_end":613,"column_start":9,"column_end":14},"name":"IUTF8","qualname":"::sys::termios::InputFlags::IUTF8","value":"InputFlags","parent":{"krate":0,"index":8338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":8440},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495766,"byte_end":495777,"line_start":619,"line_end":619,"column_start":16,"column_end":27},"name":"OutputFlags","qualname":"::sys::termios::OutputFlags","value":"OutputFlags {  }","parent":null,"children":[{"krate":0,"index":8441}],"decl_id":null,"docs":" Flags for configuring the output mode of a terminal\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8509},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495798,"byte_end":495803,"line_start":620,"line_end":620,"column_start":9,"column_end":14},"name":"OPOST","qualname":"::sys::termios::OutputFlags::OPOST","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8510},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495975,"byte_end":495980,"line_start":625,"line_end":625,"column_start":9,"column_end":14},"name":"OLCUC","qualname":"::sys::termios::OutputFlags::OLCUC","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"linux\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8511},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":495990,"byte_end":495995,"line_start":626,"line_end":626,"column_start":9,"column_end":14},"name":"ONLCR","qualname":"::sys::termios::OutputFlags::ONLCR","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8512},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":496005,"byte_end":496010,"line_start":627,"line_end":627,"column_start":9,"column_end":14},"name":"OCRNL","qualname":"::sys::termios::OutputFlags::OCRNL","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8513},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":496032,"byte_end":496037,"line_start":628,"line_end":628,"column_start":9,"column_end":14},"name":"ONOCR","qualname":"::sys::termios::OutputFlags::ONOCR","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8514},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":496059,"byte_end":496065,"line_start":629,"line_end":629,"column_start":9,"column_end":15},"name":"ONLRET","qualname":"::sys::termios::OutputFlags::ONLRET","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8515},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":496284,"byte_end":496289,"line_start":635,"line_end":635,"column_start":9,"column_end":14},"name":"OFILL","qualname":"::sys::termios::OutputFlags::OFILL","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8516},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":496508,"byte_end":496513,"line_start":641,"line_end":641,"column_start":9,"column_end":14},"name":"OFDEL","qualname":"::sys::termios::OutputFlags::OFDEL","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8517},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":496732,"byte_end":496735,"line_start":647,"line_end":647,"column_start":9,"column_end":12},"name":"NL0","qualname":"::sys::termios::OutputFlags::NL0","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8518},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":496954,"byte_end":496957,"line_start":653,"line_end":653,"column_start":9,"column_end":12},"name":"NL1","qualname":"::sys::termios::OutputFlags::NL1","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8519},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":497176,"byte_end":497179,"line_start":659,"line_end":659,"column_start":9,"column_end":12},"name":"CR0","qualname":"::sys::termios::OutputFlags::CR0","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8520},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":497398,"byte_end":497401,"line_start":665,"line_end":665,"column_start":9,"column_end":12},"name":"CR1","qualname":"::sys::termios::OutputFlags::CR1","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8521},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":497620,"byte_end":497623,"line_start":671,"line_end":671,"column_start":9,"column_end":12},"name":"CR2","qualname":"::sys::termios::OutputFlags::CR2","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8522},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":497842,"byte_end":497845,"line_start":677,"line_end":677,"column_start":9,"column_end":12},"name":"CR3","qualname":"::sys::termios::OutputFlags::CR3","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8523},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":498105,"byte_end":498109,"line_start":684,"line_end":684,"column_start":9,"column_end":13},"name":"TAB0","qualname":"::sys::termios::OutputFlags::TAB0","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"haiku\",\n          target_os = \"ios\", target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8524},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":498328,"byte_end":498332,"line_start":690,"line_end":690,"column_start":9,"column_end":13},"name":"TAB1","qualname":"::sys::termios::OutputFlags::TAB1","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8525},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":498551,"byte_end":498555,"line_start":696,"line_end":696,"column_start":9,"column_end":13},"name":"TAB2","qualname":"::sys::termios::OutputFlags::TAB2","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8526},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":498815,"byte_end":498819,"line_start":703,"line_end":703,"column_start":9,"column_end":13},"name":"TAB3","qualname":"::sys::termios::OutputFlags::TAB3","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"haiku\",\n          target_os = \"ios\", target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8527},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":498905,"byte_end":498910,"line_start":705,"line_end":705,"column_start":9,"column_end":14},"name":"XTABS","qualname":"::sys::termios::OutputFlags::XTABS","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8528},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":499117,"byte_end":499120,"line_start":711,"line_end":711,"column_start":9,"column_end":12},"name":"BS0","qualname":"::sys::termios::OutputFlags::BS0","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8529},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":499339,"byte_end":499342,"line_start":717,"line_end":717,"column_start":9,"column_end":12},"name":"BS1","qualname":"::sys::termios::OutputFlags::BS1","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8530},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":499561,"byte_end":499564,"line_start":723,"line_end":723,"column_start":9,"column_end":12},"name":"VT0","qualname":"::sys::termios::OutputFlags::VT0","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8531},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":499783,"byte_end":499786,"line_start":729,"line_end":729,"column_start":9,"column_end":12},"name":"VT1","qualname":"::sys::termios::OutputFlags::VT1","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8532},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":500005,"byte_end":500008,"line_start":735,"line_end":735,"column_start":9,"column_end":12},"name":"FF0","qualname":"::sys::termios::OutputFlags::FF0","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8533},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":500227,"byte_end":500230,"line_start":741,"line_end":741,"column_start":9,"column_end":12},"name":"FF1","qualname":"::sys::termios::OutputFlags::FF1","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8534},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":501149,"byte_end":501154,"line_start":765,"line_end":765,"column_start":9,"column_end":14},"name":"NLDLY","qualname":"::sys::termios::OutputFlags::NLDLY","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8535},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":501430,"byte_end":501435,"line_start":771,"line_end":771,"column_start":9,"column_end":14},"name":"CRDLY","qualname":"::sys::termios::OutputFlags::CRDLY","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8536},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":501695,"byte_end":501701,"line_start":778,"line_end":778,"column_start":9,"column_end":15},"name":"TABDLY","qualname":"::sys::termios::OutputFlags::TABDLY","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"haiku\",\n          target_os = \"ios\", target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8537},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":501920,"byte_end":501925,"line_start":784,"line_end":784,"column_start":9,"column_end":14},"name":"BSDLY","qualname":"::sys::termios::OutputFlags::BSDLY","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8538},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502144,"byte_end":502149,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"name":"VTDLY","qualname":"::sys::termios::OutputFlags::VTDLY","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8539},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502368,"byte_end":502373,"line_start":796,"line_end":796,"column_start":9,"column_end":14},"name":"FFDLY","qualname":"::sys::termios::OutputFlags::FFDLY","value":"OutputFlags","parent":{"krate":0,"index":8508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"haiku\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":8680},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502485,"byte_end":502497,"line_start":802,"line_end":802,"column_start":16,"column_end":28},"name":"ControlFlags","qualname":"::sys::termios::ControlFlags","value":"ControlFlags {  }","parent":null,"children":[{"krate":0,"index":8681}],"decl_id":null,"docs":" Flags for setting the control mode of a terminal\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8740},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502778,"byte_end":502781,"line_start":810,"line_end":810,"column_start":9,"column_end":12},"name":"CS5","qualname":"::sys::termios::ControlFlags::CS5","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8741},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502791,"byte_end":502794,"line_start":811,"line_end":811,"column_start":9,"column_end":12},"name":"CS6","qualname":"::sys::termios::ControlFlags::CS6","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8742},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502804,"byte_end":502807,"line_start":812,"line_end":812,"column_start":9,"column_end":12},"name":"CS7","qualname":"::sys::termios::ControlFlags::CS7","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8743},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502817,"byte_end":502820,"line_start":813,"line_end":813,"column_start":9,"column_end":12},"name":"CS8","qualname":"::sys::termios::ControlFlags::CS8","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8744},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502830,"byte_end":502836,"line_start":814,"line_end":814,"column_start":9,"column_end":15},"name":"CSTOPB","qualname":"::sys::termios::ControlFlags::CSTOPB","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8745},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502846,"byte_end":502851,"line_start":815,"line_end":815,"column_start":9,"column_end":14},"name":"CREAD","qualname":"::sys::termios::ControlFlags::CREAD","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8746},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502861,"byte_end":502867,"line_start":816,"line_end":816,"column_start":9,"column_end":15},"name":"PARENB","qualname":"::sys::termios::ControlFlags::PARENB","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8747},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502877,"byte_end":502883,"line_start":817,"line_end":817,"column_start":9,"column_end":15},"name":"PARODD","qualname":"::sys::termios::ControlFlags::PARODD","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8748},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502893,"byte_end":502898,"line_start":818,"line_end":818,"column_start":9,"column_end":14},"name":"HUPCL","qualname":"::sys::termios::ControlFlags::HUPCL","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8749},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502908,"byte_end":502914,"line_start":819,"line_end":819,"column_start":9,"column_end":15},"name":"CLOCAL","qualname":"::sys::termios::ControlFlags::CLOCAL","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8750},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":502924,"byte_end":502931,"line_start":820,"line_end":820,"column_start":9,"column_end":16},"name":"CRTSCTS","qualname":"::sys::termios::ControlFlags::CRTSCTS","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8751},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":503005,"byte_end":503010,"line_start":822,"line_end":822,"column_start":9,"column_end":14},"name":"CBAUD","qualname":"::sys::termios::ControlFlags::CBAUD","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8752},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":503116,"byte_end":503122,"line_start":824,"line_end":824,"column_start":9,"column_end":15},"name":"CMSPAR","qualname":"::sys::termios::ControlFlags::CMSPAR","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\",\n          all(target_os = \"linux\", not(target_arch = \"mips\"))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8753},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":503303,"byte_end":503309,"line_start":828,"line_end":828,"column_start":9,"column_end":15},"name":"CIBAUD","qualname":"::sys::termios::ControlFlags::CIBAUD","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\",\n          all(target_os = \"linux\",\n              not(any(target_arch = \"powerpc\", target_arch = \"powerpc64\")))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8754},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":503383,"byte_end":503390,"line_start":830,"line_end":830,"column_start":9,"column_end":16},"name":"CBAUDEX","qualname":"::sys::termios::ControlFlags::CBAUDEX","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":8755},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504604,"byte_end":504609,"line_start":863,"line_end":863,"column_start":9,"column_end":14},"name":"CSIZE","qualname":"::sys::termios::ControlFlags::CSIZE","value":"ControlFlags","parent":{"krate":0,"index":8739},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8857},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504694,"byte_end":504704,"line_start":869,"line_end":869,"column_start":16,"column_end":26},"name":"LocalFlags","qualname":"::sys::termios::LocalFlags","value":"LocalFlags {  }","parent":null,"children":[{"krate":0,"index":8858}],"decl_id":null,"docs":" Flags for setting any local modes\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8910},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504725,"byte_end":504731,"line_start":870,"line_end":870,"column_start":9,"column_end":15},"name":"ECHOKE","qualname":"::sys::termios::LocalFlags::ECHOKE","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8911},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504741,"byte_end":504746,"line_start":871,"line_end":871,"column_start":9,"column_end":14},"name":"ECHOE","qualname":"::sys::termios::LocalFlags::ECHOE","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8912},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504756,"byte_end":504761,"line_start":872,"line_end":872,"column_start":9,"column_end":14},"name":"ECHOK","qualname":"::sys::termios::LocalFlags::ECHOK","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8913},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504771,"byte_end":504775,"line_start":873,"line_end":873,"column_start":9,"column_end":13},"name":"ECHO","qualname":"::sys::termios::LocalFlags::ECHO","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8914},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504785,"byte_end":504791,"line_start":874,"line_end":874,"column_start":9,"column_end":15},"name":"ECHONL","qualname":"::sys::termios::LocalFlags::ECHONL","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8915},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504801,"byte_end":504808,"line_start":875,"line_end":875,"column_start":9,"column_end":16},"name":"ECHOPRT","qualname":"::sys::termios::LocalFlags::ECHOPRT","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8916},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504818,"byte_end":504825,"line_start":876,"line_end":876,"column_start":9,"column_end":16},"name":"ECHOCTL","qualname":"::sys::termios::LocalFlags::ECHOCTL","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8917},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504835,"byte_end":504839,"line_start":877,"line_end":877,"column_start":9,"column_end":13},"name":"ISIG","qualname":"::sys::termios::LocalFlags::ISIG","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8918},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":504849,"byte_end":504855,"line_start":878,"line_end":878,"column_start":9,"column_end":15},"name":"ICANON","qualname":"::sys::termios::LocalFlags::ICANON","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8919},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":505127,"byte_end":505133,"line_start":886,"line_end":886,"column_start":9,"column_end":15},"name":"IEXTEN","qualname":"::sys::termios::LocalFlags::IEXTEN","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8920},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":505143,"byte_end":505150,"line_start":887,"line_end":887,"column_start":9,"column_end":16},"name":"EXTPROC","qualname":"::sys::termios::LocalFlags::EXTPROC","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8921},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":505160,"byte_end":505166,"line_start":888,"line_end":888,"column_start":9,"column_end":15},"name":"TOSTOP","qualname":"::sys::termios::LocalFlags::TOSTOP","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8922},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":505176,"byte_end":505182,"line_start":889,"line_end":889,"column_start":9,"column_end":15},"name":"FLUSHO","qualname":"::sys::termios::LocalFlags::FLUSHO","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8923},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":505455,"byte_end":505461,"line_start":897,"line_end":897,"column_start":9,"column_end":15},"name":"PENDIN","qualname":"::sys::termios::LocalFlags::PENDIN","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8924},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":505471,"byte_end":505477,"line_start":898,"line_end":898,"column_start":9,"column_end":15},"name":"NOFLSH","qualname":"::sys::termios::LocalFlags::NOFLSH","value":"LocalFlags","parent":{"krate":0,"index":8909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9017},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":508764,"byte_end":508775,"line_start":965,"line_end":965,"column_start":16,"column_end":27},"name":"cfgetispeed","qualname":"::sys::termios::cfgetispeed","value":"pub fn cfgetispeed(&Termios) -> BaudRate","parent":null,"children":[],"decl_id":null,"docs":" Get input baud rate (see\n [cfgetispeed(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/cfgetispeed.html)).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9018},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":509212,"byte_end":509223,"line_start":974,"line_end":974,"column_start":16,"column_end":27},"name":"cfgetospeed","qualname":"::sys::termios::cfgetospeed","value":"pub fn cfgetospeed(&Termios) -> BaudRate","parent":null,"children":[],"decl_id":null,"docs":" Get output baud rate (see\n [cfgetospeed(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/cfgetospeed.html)).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9019},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":509653,"byte_end":509664,"line_start":983,"line_end":983,"column_start":16,"column_end":27},"name":"cfsetispeed","qualname":"::sys::termios::cfsetispeed","value":"pub fn cfsetispeed(&mut Termios, BaudRate) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set input baud rate (see\n [cfsetispeed(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/cfsetispeed.html)).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9020},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":510236,"byte_end":510247,"line_start":994,"line_end":994,"column_start":16,"column_end":27},"name":"cfsetospeed","qualname":"::sys::termios::cfsetospeed","value":"pub fn cfsetospeed(&mut Termios, BaudRate) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set output baud rate (see\n [cfsetospeed(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/cfsetospeed.html)).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":9021},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":510902,"byte_end":510912,"line_start":1006,"line_end":1006,"column_start":16,"column_end":26},"name":"cfsetspeed","qualname":"::sys::termios::cfsetspeed","value":"pub fn cfsetspeed(&mut Termios, BaudRate) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set both the input and output baud rates (see\n [termios(3)](https://www.freebsd.org/cgi/man.cgi?query=cfsetspeed)).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1491},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":511682,"byte_end":511691,"line_start":1021,"line_end":1021,"column_start":8,"column_end":17},"name":"cfmakeraw","qualname":"::sys::termios::cfmakeraw","value":"pub fn cfmakeraw(&mut Termios)","parent":null,"children":[],"decl_id":null,"docs":" Configures the port to something like the \"raw\" mode of the old Version 7 terminal driver (see\n [termios(3)](http://man7.org/linux/man-pages/man3/termios.3.html)).","sig":null,"attributes":[{"value":"/ Configures the port to something like the \"raw\" mode of the old Version 7 terminal driver (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":511230,"byte_end":511328,"line_start":1015,"line_end":1015,"column_start":1,"column_end":99}},{"value":"/ [termios(3)](http://man7.org/linux/man-pages/man3/termios.3.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":511329,"byte_end":511400,"line_start":1016,"line_end":1016,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":511401,"byte_end":511404,"line_start":1017,"line_end":1017,"column_start":1,"column_end":4}},{"value":"/ `cfmakeraw()` configures the termios structure such that input is available character-by-","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":511405,"byte_end":511498,"line_start":1018,"line_end":1018,"column_start":1,"column_end":94}},{"value":"/ character, echoing is disabled, and all special input and output processing is disabled. Note","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":511499,"byte_end":511596,"line_start":1019,"line_end":1019,"column_start":1,"column_end":98}},{"value":"/ that this is a non-standard function, but is available on Linux and BSDs.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":511597,"byte_end":511674,"line_start":1020,"line_end":1020,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1492},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":512786,"byte_end":512795,"line_start":1048,"line_end":1048,"column_start":8,"column_end":17},"name":"tcgetattr","qualname":"::sys::termios::tcgetattr","value":"pub fn tcgetattr(RawFd) -> Result<Termios>","parent":null,"children":[],"decl_id":null,"docs":" Return the configuration of a port\n [tcgetattr(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcgetattr.html)).","sig":null,"attributes":[{"value":"/ Return the configuration of a port","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":512353,"byte_end":512391,"line_start":1042,"line_end":1042,"column_start":1,"column_end":39}},{"value":"/ [tcgetattr(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcgetattr.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":512392,"byte_end":512487,"line_start":1043,"line_end":1043,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":512488,"byte_end":512491,"line_start":1044,"line_end":1044,"column_start":1,"column_end":4}},{"value":"/ `tcgetattr()` returns a `Termios` structure with the current configuration for a port. Modifying","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":512492,"byte_end":512592,"line_start":1045,"line_end":1045,"column_start":1,"column_end":101}},{"value":"/ this structure *will not* reconfigure the port, instead the modifications should be done to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":512593,"byte_end":512688,"line_start":1046,"line_end":1046,"column_start":1,"column_end":96}},{"value":"/ the `Termios` structure and then the port should be reconfigured using `tcsetattr()`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":512689,"byte_end":512778,"line_start":1047,"line_end":1047,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1493},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513448,"byte_end":513457,"line_start":1064,"line_end":1064,"column_start":8,"column_end":17},"name":"tcsetattr","qualname":"::sys::termios::tcsetattr","value":"pub fn tcsetattr(RawFd, SetArg, &Termios) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the configuration for a terminal (see\n [tcsetattr(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcsetattr.html)).","sig":null,"attributes":[{"value":"/ Set the configuration for a terminal (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513012,"byte_end":513057,"line_start":1058,"line_end":1058,"column_start":1,"column_end":46}},{"value":"/ [tcsetattr(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcsetattr.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513058,"byte_end":513153,"line_start":1059,"line_end":1059,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513154,"byte_end":513157,"line_start":1060,"line_end":1060,"column_start":1,"column_end":4}},{"value":"/ `tcsetattr()` reconfigures the given port based on a given `Termios` structure. This change","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513158,"byte_end":513253,"line_start":1061,"line_end":1061,"column_start":1,"column_end":96}},{"value":"/ takes affect at a time specified by `actions`. Note that this function may return success if","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513254,"byte_end":513350,"line_start":1062,"line_end":1062,"column_start":1,"column_end":97}},{"value":"/ *any* of the parameters were successfully set, not only if all were set successfully.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513351,"byte_end":513440,"line_start":1063,"line_end":1063,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":1494},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513818,"byte_end":513825,"line_start":1071,"line_end":1071,"column_start":8,"column_end":15},"name":"tcdrain","qualname":"::sys::termios::tcdrain","value":"pub fn tcdrain(RawFd) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Block until all output data is written (see\n [tcdrain(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcdrain.html)).\n","sig":null,"attributes":[{"value":"/ Block until all output data is written (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513671,"byte_end":513718,"line_start":1069,"line_end":1069,"column_start":1,"column_end":48}},{"value":"/ [tcdrain(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcdrain.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513719,"byte_end":513810,"line_start":1070,"line_end":1070,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":1495},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514212,"byte_end":514218,"line_start":1080,"line_end":1080,"column_start":8,"column_end":14},"name":"tcflow","qualname":"::sys::termios::tcflow","value":"pub fn tcflow(RawFd, FlowArg) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Suspend or resume the transmission or reception of data (see\n [tcflow(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcflow.html)).","sig":null,"attributes":[{"value":"/ Suspend or resume the transmission or reception of data (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513914,"byte_end":513978,"line_start":1075,"line_end":1075,"column_start":1,"column_end":65}},{"value":"/ [tcflow(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcflow.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":513979,"byte_end":514068,"line_start":1076,"line_end":1076,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514069,"byte_end":514072,"line_start":1077,"line_end":1077,"column_start":1,"column_end":4}},{"value":"/ `tcflow()` suspends of resumes the transmission or reception of data for the given port","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514073,"byte_end":514164,"line_start":1078,"line_end":1078,"column_start":1,"column_end":92}},{"value":"/ depending on the value of `action`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514165,"byte_end":514204,"line_start":1079,"line_end":1079,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1496},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514630,"byte_end":514637,"line_start":1089,"line_end":1089,"column_start":8,"column_end":15},"name":"tcflush","qualname":"::sys::termios::tcflush","value":"pub fn tcflush(RawFd, FlushArg) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Discard data in the output or input queue (see\n [tcflush(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcflush.html)).","sig":null,"attributes":[{"value":"/ Discard data in the output or input queue (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514340,"byte_end":514390,"line_start":1084,"line_end":1084,"column_start":1,"column_end":51}},{"value":"/ [tcflush(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcflush.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514391,"byte_end":514482,"line_start":1085,"line_end":1085,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514483,"byte_end":514486,"line_start":1086,"line_end":1086,"column_start":1,"column_end":4}},{"value":"/ `tcflush()` will discard data for a terminal port in the input queue, output queue, or both","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514487,"byte_end":514582,"line_start":1087,"line_end":1087,"column_start":1,"column_end":96}},{"value":"/ depending on the value of `action`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514583,"byte_end":514622,"line_start":1088,"line_end":1088,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1497},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":515078,"byte_end":515089,"line_start":1098,"line_end":1098,"column_start":8,"column_end":19},"name":"tcsendbreak","qualname":"::sys::termios::tcsendbreak","value":"pub fn tcsendbreak(RawFd, c_int) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a break for a specific duration (see\n [tcsendbreak(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcsendbreak.html)).","sig":null,"attributes":[{"value":"/ Send a break for a specific duration (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514761,"byte_end":514806,"line_start":1093,"line_end":1093,"column_start":1,"column_end":46}},{"value":"/ [tcsendbreak(3p)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcsendbreak.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514807,"byte_end":514906,"line_start":1094,"line_end":1094,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514907,"byte_end":514910,"line_start":1095,"line_end":1095,"column_start":1,"column_end":4}},{"value":"/ When using asynchronous data transmission `tcsendbreak()` will transmit a continuous stream","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":514911,"byte_end":515006,"line_start":1096,"line_end":1096,"column_start":1,"column_end":96}},{"value":"/ of zero-valued bits for an implementation-defined duration.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":515007,"byte_end":515070,"line_start":1097,"line_end":1097,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":1498},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":515367,"byte_end":515375,"line_start":1104,"line_end":1104,"column_start":8,"column_end":16},"name":"tcgetsid","qualname":"::sys::termios::tcgetsid","value":"pub fn tcgetsid(RawFd) -> Result<Pid>","parent":null,"children":[],"decl_id":null,"docs":" Get the session controlled by the given terminal (see\n [tcgetsid(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcgetsid.html)).\n","sig":null,"attributes":[{"value":"/ Get the session controlled by the given terminal (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":515209,"byte_end":515266,"line_start":1102,"line_end":1102,"column_start":1,"column_end":58}},{"value":"/ [tcgetsid(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcgetsid.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":515267,"byte_end":515359,"line_start":1103,"line_end":1103,"column_start":1,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":1499},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::sys::time","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":9022},{"krate":0,"index":9026},{"krate":0,"index":9025},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1550},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":9028},{"krate":0,"index":9032},{"krate":0,"index":9031},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1594},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1511},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":515608,"byte_end":515619,"line_start":5,"line_end":5,"column_start":11,"column_end":22},"name":"TimeValLike","qualname":"::sys::time::TimeValLike","value":"TimeValLike: Sized","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":515650,"byte_end":515654,"line_start":7,"line_end":7,"column_start":8,"column_end":12},"name":"zero","qualname":"::sys::time::TimeValLike::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":515633,"byte_end":515642,"line_start":6,"line_end":6,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":515720,"byte_end":515725,"line_start":12,"line_end":12,"column_start":8,"column_end":13},"name":"hours","qualname":"::sys::time::TimeValLike::hours","value":"pub fn hours(i64) -> Self","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":515703,"byte_end":515712,"line_start":11,"line_end":11,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":515913,"byte_end":515920,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"minutes","qualname":"::sys::time::TimeValLike::minutes","value":"pub fn minutes(i64) -> Self","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":515896,"byte_end":515905,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516102,"byte_end":516109,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"seconds","qualname":"::sys::time::TimeValLike::seconds","value":"pub fn seconds(i64) -> Self","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516140,"byte_end":516152,"line_start":26,"line_end":26,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"::sys::time::TimeValLike::milliseconds","value":"pub fn milliseconds(i64) -> Self","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516188,"byte_end":516200,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"microseconds","qualname":"::sys::time::TimeValLike::microseconds","value":"pub fn microseconds(i64) -> Self","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516236,"byte_end":516247,"line_start":28,"line_end":28,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"::sys::time::TimeValLike::nanoseconds","value":"pub fn nanoseconds(i64) -> Self","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516297,"byte_end":516306,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"num_hours","qualname":"::sys::time::TimeValLike::num_hours","value":"pub fn num_hours(&Self) -> i64","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516280,"byte_end":516289,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516385,"byte_end":516396,"line_start":36,"line_end":36,"column_start":8,"column_end":19},"name":"num_minutes","qualname":"::sys::time::TimeValLike::num_minutes","value":"pub fn num_minutes(&Self) -> i64","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516368,"byte_end":516377,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516459,"byte_end":516470,"line_start":40,"line_end":40,"column_start":8,"column_end":19},"name":"num_seconds","qualname":"::sys::time::TimeValLike::num_seconds","value":"pub fn num_seconds(&Self) -> i64","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516493,"byte_end":516509,"line_start":41,"line_end":41,"column_start":8,"column_end":24},"name":"num_milliseconds","qualname":"::sys::time::TimeValLike::num_milliseconds","value":"pub fn num_milliseconds(&Self) -> i64","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516532,"byte_end":516548,"line_start":42,"line_end":42,"column_start":8,"column_end":24},"name":"num_microseconds","qualname":"::sys::time::TimeValLike::num_microseconds","value":"pub fn num_microseconds(&Self) -> i64","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516571,"byte_end":516586,"line_start":43,"line_end":43,"column_start":8,"column_end":23},"name":"num_nanoseconds","qualname":"::sys::time::TimeValLike::num_nanoseconds","value":"pub fn num_nanoseconds(&Self) -> i64","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9022},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516650,"byte_end":516658,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"TimeSpec","qualname":"::sys::time::TimeSpec","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":516605,"byte_end":516615,"line_start":46,"line_end":46,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":520319,"byte_end":520325,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"tv_sec","qualname":"<TimeSpec>::tv_sec","value":"pub fn tv_sec(&Self) -> time_t","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":520385,"byte_end":520392,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"tv_nsec","qualname":"<TimeSpec>::tv_nsec","value":"pub fn tv_nsec(&Self) -> c_long","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9028},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":522372,"byte_end":522379,"line_start":262,"line_end":262,"column_start":12,"column_end":19},"name":"TimeVal","qualname":"::sys::time::TimeVal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":522327,"byte_end":522337,"line_start":260,"line_end":260,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":526157,"byte_end":526163,"line_start":387,"line_end":387,"column_start":12,"column_end":18},"name":"tv_sec","qualname":"<TimeVal>::tv_sec","value":"pub fn tv_sec(&Self) -> time_t","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":526223,"byte_end":526230,"line_start":391,"line_end":391,"column_start":12,"column_end":19},"name":"tv_usec","qualname":"<TimeVal>::tv_usec","value":"pub fn tv_usec(&Self) -> suseconds_t","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1619},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uio","qualname":"::sys::uio","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":10566},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1640},{"krate":0,"index":9034},{"krate":0,"index":9038},{"krate":0,"index":9037},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1651},{"krate":0,"index":1655},{"krate":0,"index":1658}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(improper_ctypes)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":531753,"byte_end":531779,"line_start":2,"line_end":2,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":1630},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":531927,"byte_end":531933,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"writev","qualname":"::sys::uio::writev","value":"pub fn writev(RawFd, &[IoVec<&[u8]>]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1632},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":532139,"byte_end":532144,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"readv","qualname":"::sys::uio::readv","value":"pub fn readv(RawFd, &mut [IoVec<&mut [u8]>]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1634},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":532794,"byte_end":532801,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"pwritev","qualname":"::sys::uio::pwritev","value":"pub fn pwritev(RawFd, &[IoVec<&[u8]>], off_t) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Write to `fd` at `offset` from buffers in `iov`.","sig":null,"attributes":[{"value":"/ Write to `fd` at `offset` from buffers in `iov`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":532350,"byte_end":532402,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":532403,"byte_end":532406,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Buffers in `iov` will be written in order until all buffers have been written","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":532407,"byte_end":532488,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/ or an error occurs. The file offset is not changed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":532489,"byte_end":532544,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":532545,"byte_end":532548,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ See also: [`writev`](fn.writev.html) and [`pwrite`](fn.pwrite.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":532549,"byte_end":532620,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"linux\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":532621,"byte_end":532786,"line_start":28,"line_end":32,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1636},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":533527,"byte_end":533533,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"preadv","qualname":"::sys::uio::preadv","value":"pub fn preadv(RawFd, &[IoVec<&mut [u8]>], off_t) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read from `fd` at `offset` filling buffers in `iov`.","sig":null,"attributes":[{"value":"/ Read from `fd` at `offset` filling buffers in `iov`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":533051,"byte_end":533107,"line_start":42,"line_end":42,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":533108,"byte_end":533111,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Buffers in `iov` will be filled in order until all buffers have been filled,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":533112,"byte_end":533192,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ no more bytes are available, or an error occurs. The file offset is not","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":533193,"byte_end":533268,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ changed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":533269,"byte_end":533281,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":533282,"byte_end":533285,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ See also: [`readv`](fn.readv.html) and [`pread`](fn.pread.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":533286,"byte_end":533353,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"linux\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":533354,"byte_end":533519,"line_start":49,"line_end":53,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1638},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":533792,"byte_end":533798,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"pwrite","qualname":"::sys::uio::pwrite","value":"pub fn pwrite(RawFd, &[u8], off_t) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1640},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534045,"byte_end":534050,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"pread","qualname":"::sys::uio::pread","value":"pub fn pread(RawFd, &mut [u8], off_t) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9034},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534855,"byte_end":534866,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"RemoteIoVec","qualname":"::sys::uio::RemoteIoVec","value":"RemoteIoVec { base, len }","parent":null,"children":[{"krate":0,"index":9035},{"krate":0,"index":9036}],"decl_id":null,"docs":" A slice of memory in a remote process, starting at address `base`\n and consisting of `len` bytes.","sig":null,"attributes":[{"value":"/ A slice of memory in a remote process, starting at address `base`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534293,"byte_end":534362,"line_start":81,"line_end":81,"column_start":1,"column_end":70}},{"value":"/ and consisting of `len` bytes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534363,"byte_end":534397,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534398,"byte_end":534401,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This is the same underlying C structure as [`IoVec`](struct.IoVec.html),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534402,"byte_end":534478,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ except that it refers to memory in some other process, and is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534479,"byte_end":534544,"line_start":85,"line_end":85,"column_start":1,"column_end":66}},{"value":"/ therefore not represented in Rust by an actual slice as `IoVec` is. It","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534545,"byte_end":534619,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ is used with [`process_vm_readv`](fn.process_vm_readv.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534620,"byte_end":534683,"line_start":87,"line_end":87,"column_start":1,"column_end":64}},{"value":"/ and [`process_vm_writev`](fn.process_vm_writev.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534684,"byte_end":534741,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534742,"byte_end":534769,"line_start":89,"line_end":89,"column_start":1,"column_end":28}},{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534770,"byte_end":534780,"line_start":90,"line_end":90,"column_start":1,"column_end":11}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534804,"byte_end":534843,"line_start":92,"line_end":92,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":9035},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534934,"byte_end":534938,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"name":"base","qualname":"::sys::uio::RemoteIoVec::base","value":"usize","parent":{"krate":0,"index":9034},"children":[],"decl_id":null,"docs":" The starting address of this slice (`iov_base`).\n","sig":null,"attributes":[{"value":"/ The starting address of this slice (`iov_base`).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534873,"byte_end":534925,"line_start":94,"line_end":94,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":9036},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535010,"byte_end":535013,"line_start":97,"line_end":97,"column_start":9,"column_end":12},"name":"len","qualname":"::sys::uio::RemoteIoVec::len","value":"usize","parent":{"krate":0,"index":9034},"children":[],"decl_id":null,"docs":" The number of bytes in this slice (`iov_len`).\n","sig":null,"attributes":[{"value":"/ The number of bytes in this slice (`iov_len`).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":534951,"byte_end":535001,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":1642},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536010,"byte_end":536027,"line_start":121,"line_end":121,"column_start":8,"column_end":25},"name":"process_vm_writev","qualname":"::sys::uio::process_vm_writev","value":"pub fn process_vm_writev(::unistd::Pid, &[IoVec<&[u8]>], &[RemoteIoVec])\n-> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Write data directly to another process's virtual memory\n (see [`process_vm_writev`(2)]).","sig":null,"attributes":[{"value":"/ Write data directly to another process's virtual memory","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535025,"byte_end":535084,"line_start":100,"line_end":100,"column_start":1,"column_end":60}},{"value":"/ (see [`process_vm_writev`(2)]).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535085,"byte_end":535120,"line_start":101,"line_end":101,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535121,"byte_end":535124,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ `local_iov` is a list of [`IoVec`]s containing the data to be written,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535125,"byte_end":535199,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ and `remote_iov` is a list of [`RemoteIoVec`]s identifying where the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535200,"byte_end":535272,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/ data should be written in the target process. On success, returns the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535273,"byte_end":535346,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ number of bytes written, which will always be a whole","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535347,"byte_end":535404,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"/ number of `remote_iov` chunks.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535405,"byte_end":535439,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535440,"byte_end":535443,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This requires the same permissions as debugging the process using","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535444,"byte_end":535513,"line_start":109,"line_end":109,"column_start":1,"column_end":70}},{"value":"/ [ptrace]: you must either be a privileged process (with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535514,"byte_end":535573,"line_start":110,"line_end":110,"column_start":1,"column_end":60}},{"value":"/ `CAP_SYS_PTRACE`), or you must be running as the same user as the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535574,"byte_end":535643,"line_start":111,"line_end":111,"column_start":1,"column_end":70}},{"value":"/ target process and the OS must have unprivileged debugging enabled.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535644,"byte_end":535715,"line_start":112,"line_end":112,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535716,"byte_end":535719,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function is only available on Linux.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535720,"byte_end":535765,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535766,"byte_end":535769,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [`process_vm_writev`(2)]: http://man7.org/linux/man-pages/man2/process_vm_writev.2.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535770,"byte_end":535861,"line_start":116,"line_end":116,"column_start":1,"column_end":92}},{"value":"/ [ptrace]: ../ptrace/index.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535862,"byte_end":535896,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"/ [`IoVec`]: struct.IoVec.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535897,"byte_end":535929,"line_start":118,"line_end":118,"column_start":1,"column_end":33}},{"value":"/ [`RemoteIoVec`]: struct.RemoteIoVec.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535930,"byte_end":535974,"line_start":119,"line_end":119,"column_start":1,"column_end":45}},{"value":"cfg(target_os = \"linux\")","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":535975,"byte_end":536002,"line_start":120,"line_end":120,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1644},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537455,"byte_end":537471,"line_start":152,"line_end":152,"column_start":8,"column_end":24},"name":"process_vm_readv","qualname":"::sys::uio::process_vm_readv","value":"pub fn process_vm_readv(::unistd::Pid, &[IoVec<&mut [u8]>], &[RemoteIoVec])\n-> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read data directly from another process's virtual memory\n (see [`process_vm_readv`(2)]).","sig":null,"attributes":[{"value":"/ Read data directly from another process's virtual memory","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536465,"byte_end":536525,"line_start":131,"line_end":131,"column_start":1,"column_end":61}},{"value":"/ (see [`process_vm_readv`(2)]).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536526,"byte_end":536560,"line_start":132,"line_end":132,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536561,"byte_end":536564,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ `local_iov` is a list of [`IoVec`]s containing the buffer to copy","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536565,"byte_end":536634,"line_start":134,"line_end":134,"column_start":1,"column_end":70}},{"value":"/ data into, and `remote_iov` is a list of [`RemoteIoVec`]s identifying","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536635,"byte_end":536708,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ where the source data is in the target process. On success,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536709,"byte_end":536772,"line_start":136,"line_end":136,"column_start":1,"column_end":64}},{"value":"/ returns the number of bytes written, which will always be a whole","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536773,"byte_end":536842,"line_start":137,"line_end":137,"column_start":1,"column_end":70}},{"value":"/ number of `remote_iov` chunks.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536843,"byte_end":536877,"line_start":138,"line_end":138,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536878,"byte_end":536881,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This requires the same permissions as debugging the process using","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536882,"byte_end":536951,"line_start":140,"line_end":140,"column_start":1,"column_end":70}},{"value":"/ [`ptrace`]: you must either be a privileged process (with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":536952,"byte_end":537013,"line_start":141,"line_end":141,"column_start":1,"column_end":62}},{"value":"/ `CAP_SYS_PTRACE`), or you must be running as the same user as the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537014,"byte_end":537083,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ target process and the OS must have unprivileged debugging enabled.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537084,"byte_end":537155,"line_start":143,"line_end":143,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537156,"byte_end":537159,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ This function is only available on Linux.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537160,"byte_end":537205,"line_start":145,"line_end":145,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537206,"byte_end":537209,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [`process_vm_readv`(2)]: http://man7.org/linux/man-pages/man2/process_vm_readv.2.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537210,"byte_end":537299,"line_start":147,"line_end":147,"column_start":1,"column_end":90}},{"value":"/ [`ptrace`]: ../ptrace/index.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537300,"byte_end":537336,"line_start":148,"line_end":148,"column_start":1,"column_end":37}},{"value":"/ [`IoVec`]: struct.IoVec.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537337,"byte_end":537369,"line_start":149,"line_end":149,"column_start":1,"column_end":33}},{"value":"/ [`RemoteIoVec`]: struct.RemoteIoVec.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537370,"byte_end":537414,"line_start":150,"line_end":150,"column_start":1,"column_end":45}},{"value":"cfg(any(target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537415,"byte_end":537447,"line_start":151,"line_end":151,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1646},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537972,"byte_end":537977,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"IoVec","qualname":"::sys::uio::IoVec","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537910,"byte_end":537920,"line_start":162,"line_end":162,"column_start":1,"column_end":11}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":537921,"byte_end":537960,"line_start":163,"line_end":163,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":538056,"byte_end":538064,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<IoVec<T>>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":538035,"byte_end":538044,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":538304,"byte_end":538314,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<IoVec<&'a [u8]>>::from_slice","value":"pub fn from_slice(&'a [u8]) -> IoVec<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":538547,"byte_end":538561,"line_start":189,"line_end":189,"column_start":12,"column_end":26},"name":"from_mut_slice","qualname":"<IoVec<&'a mut [u8]>>::from_mut_slice","value":"pub fn from_mut_slice(&'a mut [u8]) -> IoVec<&'a mut [u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1661},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utsname","qualname":"::sys::utsname","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":9040},{"krate":0,"index":9044},{"krate":0,"index":9043},{"krate":0,"index":1668},{"krate":0,"index":1674},{"krate":0,"index":1675}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9040},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":538941,"byte_end":538948,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"UtsName","qualname":"::sys::utsname::UtsName","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":538856,"byte_end":538866,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":538890,"byte_end":538929,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":538992,"byte_end":538999,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"sysname","qualname":"<UtsName>::sysname","value":"pub fn sysname(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":539112,"byte_end":539120,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"nodename","qualname":"<UtsName>::nodename","value":"pub fn nodename(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":539234,"byte_end":539241,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"release","qualname":"<UtsName>::release","value":"pub fn release(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":539354,"byte_end":539361,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"version","qualname":"<UtsName>::version","value":"pub fn version(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":539474,"byte_end":539481,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"machine","qualname":"<UtsName>::machine","value":"pub fn machine(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1674},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":539592,"byte_end":539597,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"uname","qualname":"::sys::utsname::uname","value":"pub fn uname() -> UtsName","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1677},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wait","qualname":"::sys::wait","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","parent":null,"children":[{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":9046},{"krate":0,"index":9068},{"krate":0,"index":9064},{"krate":0,"index":9065},{"krate":0,"index":9061},{"krate":0,"index":9062},{"krate":0,"index":9059},{"krate":0,"index":9053},{"krate":0,"index":9051},{"krate":0,"index":9048},{"krate":0,"index":9069},{"krate":0,"index":9082},{"krate":0,"index":9084},{"krate":0,"index":9086},{"krate":0,"index":9088},{"krate":0,"index":9090},{"krate":0,"index":9105},{"krate":0,"index":9108},{"krate":0,"index":9110},{"krate":0,"index":9113},{"krate":0,"index":9115},{"krate":0,"index":9118},{"krate":0,"index":9120},{"krate":0,"index":9123},{"krate":0,"index":9125},{"krate":0,"index":9128},{"krate":0,"index":9131},{"krate":0,"index":9172},{"krate":0,"index":9208},{"krate":0,"index":9209},{"krate":0,"index":9204},{"krate":0,"index":9205},{"krate":0,"index":9202},{"krate":0,"index":9201},{"krate":0,"index":9199},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1703}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9046},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":540501,"byte_end":540512,"line_start":9,"line_end":9,"column_start":16,"column_end":27},"name":"WaitPidFlag","qualname":"::sys::wait::WaitPidFlag","value":"WaitPidFlag {  }","parent":null,"children":[{"krate":0,"index":9047}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9091},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":540530,"byte_end":540537,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"WNOHANG","qualname":"::sys::wait::WaitPidFlag::WNOHANG","value":"WaitPidFlag","parent":{"krate":0,"index":9090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9092},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":540547,"byte_end":540556,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"name":"WUNTRACED","qualname":"::sys::wait::WaitPidFlag::WUNTRACED","value":"WaitPidFlag","parent":{"krate":0,"index":9090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9093},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":540844,"byte_end":540851,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"WEXITED","qualname":"::sys::wait::WaitPidFlag::WEXITED","value":"WaitPidFlag","parent":{"krate":0,"index":9090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"haiku\",\n          target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n          target_os = \"netbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":9094},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":540861,"byte_end":540871,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"WCONTINUED","qualname":"::sys::wait::WaitPidFlag::WCONTINUED","value":"WaitPidFlag","parent":{"krate":0,"index":9090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9095},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":541159,"byte_end":541167,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"name":"WSTOPPED","qualname":"::sys::wait::WaitPidFlag::WSTOPPED","value":"WaitPidFlag","parent":{"krate":0,"index":9090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"haiku\",\n          target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n          target_os = \"netbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":9096},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":541497,"byte_end":541504,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"WNOWAIT","qualname":"::sys::wait::WaitPidFlag::WNOWAIT","value":"WaitPidFlag","parent":{"krate":0,"index":9090},"children":[],"decl_id":null,"docs":" Don't reap, just poll status.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"freebsd\", target_os = \"haiku\",\n          target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n          target_os = \"netbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":9097},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":541644,"byte_end":541655,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"__WNOTHREAD","qualname":"::sys::wait::WaitPidFlag::__WNOTHREAD","value":"WaitPidFlag","parent":{"krate":0,"index":9090},"children":[],"decl_id":null,"docs":" Don't wait on children of other threads in this group\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":9098},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":541782,"byte_end":541788,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"name":"__WALL","qualname":"::sys::wait::WaitPidFlag::__WALL","value":"WaitPidFlag","parent":{"krate":0,"index":9090},"children":[],"decl_id":null,"docs":" Wait on all children, regardless of type\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":9099},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":541862,"byte_end":541870,"line_start":45,"line_end":45,"column_start":9,"column_end":17},"name":"__WCLONE","qualname":"::sys::wait::WaitPidFlag::__WCLONE","value":"WaitPidFlag","parent":{"krate":0,"index":9090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.2.1/src/lib.rs","byte_start":9452053,"byte_end":9452071,"line_start":573,"line_end":573,"column_start":19,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9173},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542597,"byte_end":542603,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Exited","qualname":"::sys::wait::WaitStatus::Exited","value":"WaitStatus::Exited(Pid, i32)","parent":{"krate":0,"index":9172},"children":[],"decl_id":null,"docs":" The process exited normally (as with `exit()` or returning from\n `main`) with the given exit code. This case matches the C macro\n `WIFEXITED(status)`; the second field is `WEXITSTATUS(status)`.\n","sig":null,"attributes":[{"value":"/ The process exited normally (as with `exit()` or returning from","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542381,"byte_end":542448,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/ `main`) with the given exit code. This case matches the C macro","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542453,"byte_end":542520,"line_start":61,"line_end":61,"column_start":5,"column_end":72}},{"value":"/ `WIFEXITED(status)`; the second field is `WEXITSTATUS(status)`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542525,"byte_end":542592,"line_start":62,"line_end":62,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9177},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542894,"byte_end":542902,"line_start":68,"line_end":68,"column_start":5,"column_end":13},"name":"Signaled","qualname":"::sys::wait::WaitStatus::Signaled","value":"WaitStatus::Signaled(Pid, Signal, bool)","parent":{"krate":0,"index":9172},"children":[],"decl_id":null,"docs":" The process was killed by the given signal. The third field\n indicates whether the signal generated a core dump. This case\n matches the C macro `WIFSIGNALED(status)`; the last two fields\n correspond to `WTERMSIG(status)` and `WCOREDUMP(status)`.\n","sig":null,"attributes":[{"value":"/ The process was killed by the given signal. The third field","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542619,"byte_end":542682,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ indicates whether the signal generated a core dump. This case","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542687,"byte_end":542752,"line_start":65,"line_end":65,"column_start":5,"column_end":70}},{"value":"/ matches the C macro `WIFSIGNALED(status)`; the last two fields","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542757,"byte_end":542823,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/ correspond to `WTERMSIG(status)` and `WCOREDUMP(status)`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542828,"byte_end":542889,"line_start":67,"line_end":67,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9182},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543172,"byte_end":543179,"line_start":73,"line_end":73,"column_start":5,"column_end":12},"name":"Stopped","qualname":"::sys::wait::WaitStatus::Stopped","value":"WaitStatus::Stopped(Pid, Signal)","parent":{"krate":0,"index":9172},"children":[],"decl_id":null,"docs":" The process is alive, but was stopped by the given signal. This\n is only reported if `WaitPidFlag::WUNTRACED` was passed. This\n case matches the C macro `WIFSTOPPED(status)`; the second field\n is `WSTOPSIG(status)`.\n","sig":null,"attributes":[{"value":"/ The process is alive, but was stopped by the given signal. This","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542927,"byte_end":542994,"line_start":69,"line_end":69,"column_start":5,"column_end":72}},{"value":"/ is only reported if `WaitPidFlag::WUNTRACED` was passed. This","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542999,"byte_end":543064,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ case matches the C macro `WIFSTOPPED(status)`; the second field","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543069,"byte_end":543136,"line_start":71,"line_end":71,"column_start":5,"column_end":72}},{"value":"/ is `WSTOPSIG(status)`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543141,"byte_end":543167,"line_start":72,"line_end":72,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9186},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543666,"byte_end":543677,"line_start":82,"line_end":82,"column_start":5,"column_end":16},"name":"PtraceEvent","qualname":"::sys::wait::WaitStatus::PtraceEvent","value":"WaitStatus::PtraceEvent(Pid, Signal, c_int)","parent":{"krate":0,"index":9172},"children":[],"decl_id":null,"docs":" The traced process was stopped by a `PTRACE_EVENT_*` event. See\n [`nix::sys::ptrace`] and [`ptrace`(2)] for more information. All\n currently-defined events use `SIGTRAP` as the signal; the third\n field is the `PTRACE_EVENT_*` value of the event.","sig":null,"attributes":[{"value":"/ The traced process was stopped by a `PTRACE_EVENT_*` event. See","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543198,"byte_end":543265,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ [`nix::sys::ptrace`] and [`ptrace`(2)] for more information. All","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543270,"byte_end":543338,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/ currently-defined events use `SIGTRAP` as the signal; the third","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543343,"byte_end":543410,"line_start":76,"line_end":76,"column_start":5,"column_end":72}},{"value":"/ field is the `PTRACE_EVENT_*` value of the event.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543415,"byte_end":543468,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543473,"byte_end":543476,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`nix::sys::ptrace`]: ../ptrace/index.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543481,"byte_end":543527,"line_start":79,"line_end":79,"column_start":5,"column_end":51}},{"value":"/ [`ptrace`(2)]: http://man7.org/linux/man-pages/man2/ptrace.2.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543532,"byte_end":543601,"line_start":80,"line_end":80,"column_start":5,"column_end":74}},{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543606,"byte_end":543661,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9191},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544013,"byte_end":544026,"line_start":89,"line_end":89,"column_start":5,"column_end":18},"name":"PtraceSyscall","qualname":"::sys::wait::WaitStatus::PtraceSyscall","value":"WaitStatus::PtraceSyscall(Pid)","parent":{"krate":0,"index":9172},"children":[],"decl_id":null,"docs":" The traced process was stopped by execution of a system call,\n and `PTRACE_O_TRACESYSGOOD` is in effect. See [`ptrace`(2)] for\n more information.","sig":null,"attributes":[{"value":"/ The traced process was stopped by execution of a system call,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543703,"byte_end":543768,"line_start":83,"line_end":83,"column_start":5,"column_end":70}},{"value":"/ and `PTRACE_O_TRACESYSGOOD` is in effect. See [`ptrace`(2)] for","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543773,"byte_end":543840,"line_start":84,"line_end":84,"column_start":5,"column_end":72}},{"value":"/ more information.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543845,"byte_end":543866,"line_start":85,"line_end":85,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543871,"byte_end":543874,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ [`ptrace`(2)]: http://man7.org/linux/man-pages/man2/ptrace.2.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543879,"byte_end":543948,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":543953,"byte_end":544008,"line_start":88,"line_end":88,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9194},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544283,"byte_end":544292,"line_start":94,"line_end":94,"column_start":5,"column_end":14},"name":"Continued","qualname":"::sys::wait::WaitStatus::Continued","value":"WaitStatus::Continued(Pid)","parent":{"krate":0,"index":9172},"children":[],"decl_id":null,"docs":" The process was previously stopped but has resumed execution\n after receiving a `SIGCONT` signal. This is only reported if\n `WaitPidFlag::WCONTINUED` was passed. This case matches the C\n macro `WIFCONTINUED(status)`.\n","sig":null,"attributes":[{"value":"/ The process was previously stopped but has resumed execution","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544037,"byte_end":544101,"line_start":90,"line_end":90,"column_start":5,"column_end":69}},{"value":"/ after receiving a `SIGCONT` signal. This is only reported if","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544106,"byte_end":544170,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/ `WaitPidFlag::WCONTINUED` was passed. This case matches the C","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544175,"byte_end":544240,"line_start":92,"line_end":92,"column_start":5,"column_end":70}},{"value":"/ macro `WIFCONTINUED(status)`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544245,"byte_end":544278,"line_start":93,"line_end":93,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9197},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544554,"byte_end":544564,"line_start":99,"line_end":99,"column_start":5,"column_end":15},"name":"StillAlive","qualname":"::sys::wait::WaitStatus::StillAlive","value":"WaitStatus::StillAlive","parent":{"krate":0,"index":9172},"children":[],"decl_id":null,"docs":" There are currently no state changes to report in any awaited\n child process. This is only returned if `WaitPidFlag::WNOHANG`\n was used (otherwise `wait()` or `waitpid()` would block until\n there was something to report).\n","sig":null,"attributes":[{"value":"/ There are currently no state changes to report in any awaited","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544303,"byte_end":544368,"line_start":95,"line_end":95,"column_start":5,"column_end":70}},{"value":"/ child process. This is only returned if `WaitPidFlag::WNOHANG`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544373,"byte_end":544439,"line_start":96,"line_end":96,"column_start":5,"column_end":71}},{"value":"/ was used (otherwise `wait()` or `waitpid()` would block until","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544444,"byte_end":544509,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ there was something to report).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544514,"byte_end":544549,"line_start":98,"line_end":98,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":9172},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542364,"byte_end":542374,"line_start":59,"line_end":59,"column_start":10,"column_end":20},"name":"WaitStatus","qualname":"::sys::wait::WaitStatus","value":"pub enum WaitStatus {\n\n    /// The process exited normally (as with `exit()` or returning from\n    /// `main`) with the given exit code. This case matches the C macro\n    /// `WIFEXITED(status)`; the second field is `WEXITSTATUS(status)`.\n    Exited(Pid, i32),\n\n    /// The process was killed by the given signal. The third field\n    /// indicates whether the signal generated a core dump. This case\n    /// matches the C macro `WIFSIGNALED(status)`; the last two fields\n    /// correspond to `WTERMSIG(status)` and `WCOREDUMP(status)`.\n    Signaled(Pid, Signal, bool),\n\n    /// The process is alive, but was stopped by the given signal. This\n    /// is only reported if `WaitPidFlag::WUNTRACED` was passed. This\n    /// case matches the C macro `WIFSTOPPED(status)`; the second field\n    /// is `WSTOPSIG(status)`.\n    Stopped(Pid, Signal),\n\n    /// The traced process was stopped by a `PTRACE_EVENT_*` event. See\n    /// [`nix::sys::ptrace`] and [`ptrace`(2)] for more information. All\n    /// currently-defined events use `SIGTRAP` as the signal; the third\n    /// field is the `PTRACE_EVENT_*` value of the event.\n    ///\n    /// [`nix::sys::ptrace`]: ../ptrace/index.html\n    /// [`ptrace`(2)]: http://man7.org/linux/man-pages/man2/ptrace.2.html\n    #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n    PtraceEvent(Pid, Signal, c_int),\n\n    /// The traced process was stopped by execution of a system call,\n    /// and `PTRACE_O_TRACESYSGOOD` is in effect. See [`ptrace`(2)] for\n    /// more information.\n    ///\n    /// [`ptrace`(2)]: http://man7.org/linux/man-pages/man2/ptrace.2.html\n    #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n    PtraceSyscall(Pid),\n\n    /// The process was previously stopped but has resumed execution\n    /// after receiving a `SIGCONT` signal. This is only reported if\n    /// `WaitPidFlag::WCONTINUED` was passed. This case matches the C\n    /// macro `WIFCONTINUED(status)`.\n    Continued(Pid),\n\n    /// There are currently no state changes to report in any awaited\n    /// child process. This is only returned if `WaitPidFlag::WNOHANG`\n    /// was used (otherwise `wait()` or `waitpid()` would block until\n    /// there was something to report).\n    StillAlive,\n}","parent":null,"children":[{"krate":0,"index":9173},{"krate":0,"index":9177},{"krate":0,"index":9182},{"krate":0,"index":9186},{"krate":0,"index":9191},{"krate":0,"index":9194},{"krate":0,"index":9197}],"decl_id":null,"docs":" Possible return values from `wait()` or `waitpid()`.","sig":null,"attributes":[{"value":"/ Possible return values from `wait()` or `waitpid()`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":541882,"byte_end":541938,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":541939,"byte_end":541942,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Each status (other than `StillAlive`) describes a state transition","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":541943,"byte_end":542013,"line_start":51,"line_end":51,"column_start":1,"column_end":71}},{"value":"/ in a child process `Pid`, such as the process exiting or stopping,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542014,"byte_end":542084,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/ plus additional data about the transition if any.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542085,"byte_end":542138,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542139,"byte_end":542142,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Note that there are two Linux-specific enum variants, `PtraceEvent`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542143,"byte_end":542214,"line_start":55,"line_end":55,"column_start":1,"column_end":72}},{"value":"/ and `PtraceSyscall`. Portable code should avoid exhaustively","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542215,"byte_end":542279,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/ matching on `WaitStatus`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":542280,"byte_end":542309,"line_start":57,"line_end":57,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544672,"byte_end":544675,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"pid","qualname":"<WaitStatus>::pid","value":"pub fn pid(&Self) -> Option<Pid>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the PID from the WaitStatus unless it equals StillAlive.\n","sig":null,"attributes":[{"value":"/ Extracts the PID from the WaitStatus unless it equals StillAlive.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544591,"byte_end":544660,"line_start":103,"line_end":103,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546897,"byte_end":546905,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<WaitStatus>::from_raw","value":"pub fn from_raw(Pid, i32) -> Result<WaitStatus>","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw `wstatus` as returned by `waitpid`/`wait` into a `WaitStatus`","sig":null,"attributes":[{"value":"/ Convert a raw `wstatus` as returned by `waitpid`/`wait` into a `WaitStatus`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546282,"byte_end":546361,"line_start":163,"line_end":163,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546366,"byte_end":546369,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546374,"byte_end":546386,"line_start":165,"line_end":165,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546391,"byte_end":546394,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error` corresponding to `EINVAL` for invalid status values.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546399,"byte_end":546474,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546479,"byte_end":546482,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546487,"byte_end":546501,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546506,"byte_end":546509,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Convert a `wstatus` obtained from `libc::waitpid` into a `WaitStatus`:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546514,"byte_end":546588,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546593,"byte_end":546596,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546601,"byte_end":546608,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use nix::sys::wait::WaitStatus;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546613,"byte_end":546648,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ use nix::sys::signal::Signal;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546653,"byte_end":546686,"line_start":175,"line_end":175,"column_start":5,"column_end":38}},{"value":"/ let pid = nix::unistd::Pid::from_raw(1);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546691,"byte_end":546735,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/ let status = WaitStatus::from_raw(pid, 0x0002);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546740,"byte_end":546791,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(status, Ok(WaitStatus::Signaled(pid, Signal::SIGINT, false)));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546796,"byte_end":546873,"line_start":178,"line_end":178,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546878,"byte_end":546885,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1700},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":548346,"byte_end":548353,"line_start":213,"line_end":213,"column_start":8,"column_end":15},"name":"waitpid","qualname":"::sys::wait::waitpid","value":"pub fn waitpid<P: Into<Option<Pid>>>(P, Option<WaitPidFlag>)\n-> Result<WaitStatus>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1703},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":548928,"byte_end":548932,"line_start":237,"line_end":237,"column_start":8,"column_end":12},"name":"wait","qualname":"::sys::wait::wait","value":"pub fn wait() -> Result<WaitStatus>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1704},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ucontext","qualname":"::ucontext","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":9212},{"krate":0,"index":9215},{"krate":0,"index":9214},{"krate":0,"index":1710}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(target_os = \"linux\",\n          any(target_arch = \"x86\", target_arch = \"x86_64\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1831,"byte_end":1923,"line_start":70,"line_end":71,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":9212},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":549206,"byte_end":549214,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"UContext","qualname":"::ucontext::UContext","value":"UContext {  }","parent":null,"children":[{"krate":0,"index":9213}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":549155,"byte_end":549194,"line_start":10,"line_end":10,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":549315,"byte_end":549318,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"get","qualname":"<UContext>::get","value":"pub fn get() -> Result<UContext>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_env = \"musl\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":549271,"byte_end":549303,"line_start":16,"line_end":16,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":549647,"byte_end":549650,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"set","qualname":"<UContext>::set","value":"pub fn set(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(target_env = \"musl\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":549603,"byte_end":549635,"line_start":25,"line_end":25,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":549838,"byte_end":549849,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"sigmask_mut","qualname":"<UContext>::sigmask_mut","value":"pub fn sigmask_mut(&mut Self) -> &mut SigSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1715},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":549960,"byte_end":549967,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"sigmask","qualname":"<UContext>::sigmask","value":"pub fn sigmask(&Self) -> &SigSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1716},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unistd","qualname":"::unistd","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":10624},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":9217},{"krate":0,"index":9233},{"krate":0,"index":9232},{"krate":0,"index":9230},{"krate":0,"index":9227},{"krate":0,"index":9228},{"krate":0,"index":9223},{"krate":0,"index":9224},{"krate":0,"index":9220},{"krate":0,"index":1762},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":9235},{"krate":0,"index":9251},{"krate":0,"index":9250},{"krate":0,"index":9248},{"krate":0,"index":9245},{"krate":0,"index":9246},{"krate":0,"index":9241},{"krate":0,"index":9242},{"krate":0,"index":9238},{"krate":0,"index":1773},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":9253},{"krate":0,"index":9269},{"krate":0,"index":9268},{"krate":0,"index":9266},{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9259},{"krate":0,"index":9260},{"krate":0,"index":9256},{"krate":0,"index":1782},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":9271},{"krate":0,"index":9279},{"krate":0,"index":9278},{"krate":0,"index":9276},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1818},{"krate":0,"index":1821},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":9281},{"krate":0,"index":9289},{"krate":0,"index":9288},{"krate":0,"index":9286},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":9292},{"krate":0,"index":9311},{"krate":0,"index":9310},{"krate":0,"index":9308},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1903},{"krate":0,"index":9316},{"krate":0,"index":9389},{"krate":0,"index":9388},{"krate":0,"index":9386},{"krate":0,"index":9383},{"krate":0,"index":9384},{"krate":0,"index":9380},{"krate":0,"index":9377},{"krate":0,"index":9378},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":9391},{"krate":0,"index":9761},{"krate":0,"index":9760},{"krate":0,"index":9758},{"krate":0,"index":9755},{"krate":0,"index":9756},{"krate":0,"index":9752},{"krate":0,"index":9749},{"krate":0,"index":9750},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1922}],"decl_id":null,"docs":" Safe wrappers around functions found in libc \"unistd.h\" header\n","sig":null,"attributes":[{"value":"/ Safe wrappers around functions found in libc \"unistd.h\" header","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":550057,"byte_end":550123,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":9217},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551025,"byte_end":551028,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"Uid","qualname":"::unistd::Uid","value":"","parent":null,"children":[],"decl_id":null,"docs":" User identifier","sig":null,"attributes":[{"value":"/ User identifier","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":550816,"byte_end":550835,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":550836,"byte_end":550839,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Newtype pattern around `uid_t` (which is just alias). It prevents bugs caused by accidentally","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":550840,"byte_end":550937,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ passing wrong value.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":550938,"byte_end":550962,"line_start":27,"line_end":27,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551100,"byte_end":551108,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<Uid>::from_raw","value":"pub fn from_raw(uid_t) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Uid` from raw `uid_t`.\n","sig":null,"attributes":[{"value":"/ Creates `Uid` from raw `uid_t`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551053,"byte_end":551088,"line_start":32,"line_end":32,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551259,"byte_end":551266,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"current","qualname":"<Uid>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns Uid of calling process. This is practically a more Rusty alias for `getuid`.\n","sig":null,"attributes":[{"value":"/ Returns Uid of calling process. This is practically a more Rusty alias for `getuid`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551159,"byte_end":551247,"line_start":37,"line_end":37,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551418,"byte_end":551427,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"effective","qualname":"<Uid>::effective","value":"pub fn effective() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns effective Uid of calling process. This is practically a more Rusty alias for `geteuid`.\n","sig":null,"attributes":[{"value":"/ Returns effective Uid of calling process. This is practically a more Rusty alias for `geteuid`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551307,"byte_end":551406,"line_start":42,"line_end":42,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551566,"byte_end":551573,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Uid>::is_root","value":"pub fn is_root(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Uid` represents privileged user - root. (If it equals zero.)\n","sig":null,"attributes":[{"value":"/ Returns true if the `Uid` represents privileged user - root. (If it equals zero.)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551469,"byte_end":551554,"line_start":47,"line_end":47,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551678,"byte_end":551684,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Uid>::as_raw","value":"pub fn as_raw(&Self) -> uid_t","parent":null,"children":[],"decl_id":null,"docs":" Get the raw `uid_t` wrapped by `self`.\n","sig":null,"attributes":[{"value":"/ Get the raw `uid_t` wrapped by `self`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551624,"byte_end":551666,"line_start":52,"line_end":52,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":1772},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551978,"byte_end":551982,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"name":"ROOT","qualname":"::unistd::ROOT","value":"Uid","parent":null,"children":[],"decl_id":null,"docs":" Constant for UID = 0\n","sig":null,"attributes":[{"value":"/ Constant for UID = 0","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551943,"byte_end":551967,"line_start":70,"line_end":70,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":9235},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552209,"byte_end":552212,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"Gid","qualname":"::unistd::Gid","value":"","parent":null,"children":[],"decl_id":null,"docs":" Group identifier","sig":null,"attributes":[{"value":"/ Group identifier","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551999,"byte_end":552019,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552020,"byte_end":552023,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Newtype pattern around `gid_t` (which is just alias). It prevents bugs caused by accidentally","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552024,"byte_end":552121,"line_start":75,"line_end":75,"column_start":1,"column_end":98}},{"value":"/ passing wrong value.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552122,"byte_end":552146,"line_start":76,"line_end":76,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552284,"byte_end":552292,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<Gid>::from_raw","value":"pub fn from_raw(gid_t) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Gid` from raw `gid_t`.\n","sig":null,"attributes":[{"value":"/ Creates `Gid` from raw `gid_t`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552237,"byte_end":552272,"line_start":81,"line_end":81,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552443,"byte_end":552450,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"current","qualname":"<Gid>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns Gid of calling process. This is practically a more Rusty alias for `getgid`.\n","sig":null,"attributes":[{"value":"/ Returns Gid of calling process. This is practically a more Rusty alias for `getgid`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552343,"byte_end":552431,"line_start":86,"line_end":86,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552601,"byte_end":552610,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"effective","qualname":"<Gid>::effective","value":"pub fn effective() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns effective Gid of calling process. This is practically a more Rusty alias for `getgid`.\n","sig":null,"attributes":[{"value":"/ Returns effective Gid of calling process. This is practically a more Rusty alias for `getgid`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552491,"byte_end":552589,"line_start":91,"line_end":91,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552706,"byte_end":552712,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Gid>::as_raw","value":"pub fn as_raw(&Self) -> gid_t","parent":null,"children":[],"decl_id":null,"docs":" Get the raw `gid_t` wrapped by `self`.\n","sig":null,"attributes":[{"value":"/ Get the raw `gid_t` wrapped by `self`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552652,"byte_end":552694,"line_start":96,"line_end":96,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":9253},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553183,"byte_end":553186,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"Pid","qualname":"::unistd::Pid","value":"","parent":null,"children":[],"decl_id":null,"docs":" Process identifier","sig":null,"attributes":[{"value":"/ Process identifier","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552971,"byte_end":552993,"line_start":114,"line_end":114,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552994,"byte_end":552997,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Newtype pattern around `pid_t` (which is just alias). It prevents bugs caused by accidentally","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552998,"byte_end":553095,"line_start":116,"line_end":116,"column_start":1,"column_end":98}},{"value":"/ passing wrong value.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553096,"byte_end":553120,"line_start":117,"line_end":117,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553258,"byte_end":553266,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<Pid>::from_raw","value":"pub fn from_raw(pid_t) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates `Pid` from raw `pid_t`.\n","sig":null,"attributes":[{"value":"/ Creates `Pid` from raw `pid_t`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553211,"byte_end":553246,"line_start":122,"line_end":122,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553363,"byte_end":553367,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"this","qualname":"<Pid>::this","value":"pub fn this() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns PID of calling process\n","sig":null,"attributes":[{"value":"/ Returns PID of calling process","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553317,"byte_end":553351,"line_start":127,"line_end":127,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553464,"byte_end":553470,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"parent","qualname":"<Pid>::parent","value":"pub fn parent() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns PID of parent of calling process\n","sig":null,"attributes":[{"value":"/ Returns PID of parent of calling process","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553408,"byte_end":553452,"line_start":132,"line_end":132,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553566,"byte_end":553572,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Pid>::as_raw","value":"pub fn as_raw(&Self) -> pid_t","parent":null,"children":[],"decl_id":null,"docs":" Get the raw `pid_t` wrapped by `self`.\n","sig":null,"attributes":[{"value":"/ Get the raw `pid_t` wrapped by `self`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553512,"byte_end":553554,"line_start":137,"line_end":137,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":9272},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554174,"byte_end":554180,"line_start":163,"line_end":163,"column_start":5,"column_end":11},"name":"Parent","qualname":"::unistd::ForkResult::Parent","value":"ForkResult::Parent { child }","parent":{"krate":0,"index":9271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9274},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554201,"byte_end":554206,"line_start":164,"line_end":164,"column_start":5,"column_end":10},"name":"Child","qualname":"::unistd::ForkResult::Child","value":"ForkResult::Child","parent":{"krate":0,"index":9271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9271},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554157,"byte_end":554167,"line_start":162,"line_end":162,"column_start":10,"column_end":20},"name":"ForkResult","qualname":"::unistd::ForkResult","value":"pub enum ForkResult {\n    Parent {\n        child: Pid,\n    },\n    Child,\n}","parent":null,"children":[{"krate":0,"index":9272},{"krate":0,"index":9274}],"decl_id":null,"docs":" Represents the successful result of calling `fork`","sig":null,"attributes":[{"value":"/ Represents the successful result of calling `fork`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553832,"byte_end":553886,"line_start":156,"line_end":156,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553887,"byte_end":553890,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When `fork` is called, the process continues execution in the parent process","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553891,"byte_end":553971,"line_start":158,"line_end":158,"column_start":1,"column_end":81}},{"value":"/ and in the new child.  This return type can be examined to determine whether","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553972,"byte_end":554052,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ you are now executing in the parent process or in the child.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554053,"byte_end":554117,"line_start":160,"line_end":160,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554322,"byte_end":554330,"line_start":171,"line_end":171,"column_start":12,"column_end":20},"name":"is_child","qualname":"<ForkResult>::is_child","value":"pub fn is_child(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if this is the child process of the `fork()`\n","sig":null,"attributes":[{"value":"/ Return `true` if this is the child process of the `fork()`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554234,"byte_end":554296,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554301,"byte_end":554310,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554543,"byte_end":554552,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"is_parent","qualname":"<ForkResult>::is_parent","value":"pub fn is_parent(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is the parent process of the `fork()`\n","sig":null,"attributes":[{"value":"/ Returns `true` if this is the parent process of the `fork()`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554453,"byte_end":554517,"line_start":178,"line_end":178,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554522,"byte_end":554531,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1794},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556200,"byte_end":556204,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"fork","qualname":"::unistd::fork","value":"pub fn fork() -> Result<ForkResult>","parent":null,"children":[],"decl_id":null,"docs":" Create a new child process duplicating the parent process ([see\n fork(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fork.html)).","sig":null,"attributes":[{"value":"/ Create a new child process duplicating the parent process ([see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554604,"byte_end":554671,"line_start":185,"line_end":185,"column_start":1,"column_end":68}},{"value":"/ fork(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fork.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554672,"byte_end":554755,"line_start":186,"line_end":186,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554756,"byte_end":554759,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ After calling the fork system call (successfully) two processes will","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554760,"byte_end":554832,"line_start":188,"line_end":188,"column_start":1,"column_end":73}},{"value":"/ be created that are identical with the exception of their pid and the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554833,"byte_end":554906,"line_start":189,"line_end":189,"column_start":1,"column_end":74}},{"value":"/ return value of this function.  As an example:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554907,"byte_end":554957,"line_start":190,"line_end":190,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554958,"byte_end":554961,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554962,"byte_end":554975,"line_start":192,"line_end":192,"column_start":1,"column_end":14}},{"value":"/ use nix::unistd::{fork, ForkResult};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554976,"byte_end":555016,"line_start":193,"line_end":193,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555017,"byte_end":555020,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ match fork() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555021,"byte_end":555039,"line_start":195,"line_end":195,"column_start":1,"column_end":19}},{"value":"/    Ok(ForkResult::Parent { child, .. }) => {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555040,"byte_end":555088,"line_start":196,"line_end":196,"column_start":1,"column_end":49}},{"value":"/        println!(\"Continuing execution in parent process, new child has pid: {}\", child);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555089,"byte_end":555181,"line_start":197,"line_end":197,"column_start":1,"column_end":93}},{"value":"/    }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555182,"byte_end":555190,"line_start":198,"line_end":198,"column_start":1,"column_end":9}},{"value":"/    Ok(ForkResult::Child) => println!(\"I'm a new child process\"),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555191,"byte_end":555259,"line_start":199,"line_end":199,"column_start":1,"column_end":69}},{"value":"/    Err(_) => println!(\"Fork failed\"),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555260,"byte_end":555301,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555302,"byte_end":555307,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555308,"byte_end":555315,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555316,"byte_end":555319,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ This will print something like the following (order indeterministic).  The","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555320,"byte_end":555398,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/ thing to note is that you end up with two processes continuing execution","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555399,"byte_end":555475,"line_start":205,"line_end":205,"column_start":1,"column_end":77}},{"value":"/ immediately after the fork call but with different match arms.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555476,"byte_end":555542,"line_start":206,"line_end":206,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555543,"byte_end":555546,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555547,"byte_end":555558,"line_start":208,"line_end":208,"column_start":1,"column_end":12}},{"value":"/ Continuing execution in parent process, new child has pid: 1234","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555559,"byte_end":555626,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/ I'm a new child process","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555627,"byte_end":555654,"line_start":210,"line_end":210,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555655,"byte_end":555662,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555663,"byte_end":555666,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555667,"byte_end":555679,"line_start":213,"line_end":213,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555680,"byte_end":555683,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ In a multithreaded program, only [async-signal-safe] functions like `pause`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555684,"byte_end":555763,"line_start":215,"line_end":215,"column_start":1,"column_end":80}},{"value":"/ and `_exit` may be called by the child (the parent isn't restricted). Note","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555764,"byte_end":555842,"line_start":216,"line_end":216,"column_start":1,"column_end":79}},{"value":"/ that memory allocation may **not** be async-signal-safe and thus must be","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555843,"byte_end":555919,"line_start":217,"line_end":217,"column_start":1,"column_end":77}},{"value":"/ prevented.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555920,"byte_end":555934,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555935,"byte_end":555938,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Those functions are only a small subset of your operating system's API, so","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":555939,"byte_end":556017,"line_start":220,"line_end":220,"column_start":1,"column_end":79}},{"value":"/ special care must be taken to only invoke code you can control and audit.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556018,"byte_end":556095,"line_start":221,"line_end":221,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556096,"byte_end":556099,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ [async-signal-safe]: http://man7.org/linux/man-pages/man7/signal-safety.7.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556100,"byte_end":556182,"line_start":223,"line_end":223,"column_start":1,"column_end":83}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556183,"byte_end":556192,"line_start":224,"line_end":224,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1797},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556686,"byte_end":556692,"line_start":241,"line_end":241,"column_start":8,"column_end":14},"name":"getpid","qualname":"::unistd::getpid","value":"pub fn getpid() -> Pid","parent":null,"children":[],"decl_id":null,"docs":" Get the pid of this process (see\n [getpid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getpid.html)).","sig":null,"attributes":[{"value":"/ Get the pid of this process (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556418,"byte_end":556454,"line_start":235,"line_end":235,"column_start":1,"column_end":37}},{"value":"/ [getpid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getpid.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556455,"byte_end":556543,"line_start":236,"line_end":236,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556544,"byte_end":556547,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ Since you are running code, there is always a pid to return, so there","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556548,"byte_end":556621,"line_start":238,"line_end":238,"column_start":1,"column_end":74}},{"value":"/ is no error case that needs to be handled.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556622,"byte_end":556668,"line_start":239,"line_end":239,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556669,"byte_end":556678,"line_start":240,"line_end":240,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1798},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557000,"byte_end":557007,"line_start":251,"line_end":251,"column_start":8,"column_end":15},"name":"getppid","qualname":"::unistd::getppid","value":"pub fn getppid() -> Pid","parent":null,"children":[],"decl_id":null,"docs":" Get the pid of this processes' parent (see\n [getpid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getppid.html)).","sig":null,"attributes":[{"value":"/ Get the pid of this processes' parent (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556742,"byte_end":556788,"line_start":245,"line_end":245,"column_start":1,"column_end":47}},{"value":"/ [getpid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getppid.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556789,"byte_end":556878,"line_start":246,"line_end":246,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556879,"byte_end":556882,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ There is always a parent pid to return, so there is no error case that needs","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556883,"byte_end":556963,"line_start":248,"line_end":248,"column_start":1,"column_end":81}},{"value":"/ to be handled.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556964,"byte_end":556982,"line_start":249,"line_end":249,"column_start":1,"column_end":19}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":556983,"byte_end":556992,"line_start":250,"line_end":250,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1799},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557628,"byte_end":557635,"line_start":265,"line_end":265,"column_start":8,"column_end":15},"name":"setpgid","qualname":"::unistd::setpgid","value":"pub fn setpgid(Pid, Pid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a process group ID (see\n [setpgid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/setpgid.html)).","sig":null,"attributes":[{"value":"/ Set a process group ID (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557144,"byte_end":557175,"line_start":255,"line_end":255,"column_start":1,"column_end":32}},{"value":"/ [setpgid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/setpgid.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557176,"byte_end":557266,"line_start":256,"line_end":256,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557267,"byte_end":557270,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Set the process group id (PGID) of a particular process.  If a pid of zero","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557271,"byte_end":557349,"line_start":258,"line_end":258,"column_start":1,"column_end":79}},{"value":"/ is specified, then the pid of the calling process is used.  Process groups","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557350,"byte_end":557428,"line_start":259,"line_end":259,"column_start":1,"column_end":79}},{"value":"/ may be used to group together a set of processes in order for the OS to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557429,"byte_end":557504,"line_start":260,"line_end":260,"column_start":1,"column_end":76}},{"value":"/ apply some operations across the group.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557505,"byte_end":557548,"line_start":261,"line_end":261,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557549,"byte_end":557552,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ `setsid()` may be used to create a new process group.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557553,"byte_end":557610,"line_start":263,"line_end":263,"column_start":1,"column_end":58}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557611,"byte_end":557620,"line_start":264,"line_end":264,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1800},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557790,"byte_end":557797,"line_start":270,"line_end":270,"column_start":8,"column_end":15},"name":"getpgid","qualname":"::unistd::getpgid","value":"pub fn getpgid(Option<Pid>) -> Result<Pid>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557773,"byte_end":557782,"line_start":269,"line_end":269,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1801},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558097,"byte_end":558103,"line_start":278,"line_end":278,"column_start":8,"column_end":14},"name":"setsid","qualname":"::unistd::setsid","value":"pub fn setsid() -> Result<Pid>","parent":null,"children":[],"decl_id":null,"docs":" Create new session and set process group id (see\n [setsid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/setsid.html)).\n","sig":null,"attributes":[{"value":"/ Create new session and set process group id (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557938,"byte_end":557990,"line_start":275,"line_end":275,"column_start":1,"column_end":53}},{"value":"/ [setsid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/setsid.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":557991,"byte_end":558079,"line_start":276,"line_end":276,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558080,"byte_end":558089,"line_start":277,"line_end":277,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1802},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558499,"byte_end":558505,"line_start":288,"line_end":288,"column_start":8,"column_end":14},"name":"getsid","qualname":"::unistd::getsid","value":"pub fn getsid(Option<Pid>) -> Result<Pid>","parent":null,"children":[],"decl_id":null,"docs":" Get the process group ID of a session leader\n [getsid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getsid.html).","sig":null,"attributes":[{"value":"/ Get the process group ID of a session leader","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558180,"byte_end":558228,"line_start":282,"line_end":282,"column_start":1,"column_end":49}},{"value":"/ [getsid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getsid.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558229,"byte_end":558316,"line_start":283,"line_end":283,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558317,"byte_end":558320,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ Obtain the process group ID of the process that is the session leader of the process specified","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558321,"byte_end":558419,"line_start":285,"line_end":285,"column_start":1,"column_end":99}},{"value":"/ by pid. If pid is zero, it specifies the calling process.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558420,"byte_end":558481,"line_start":286,"line_end":286,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558482,"byte_end":558491,"line_start":287,"line_end":287,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1803},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558937,"byte_end":558946,"line_start":300,"line_end":300,"column_start":8,"column_end":17},"name":"tcgetpgrp","qualname":"::unistd::tcgetpgrp","value":"pub fn tcgetpgrp(c_int) -> Result<Pid>","parent":null,"children":[],"decl_id":null,"docs":" Get the terminal foreground process group (see\n [tcgetpgrp(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcgetpgrp.html)).","sig":null,"attributes":[{"value":"/ Get the terminal foreground process group (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558646,"byte_end":558696,"line_start":294,"line_end":294,"column_start":1,"column_end":51}},{"value":"/ [tcgetpgrp(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcgetpgrp.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558697,"byte_end":558791,"line_start":295,"line_end":295,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558792,"byte_end":558795,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ Get the group process id (GPID) of the foreground process group on the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558796,"byte_end":558870,"line_start":297,"line_end":297,"column_start":1,"column_end":75}},{"value":"/ terminal associated to file descriptor (FD).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558871,"byte_end":558919,"line_start":298,"line_end":298,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":558920,"byte_end":558929,"line_start":299,"line_end":299,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1804},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559346,"byte_end":559355,"line_start":310,"line_end":310,"column_start":8,"column_end":17},"name":"tcsetpgrp","qualname":"::unistd::tcsetpgrp","value":"pub fn tcsetpgrp(c_int, Pid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the terminal foreground process group (see\n [tcgetpgrp(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcsetpgrp.html)).","sig":null,"attributes":[{"value":"/ Set the terminal foreground process group (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559055,"byte_end":559105,"line_start":304,"line_end":304,"column_start":1,"column_end":51}},{"value":"/ [tcgetpgrp(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/tcsetpgrp.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559106,"byte_end":559200,"line_start":305,"line_end":305,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559201,"byte_end":559204,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ Get the group process id (PGID) to the foreground process group on the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559205,"byte_end":559279,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ terminal associated to file descriptor (FD).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559280,"byte_end":559328,"line_start":308,"line_end":308,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559329,"byte_end":559338,"line_start":309,"line_end":309,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1805},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559765,"byte_end":559772,"line_start":322,"line_end":322,"column_start":8,"column_end":15},"name":"getpgrp","qualname":"::unistd::getpgrp","value":"pub fn getpgrp() -> Pid","parent":null,"children":[],"decl_id":null,"docs":" Get the group id of the calling process (see\n[getpgrp(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getpgrp.html)).","sig":null,"attributes":[{"value":"/ Get the group id of the calling process (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559490,"byte_end":559538,"line_start":316,"line_end":316,"column_start":1,"column_end":49}},{"value":"/[getpgrp(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getpgrp.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559539,"byte_end":559628,"line_start":317,"line_end":317,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559629,"byte_end":559632,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ Get the process group id (PGID) of the calling process.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559633,"byte_end":559692,"line_start":319,"line_end":319,"column_start":1,"column_end":60}},{"value":"/ According to the man page it is always successful.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559693,"byte_end":559747,"line_start":320,"line_end":320,"column_start":1,"column_end":55}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559748,"byte_end":559757,"line_start":321,"line_end":321,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1806},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560387,"byte_end":560393,"line_start":338,"line_end":338,"column_start":8,"column_end":14},"name":"gettid","qualname":"::unistd::gettid","value":"pub fn gettid() -> Pid","parent":null,"children":[],"decl_id":null,"docs":" Get the caller's thread ID (see\n [gettid(2)](http://man7.org/linux/man-pages/man2/gettid.2.html).","sig":null,"attributes":[{"value":"/ Get the caller's thread ID (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559823,"byte_end":559858,"line_start":326,"line_end":326,"column_start":1,"column_end":36}},{"value":"/ [gettid(2)](http://man7.org/linux/man-pages/man2/gettid.2.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559859,"byte_end":559927,"line_start":327,"line_end":327,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559928,"byte_end":559931,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ This function is only available on Linux based systems.  In a single","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":559932,"byte_end":560004,"line_start":329,"line_end":329,"column_start":1,"column_end":73}},{"value":"/ threaded process, the main thread will have the same ID as the process.  In","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560005,"byte_end":560084,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"/ a multithreaded process, each thread will have a unique thread id but the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560085,"byte_end":560162,"line_start":331,"line_end":331,"column_start":1,"column_end":78}},{"value":"/ same process ID.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560163,"byte_end":560183,"line_start":332,"line_end":332,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560184,"byte_end":560187,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ No error handling is required as a thread id should always exist for any","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560188,"byte_end":560264,"line_start":334,"line_end":334,"column_start":1,"column_end":77}},{"value":"/ process, even if threads are not being used.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560265,"byte_end":560313,"line_start":335,"line_end":335,"column_start":1,"column_end":49}},{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560314,"byte_end":560369,"line_start":336,"line_end":336,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560370,"byte_end":560379,"line_start":337,"line_end":337,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1807},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561112,"byte_end":561115,"line_start":353,"line_end":353,"column_start":8,"column_end":11},"name":"dup","qualname":"::unistd::dup","value":"pub fn dup(RawFd) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":" Create a copy of the specified file descriptor (see\n [dup(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html)).","sig":null,"attributes":[{"value":"/ Create a copy of the specified file descriptor (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560469,"byte_end":560524,"line_start":342,"line_end":342,"column_start":1,"column_end":56}},{"value":"/ [dup(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560525,"byte_end":560607,"line_start":343,"line_end":343,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560608,"byte_end":560611,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ The new file descriptor will be have a new index but refer to the same","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560612,"byte_end":560686,"line_start":345,"line_end":345,"column_start":1,"column_end":75}},{"value":"/ resource as the old file descriptor and the old and new file descriptors may","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560687,"byte_end":560767,"line_start":346,"line_end":346,"column_start":1,"column_end":81}},{"value":"/ be used interchangeably.  The new and old file descriptor share the same","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560768,"byte_end":560844,"line_start":347,"line_end":347,"column_start":1,"column_end":77}},{"value":"/ underlying resource, offset, and file status flags.  The actual index used","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560845,"byte_end":560923,"line_start":348,"line_end":348,"column_start":1,"column_end":79}},{"value":"/ for the file descriptor will be the lowest fd index that is available.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560924,"byte_end":560998,"line_start":349,"line_end":349,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":560999,"byte_end":561002,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ The two file descriptors do not share file descriptor flags (e.g. `OFlag::FD_CLOEXEC`).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561003,"byte_end":561094,"line_start":351,"line_end":351,"column_start":1,"column_end":92}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561095,"byte_end":561104,"line_start":352,"line_end":352,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1808},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561611,"byte_end":561615,"line_start":366,"line_end":366,"column_start":8,"column_end":12},"name":"dup2","qualname":"::unistd::dup2","value":"pub fn dup2(RawFd, RawFd) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":" Create a copy of the specified file descriptor using the specified fd (see\n [dup(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html)).","sig":null,"attributes":[{"value":"/ Create a copy of the specified file descriptor using the specified fd (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561219,"byte_end":561297,"line_start":359,"line_end":359,"column_start":1,"column_end":79}},{"value":"/ [dup(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561298,"byte_end":561380,"line_start":360,"line_end":360,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561381,"byte_end":561384,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ This function behaves similar to `dup()` except that it will try to use the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561385,"byte_end":561464,"line_start":362,"line_end":362,"column_start":1,"column_end":80}},{"value":"/ specified fd instead of allocating a new one.  See the man pages for more","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561465,"byte_end":561542,"line_start":363,"line_end":363,"column_start":1,"column_end":78}},{"value":"/ detail on the exact behavior of this function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561543,"byte_end":561593,"line_start":364,"line_end":364,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561594,"byte_end":561603,"line_start":365,"line_end":365,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1809},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561997,"byte_end":562001,"line_start":377,"line_end":377,"column_start":8,"column_end":12},"name":"dup3","qualname":"::unistd::dup3","value":"pub fn dup3(RawFd, RawFd, OFlag) -> Result<RawFd>","parent":null,"children":[],"decl_id":null,"docs":" Create a new copy of the specified file descriptor using the specified fd\n and flags (see [dup(2)](http://man7.org/linux/man-pages/man2/dup.2.html)).","sig":null,"attributes":[{"value":"/ Create a new copy of the specified file descriptor using the specified fd","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561741,"byte_end":561818,"line_start":372,"line_end":372,"column_start":1,"column_end":78}},{"value":"/ and flags (see [dup(2)](http://man7.org/linux/man-pages/man2/dup.2.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561819,"byte_end":561897,"line_start":373,"line_end":373,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561898,"byte_end":561901,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ This function behaves similar to `dup2()` but allows for flags to be","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561902,"byte_end":561974,"line_start":375,"line_end":375,"column_start":1,"column_end":73}},{"value":"/ specified.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":561975,"byte_end":561989,"line_start":376,"line_end":376,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1811},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":562815,"byte_end":562820,"line_start":405,"line_end":405,"column_start":8,"column_end":13},"name":"chdir","qualname":"::unistd::chdir","value":"pub fn chdir<P: ?Sized + NixPath>(&P) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the current working directory of the calling process (see\n [chdir(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/chdir.html)).","sig":null,"attributes":[{"value":"/ Change the current working directory of the calling process (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":562502,"byte_end":562570,"line_start":399,"line_end":399,"column_start":1,"column_end":69}},{"value":"/ [chdir(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/chdir.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":562571,"byte_end":562657,"line_start":400,"line_end":400,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":562658,"byte_end":562661,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ This function may fail in a number of different scenarios.  See the man","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":562662,"byte_end":562737,"line_start":402,"line_end":402,"column_start":1,"column_end":76}},{"value":"/ pages for additional details on possible failure cases.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":562738,"byte_end":562797,"line_start":403,"line_end":403,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":562798,"byte_end":562807,"line_start":404,"line_end":404,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1814},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563357,"byte_end":563363,"line_start":420,"line_end":420,"column_start":8,"column_end":14},"name":"fchdir","qualname":"::unistd::fchdir","value":"pub fn fchdir(RawFd) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the current working directory of the process to the one\n given as an open file descriptor (see\n [fchdir(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fchdir.html)).","sig":null,"attributes":[{"value":"/ Change the current working directory of the process to the one","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563002,"byte_end":563068,"line_start":413,"line_end":413,"column_start":1,"column_end":67}},{"value":"/ given as an open file descriptor (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563069,"byte_end":563110,"line_start":414,"line_end":414,"column_start":1,"column_end":42}},{"value":"/ [fchdir(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fchdir.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563111,"byte_end":563199,"line_start":415,"line_end":415,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563200,"byte_end":563203,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ This function may fail in a number of different scenarios.  See the man","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563204,"byte_end":563279,"line_start":417,"line_end":417,"column_start":1,"column_end":76}},{"value":"/ pages for additional details on possible failure cases.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563280,"byte_end":563339,"line_start":418,"line_end":418,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563340,"byte_end":563349,"line_start":419,"line_end":419,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1815},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564494,"byte_end":564499,"line_start":458,"line_end":458,"column_start":8,"column_end":13},"name":"mkdir","qualname":"::unistd::mkdir","value":"pub fn mkdir<P: ?Sized + NixPath>(&P, Mode) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates new directory `path` with access rights `mode`.  (see [mkdir(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mkdir.html))","sig":null,"attributes":[{"value":"/ Creates new directory `path` with access rights `mode`.  (see [mkdir(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mkdir.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563477,"byte_end":563624,"line_start":426,"line_end":426,"column_start":1,"column_end":148}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563625,"byte_end":563628,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563629,"byte_end":563641,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563642,"byte_end":563645,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ There are several situations where mkdir might fail:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563646,"byte_end":563702,"line_start":430,"line_end":430,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563703,"byte_end":563706,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ - current user has insufficient rights in the parent directory","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563707,"byte_end":563773,"line_start":432,"line_end":432,"column_start":1,"column_end":67}},{"value":"/ - the path already exists","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563774,"byte_end":563803,"line_start":433,"line_end":433,"column_start":1,"column_end":30}},{"value":"/ - the path name is too long (longer than `PATH_MAX`, usually 4096 on linux, 1024 on OS X)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563804,"byte_end":563897,"line_start":434,"line_end":434,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563898,"byte_end":563901,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563902,"byte_end":563915,"line_start":436,"line_end":436,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563916,"byte_end":563919,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563920,"byte_end":563931,"line_start":438,"line_end":438,"column_start":1,"column_end":12}},{"value":"/ extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563932,"byte_end":563958,"line_start":439,"line_end":439,"column_start":1,"column_end":27}},{"value":"/ extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563959,"byte_end":563980,"line_start":440,"line_end":440,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563981,"byte_end":563984,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ use nix::unistd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":563985,"byte_end":564005,"line_start":442,"line_end":442,"column_start":1,"column_end":21}},{"value":"/ use nix::sys::stat;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564006,"byte_end":564029,"line_start":443,"line_end":443,"column_start":1,"column_end":24}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564030,"byte_end":564056,"line_start":444,"line_end":444,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564057,"byte_end":564060,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564061,"byte_end":564076,"line_start":446,"line_end":446,"column_start":1,"column_end":16}},{"value":"/     let tmp_dir1 = tempdir().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564077,"byte_end":564119,"line_start":447,"line_end":447,"column_start":1,"column_end":43}},{"value":"/     let tmp_dir2 = tmp_dir1.path().join(\"new_dir\");","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564120,"byte_end":564175,"line_start":448,"line_end":448,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564176,"byte_end":564179,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/     // create new directory and give read, write and execute rights to the owner","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564180,"byte_end":564264,"line_start":450,"line_end":450,"column_start":1,"column_end":85}},{"value":"/     match unistd::mkdir(&tmp_dir2, stat::Mode::S_IRWXU) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564265,"byte_end":564326,"line_start":451,"line_end":451,"column_start":1,"column_end":62}},{"value":"/        Ok(_) => println!(\"created {:?}\", tmp_dir2),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564327,"byte_end":564382,"line_start":452,"line_end":452,"column_start":1,"column_end":56}},{"value":"/        Err(err) => println!(\"Error creating directory: {}\", err),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564383,"byte_end":564452,"line_start":453,"line_end":453,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564453,"byte_end":564462,"line_start":454,"line_end":454,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564463,"byte_end":564468,"line_start":455,"line_end":455,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564469,"byte_end":564476,"line_start":456,"line_end":456,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564477,"byte_end":564486,"line_start":457,"line_end":457,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1818},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565798,"byte_end":565804,"line_start":501,"line_end":501,"column_start":8,"column_end":14},"name":"mkfifo","qualname":"::unistd::mkfifo","value":"pub fn mkfifo<P: ?Sized + NixPath>(&P, Mode) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates new fifo special file (named pipe) with path `path` and access rights `mode`.","sig":null,"attributes":[{"value":"/ Creates new fifo special file (named pipe) with path `path` and access rights `mode`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564716,"byte_end":564805,"line_start":466,"line_end":466,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564806,"byte_end":564809,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564810,"byte_end":564822,"line_start":468,"line_end":468,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564823,"byte_end":564826,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ There are several situations where mkfifo might fail:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564827,"byte_end":564884,"line_start":470,"line_end":470,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564885,"byte_end":564888,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ - current user has insufficient rights in the parent directory","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564889,"byte_end":564955,"line_start":472,"line_end":472,"column_start":1,"column_end":67}},{"value":"/ - the path already exists","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564956,"byte_end":564985,"line_start":473,"line_end":473,"column_start":1,"column_end":30}},{"value":"/ - the path name is too long (longer than `PATH_MAX`, usually 4096 on linux, 1024 on OS X)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":564986,"byte_end":565079,"line_start":474,"line_end":474,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565080,"byte_end":565083,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ For a full list consult","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565084,"byte_end":565111,"line_start":476,"line_end":476,"column_start":1,"column_end":28}},{"value":"/ [posix specification](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mkfifo.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565112,"byte_end":565208,"line_start":477,"line_end":477,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565209,"byte_end":565212,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565213,"byte_end":565226,"line_start":479,"line_end":479,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565227,"byte_end":565230,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565231,"byte_end":565242,"line_start":481,"line_end":481,"column_start":1,"column_end":12}},{"value":"/ extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565243,"byte_end":565269,"line_start":482,"line_end":482,"column_start":1,"column_end":27}},{"value":"/ extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565270,"byte_end":565291,"line_start":483,"line_end":483,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565292,"byte_end":565295,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ use nix::unistd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565296,"byte_end":565316,"line_start":485,"line_end":485,"column_start":1,"column_end":21}},{"value":"/ use nix::sys::stat;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565317,"byte_end":565340,"line_start":486,"line_end":486,"column_start":1,"column_end":24}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565341,"byte_end":565367,"line_start":487,"line_end":487,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565368,"byte_end":565371,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565372,"byte_end":565387,"line_start":489,"line_end":489,"column_start":1,"column_end":16}},{"value":"/     let tmp_dir = tempdir().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565388,"byte_end":565429,"line_start":490,"line_end":490,"column_start":1,"column_end":42}},{"value":"/     let fifo_path = tmp_dir.path().join(\"foo.pipe\");","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565430,"byte_end":565486,"line_start":491,"line_end":491,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565487,"byte_end":565490,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/     // create new fifo and give read, write and execute rights to the owner","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565491,"byte_end":565570,"line_start":493,"line_end":493,"column_start":1,"column_end":80}},{"value":"/     match unistd::mkfifo(&fifo_path, stat::Mode::S_IRWXU) {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565571,"byte_end":565634,"line_start":494,"line_end":494,"column_start":1,"column_end":64}},{"value":"/        Ok(_) => println!(\"created {:?}\", fifo_path),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565635,"byte_end":565691,"line_start":495,"line_end":495,"column_start":1,"column_end":57}},{"value":"/        Err(err) => println!(\"Error creating fifo: {}\", err),","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565692,"byte_end":565756,"line_start":496,"line_end":496,"column_start":1,"column_end":65}},{"value":"/     }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565757,"byte_end":565766,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565767,"byte_end":565772,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565773,"byte_end":565780,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":565781,"byte_end":565790,"line_start":500,"line_end":500,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1821},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566456,"byte_end":566465,"line_start":518,"line_end":518,"column_start":8,"column_end":17},"name":"symlinkat","qualname":"::unistd::symlinkat","value":"pub fn symlinkat<P1: ?Sized + NixPath, P2: ?Sized +\n                 NixPath>(&P1, Option<RawFd>, &P2) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a symbolic link at `path2` which points to `path1`.","sig":null,"attributes":[{"value":"/ Creates a symbolic link at `path2` which points to `path1`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566022,"byte_end":566085,"line_start":509,"line_end":509,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566086,"byte_end":566089,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ If `dirfd` has a value, then `path2` is relative to directory associated","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566090,"byte_end":566166,"line_start":511,"line_end":511,"column_start":1,"column_end":77}},{"value":"/ with the file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566167,"byte_end":566196,"line_start":512,"line_end":512,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566197,"byte_end":566200,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ If `dirfd` is `None`, then `path2` is relative to the current working","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566201,"byte_end":566274,"line_start":514,"line_end":514,"column_start":1,"column_end":74}},{"value":"/ directory. This is identical to `libc::symlink(path1, path2)`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566275,"byte_end":566341,"line_start":515,"line_end":515,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566342,"byte_end":566345,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ See also [symlinkat(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/symlinkat.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566346,"byte_end":566448,"line_start":517,"line_end":517,"column_start":1,"column_end":103}}]},{"kind":"Function","id":{"krate":0,"index":1826},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567454,"byte_end":567460,"line_start":556,"line_end":556,"column_start":8,"column_end":14},"name":"getcwd","qualname":"::unistd::getcwd","value":"pub fn getcwd() -> Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current directory as a `PathBuf`","sig":null,"attributes":[{"value":"/ Returns the current directory as a `PathBuf`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":566982,"byte_end":567030,"line_start":537,"line_end":537,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567031,"byte_end":567034,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ Err is returned if the current user doesn't have the permission to read or search a component","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567035,"byte_end":567132,"line_start":539,"line_end":539,"column_start":1,"column_end":98}},{"value":"/ of the current path.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567133,"byte_end":567157,"line_start":540,"line_end":540,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567158,"byte_end":567161,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567162,"byte_end":567175,"line_start":542,"line_end":542,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567176,"byte_end":567179,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567180,"byte_end":567191,"line_start":544,"line_end":544,"column_start":1,"column_end":12}},{"value":"/ extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567192,"byte_end":567213,"line_start":545,"line_end":545,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567214,"byte_end":567217,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ use nix::unistd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567218,"byte_end":567238,"line_start":547,"line_end":547,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567239,"byte_end":567242,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567243,"byte_end":567258,"line_start":549,"line_end":549,"column_start":1,"column_end":16}},{"value":"/     // assume that we are allowed to get current directory","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567259,"byte_end":567321,"line_start":550,"line_end":550,"column_start":1,"column_end":63}},{"value":"/     let dir = unistd::getcwd().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567322,"byte_end":567366,"line_start":551,"line_end":551,"column_start":1,"column_end":45}},{"value":"/     println!(\"The current directory is {:?}\", dir);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567367,"byte_end":567422,"line_start":552,"line_end":552,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567423,"byte_end":567428,"line_start":553,"line_end":553,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567429,"byte_end":567436,"line_start":554,"line_end":554,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":567437,"byte_end":567446,"line_start":555,"line_end":555,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1828},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":569665,"byte_end":569670,"line_start":606,"line_end":606,"column_start":8,"column_end":13},"name":"chown","qualname":"::unistd::chown","value":"pub fn chown<P: ?Sized + NixPath>(&P, Option<Uid>, Option<Gid>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the ownership of the file at `path` to be owned by the specified\n `owner` (user) and `group` (see\n [chown(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/chown.html)).","sig":null,"attributes":[{"value":"/ Change the ownership of the file at `path` to be owned by the specified","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":569239,"byte_end":569314,"line_start":598,"line_end":598,"column_start":1,"column_end":76}},{"value":"/ `owner` (user) and `group` (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":569315,"byte_end":569350,"line_start":599,"line_end":599,"column_start":1,"column_end":36}},{"value":"/ [chown(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/chown.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":569351,"byte_end":569437,"line_start":600,"line_end":600,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":569438,"byte_end":569441,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ The owner/group for the provided path name will not be modified if `None` is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":569442,"byte_end":569522,"line_start":602,"line_end":602,"column_start":1,"column_end":81}},{"value":"/ provided for that argument.  Ownership change will be attempted for the path","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":569523,"byte_end":569603,"line_start":603,"line_end":603,"column_start":1,"column_end":81}},{"value":"/ only if `Some` owner/group is provided.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":569604,"byte_end":569647,"line_start":604,"line_end":604,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":569648,"byte_end":569657,"line_start":605,"line_end":605,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9282},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570050,"byte_end":570063,"line_start":618,"line_end":618,"column_start":5,"column_end":18},"name":"FollowSymlink","qualname":"::unistd::FchownatFlags::FollowSymlink","value":"FchownatFlags::FollowSymlink","parent":{"krate":0,"index":9281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9284},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570069,"byte_end":570084,"line_start":619,"line_end":619,"column_start":5,"column_end":20},"name":"NoFollowSymlink","qualname":"::unistd::FchownatFlags::NoFollowSymlink","value":"FchownatFlags::NoFollowSymlink","parent":{"krate":0,"index":9281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9281},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570030,"byte_end":570043,"line_start":617,"line_end":617,"column_start":10,"column_end":23},"name":"FchownatFlags","qualname":"::unistd::FchownatFlags","value":"pub enum FchownatFlags { FollowSymlink, NoFollowSymlink, }","parent":null,"children":[{"krate":0,"index":9282},{"krate":0,"index":9284}],"decl_id":null,"docs":" Flags for `fchownat` function.\n","sig":null,"attributes":[{"value":"/ Flags for `fchownat` function.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":569956,"byte_end":569990,"line_start":615,"line_end":615,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1831},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":571034,"byte_end":571042,"line_start":643,"line_end":643,"column_start":8,"column_end":16},"name":"fchownat","qualname":"::unistd::fchownat","value":"pub fn fchownat<P: ?Sized +\n                NixPath>(Option<RawFd>, &P, Option<Uid>, Option<Gid>,\n                         FchownatFlags) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Change the ownership of the file at `path` to be owned by the specified\n `owner` (user) and `group`.","sig":null,"attributes":[{"value":"/ Change the ownership of the file at `path` to be owned by the specified","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570089,"byte_end":570164,"line_start":622,"line_end":622,"column_start":1,"column_end":76}},{"value":"/ `owner` (user) and `group`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570165,"byte_end":570196,"line_start":623,"line_end":623,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570197,"byte_end":570200,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ The owner/group for the provided path name will not be modified if `None` is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570201,"byte_end":570281,"line_start":625,"line_end":625,"column_start":1,"column_end":81}},{"value":"/ provided for that argument.  Ownership change will be attempted for the path","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570282,"byte_end":570362,"line_start":626,"line_end":626,"column_start":1,"column_end":81}},{"value":"/ only if `Some` owner/group is provided.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570363,"byte_end":570406,"line_start":627,"line_end":627,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570407,"byte_end":570410,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ The file to be changed is determined relative to the directory associated","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570411,"byte_end":570488,"line_start":629,"line_end":629,"column_start":1,"column_end":78}},{"value":"/ with the file descriptor `dirfd` or the current working directory","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570489,"byte_end":570558,"line_start":630,"line_end":630,"column_start":1,"column_end":70}},{"value":"/ if `dirfd` is `None`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570559,"byte_end":570584,"line_start":631,"line_end":631,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570585,"byte_end":570588,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ If `flag` is `FchownatFlags::NoFollowSymlink` and `path` names a symbolic link,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570589,"byte_end":570672,"line_start":633,"line_end":633,"column_start":1,"column_end":84}},{"value":"/ then the mode of the symbolic link is changed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570673,"byte_end":570723,"line_start":634,"line_end":634,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570724,"byte_end":570727,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ `fchownat(None, path, mode, FchownatFlags::NoFollowSymlink)` is identical to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570728,"byte_end":570808,"line_start":636,"line_end":636,"column_start":1,"column_end":81}},{"value":"/ a call `libc::lchown(path, mode)`.  That's why `lchmod` is unimplemented in","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570809,"byte_end":570888,"line_start":637,"line_end":637,"column_start":1,"column_end":80}},{"value":"/ the `nix` crate.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570889,"byte_end":570909,"line_start":638,"line_end":638,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570910,"byte_end":570913,"line_start":639,"line_end":639,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570914,"byte_end":570930,"line_start":640,"line_end":640,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570931,"byte_end":570934,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ [fchownat(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fchownat.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":570935,"byte_end":571026,"line_start":642,"line_end":642,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":1836},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572192,"byte_end":572197,"line_start":677,"line_end":677,"column_start":8,"column_end":13},"name":"execv","qualname":"::unistd::execv","value":"pub fn execv(&CString, &[CString]) -> Result<Void>","parent":null,"children":[],"decl_id":null,"docs":" Replace the current process image with a new one (see\n [exec(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html)).","sig":null,"attributes":[{"value":"/ Replace the current process image with a new one (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":571837,"byte_end":571894,"line_start":670,"line_end":670,"column_start":1,"column_end":58}},{"value":"/ [exec(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":571895,"byte_end":571979,"line_start":671,"line_end":671,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":571980,"byte_end":571983,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ See the `::nix::unistd::execve` system call for additional details.  `execv`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":571984,"byte_end":572064,"line_start":673,"line_end":673,"column_start":1,"column_end":81}},{"value":"/ performs the same action but does not allow for customization of the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572065,"byte_end":572137,"line_start":674,"line_end":674,"column_start":1,"column_end":73}},{"value":"/ environment for the new process.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572138,"byte_end":572174,"line_start":675,"line_end":675,"column_start":1,"column_end":37}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572175,"byte_end":572184,"line_start":676,"line_end":676,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1837},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573149,"byte_end":573155,"line_start":701,"line_end":701,"column_start":8,"column_end":14},"name":"execve","qualname":"::unistd::execve","value":"pub fn execve(&CString, &[CString], &[CString]) -> Result<Void>","parent":null,"children":[],"decl_id":null,"docs":" Replace the current process image with a new one (see\n [execve(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html)).","sig":null,"attributes":[{"value":"/ Replace the current process image with a new one (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572401,"byte_end":572458,"line_start":688,"line_end":688,"column_start":1,"column_end":58}},{"value":"/ [execve(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572459,"byte_end":572545,"line_start":689,"line_end":689,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572546,"byte_end":572549,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ The execve system call allows for another process to be \"called\" which will","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572550,"byte_end":572629,"line_start":691,"line_end":691,"column_start":1,"column_end":80}},{"value":"/ replace the current process image.  That is, this process becomes the new","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572630,"byte_end":572707,"line_start":692,"line_end":692,"column_start":1,"column_end":78}},{"value":"/ command that is run. On success, this function will not return. Instead,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572708,"byte_end":572784,"line_start":693,"line_end":693,"column_start":1,"column_end":77}},{"value":"/ the new program will run until it exits.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572785,"byte_end":572829,"line_start":694,"line_end":694,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572830,"byte_end":572833,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ `::nix::unistd::execv` and `::nix::unistd::execve` take as arguments a slice","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572834,"byte_end":572914,"line_start":696,"line_end":696,"column_start":1,"column_end":81}},{"value":"/ of `::std::ffi::CString`s for `args` and `env` (for `execve`). Each element","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572915,"byte_end":572994,"line_start":697,"line_end":697,"column_start":1,"column_end":80}},{"value":"/ in the `args` list is an argument to the new process. Each element in the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":572995,"byte_end":573072,"line_start":698,"line_end":698,"column_start":1,"column_end":78}},{"value":"/ `env` list should be a string in the form \"key=value\".","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573073,"byte_end":573131,"line_start":699,"line_end":699,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573132,"byte_end":573141,"line_start":700,"line_end":700,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1838},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574023,"byte_end":574029,"line_start":722,"line_end":722,"column_start":8,"column_end":14},"name":"execvp","qualname":"::unistd::execvp","value":"pub fn execvp(&CString, &[CString]) -> Result<Void>","parent":null,"children":[],"decl_id":null,"docs":" Replace the current process image with a new one and replicate shell `PATH`\n searching behavior (see\n [exec(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html)).","sig":null,"attributes":[{"value":"/ Replace the current process image with a new one and replicate shell `PATH`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573428,"byte_end":573507,"line_start":712,"line_end":712,"column_start":1,"column_end":80}},{"value":"/ searching behavior (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573508,"byte_end":573535,"line_start":713,"line_end":713,"column_start":1,"column_end":28}},{"value":"/ [exec(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/exec.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573536,"byte_end":573620,"line_start":714,"line_end":714,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573621,"byte_end":573624,"line_start":715,"line_end":715,"column_start":1,"column_end":4}},{"value":"/ See `::nix::unistd::execve` for additional details.  `execvp` behaves the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573625,"byte_end":573702,"line_start":716,"line_end":716,"column_start":1,"column_end":78}},{"value":"/ same as execv except that it will examine the `PATH` environment variables","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573703,"byte_end":573781,"line_start":717,"line_end":717,"column_start":1,"column_end":79}},{"value":"/ for file names not specified with a leading slash.  For example, `execv`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573782,"byte_end":573858,"line_start":718,"line_end":718,"column_start":1,"column_end":77}},{"value":"/ would not work if \"bash\" was specified for the path argument, but `execvp`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573859,"byte_end":573937,"line_start":719,"line_end":719,"column_start":1,"column_end":79}},{"value":"/ would assuming that a bash executable was on the system `PATH`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":573938,"byte_end":574005,"line_start":720,"line_end":720,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574006,"byte_end":574015,"line_start":721,"line_end":721,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1839},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574694,"byte_end":574701,"line_start":742,"line_end":742,"column_start":8,"column_end":15},"name":"execvpe","qualname":"::unistd::execvpe","value":"pub fn execvpe(&CString, &[CString], &[CString]) -> Result<Void>","parent":null,"children":[],"decl_id":null,"docs":" Replace the current process image with a new one and replicate shell `PATH`\n searching behavior (see\n [`execvpe(3)`](http://man7.org/linux/man-pages/man3/exec.3.html)).","sig":null,"attributes":[{"value":"/ Replace the current process image with a new one and replicate shell `PATH`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574241,"byte_end":574320,"line_start":732,"line_end":732,"column_start":1,"column_end":80}},{"value":"/ searching behavior (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574321,"byte_end":574348,"line_start":733,"line_end":733,"column_start":1,"column_end":28}},{"value":"/ [`execvpe(3)`](http://man7.org/linux/man-pages/man3/exec.3.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574349,"byte_end":574419,"line_start":734,"line_end":734,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574420,"byte_end":574423,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ This functions like a combination of `execvp(2)` and `execve(2)` to pass an","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574424,"byte_end":574503,"line_start":736,"line_end":736,"column_start":1,"column_end":80}},{"value":"/ environment and have a search path. See these two for additional","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574504,"byte_end":574572,"line_start":737,"line_end":737,"column_start":1,"column_end":69}},{"value":"/ information.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574573,"byte_end":574589,"line_start":738,"line_end":738,"column_start":1,"column_end":17}},{"value":"cfg(any(target_os = \"haiku\", target_os = \"linux\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574590,"byte_end":574686,"line_start":739,"line_end":741,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1840},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575841,"byte_end":575848,"line_start":770,"line_end":770,"column_start":8,"column_end":15},"name":"fexecve","qualname":"::unistd::fexecve","value":"pub fn fexecve(RawFd, &[CString], &[CString]) -> Result<Void>","parent":null,"children":[],"decl_id":null,"docs":" Replace the current process image with a new one (see\n [fexecve(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fexecve.html)).","sig":null,"attributes":[{"value":"/ Replace the current process image with a new one (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":574983,"byte_end":575040,"line_start":753,"line_end":753,"column_start":1,"column_end":58}},{"value":"/ [fexecve(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fexecve.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575041,"byte_end":575131,"line_start":754,"line_end":754,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575132,"byte_end":575135,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ The `fexecve` function allows for another process to be \"called\" which will","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575136,"byte_end":575215,"line_start":756,"line_end":756,"column_start":1,"column_end":80}},{"value":"/ replace the current process image.  That is, this process becomes the new","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575216,"byte_end":575293,"line_start":757,"line_end":757,"column_start":1,"column_end":78}},{"value":"/ command that is run. On success, this function will not return. Instead,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575294,"byte_end":575370,"line_start":758,"line_end":758,"column_start":1,"column_end":77}},{"value":"/ the new program will run until it exits.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575371,"byte_end":575415,"line_start":759,"line_end":759,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575416,"byte_end":575419,"line_start":760,"line_end":760,"column_start":1,"column_end":4}},{"value":"/ This function is similar to `execve`, except that the program to be executed","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575420,"byte_end":575500,"line_start":761,"line_end":761,"column_start":1,"column_end":81}},{"value":"/ is referenced as a file descriptor instead of a path.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575501,"byte_end":575558,"line_start":762,"line_end":762,"column_start":1,"column_end":58}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\", target_os = \"freebsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575725,"byte_end":575823,"line_start":766,"line_end":768,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":575824,"byte_end":575833,"line_start":769,"line_end":769,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1841},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576762,"byte_end":576770,"line_start":793,"line_end":793,"column_start":8,"column_end":16},"name":"execveat","qualname":"::unistd::execveat","value":"pub fn execveat(RawFd, &CString, &[CString], &[CString],\n                super::fcntl::AtFlags) -> Result<Void>","parent":null,"children":[],"decl_id":null,"docs":" Execute program relative to a directory file descriptor (see\n [execveat(2)](http://man7.org/linux/man-pages/man2/execveat.2.html)).","sig":null,"attributes":[{"value":"/ Execute program relative to a directory file descriptor (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576106,"byte_end":576170,"line_start":781,"line_end":781,"column_start":1,"column_end":65}},{"value":"/ [execveat(2)](http://man7.org/linux/man-pages/man2/execveat.2.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576171,"byte_end":576244,"line_start":782,"line_end":782,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576245,"byte_end":576248,"line_start":783,"line_end":783,"column_start":1,"column_end":4}},{"value":"/ The `execveat` function allows for another process to be \"called\" which will","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576249,"byte_end":576329,"line_start":784,"line_end":784,"column_start":1,"column_end":81}},{"value":"/ replace the current process image.  That is, this process becomes the new","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576330,"byte_end":576407,"line_start":785,"line_end":785,"column_start":1,"column_end":78}},{"value":"/ command that is run. On success, this function will not return. Instead,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576408,"byte_end":576484,"line_start":786,"line_end":786,"column_start":1,"column_end":77}},{"value":"/ the new program will run until it exits.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576485,"byte_end":576529,"line_start":787,"line_end":787,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576530,"byte_end":576533,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ This function is similar to `execve`, except that the program to be executed","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576534,"byte_end":576614,"line_start":789,"line_end":789,"column_start":1,"column_end":81}},{"value":"/ is referenced as a file descriptor to the base directory plus a path.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576615,"byte_end":576688,"line_start":790,"line_end":790,"column_start":1,"column_end":74}},{"value":"cfg(any(target_os = \"android\", target_os = \"linux\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576689,"byte_end":576744,"line_start":791,"line_end":791,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":576745,"byte_end":576754,"line_start":792,"line_end":792,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1842},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578453,"byte_end":578459,"line_start":836,"line_end":836,"column_start":8,"column_end":14},"name":"daemon","qualname":"::unistd::daemon","value":"pub fn daemon(bool, bool) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Daemonize this process by detaching from the controlling terminal (see\n [daemon(3)](http://man7.org/linux/man-pages/man3/daemon.3.html)).","sig":null,"attributes":[{"value":"/ Daemonize this process by detaching from the controlling terminal (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577169,"byte_end":577243,"line_start":806,"line_end":806,"column_start":1,"column_end":75}},{"value":"/ [daemon(3)](http://man7.org/linux/man-pages/man3/daemon.3.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577244,"byte_end":577313,"line_start":807,"line_end":807,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577314,"byte_end":577317,"line_start":808,"line_end":808,"column_start":1,"column_end":4}},{"value":"/ When a process is launched it is typically associated with a parent and it,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577318,"byte_end":577397,"line_start":809,"line_end":809,"column_start":1,"column_end":80}},{"value":"/ in turn, by its controlling terminal/process.  In order for a process to run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577398,"byte_end":577478,"line_start":810,"line_end":810,"column_start":1,"column_end":81}},{"value":"/ in the \"background\" it must daemonize itself by detaching itself.  Under","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577479,"byte_end":577555,"line_start":811,"line_end":811,"column_start":1,"column_end":77}},{"value":"/ posix, this is done by doing the following:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577556,"byte_end":577603,"line_start":812,"line_end":812,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577604,"byte_end":577607,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ 1. Parent process (this one) forks","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577608,"byte_end":577646,"line_start":814,"line_end":814,"column_start":1,"column_end":39}},{"value":"/ 2. Parent process exits","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577647,"byte_end":577674,"line_start":815,"line_end":815,"column_start":1,"column_end":28}},{"value":"/ 3. Child process continues to run.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577675,"byte_end":577713,"line_start":816,"line_end":816,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577714,"byte_end":577717,"line_start":817,"line_end":817,"column_start":1,"column_end":4}},{"value":"/ `nochdir`:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577718,"byte_end":577732,"line_start":818,"line_end":818,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577733,"byte_end":577736,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ * `nochdir = true`: The current working directory after daemonizing will","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577737,"byte_end":577813,"line_start":820,"line_end":820,"column_start":1,"column_end":77}},{"value":"/    be the current working directory.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577814,"byte_end":577854,"line_start":821,"line_end":821,"column_start":1,"column_end":41}},{"value":"/ *  `nochdir = false`: The current working directory after daemonizing will","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577855,"byte_end":577933,"line_start":822,"line_end":822,"column_start":1,"column_end":79}},{"value":"/    be the root direcory, `/`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577934,"byte_end":577967,"line_start":823,"line_end":823,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577968,"byte_end":577971,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ `noclose`:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577972,"byte_end":577986,"line_start":825,"line_end":825,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577987,"byte_end":577990,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ * `noclose = true`: The process' current stdin, stdout, and stderr file","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":577991,"byte_end":578066,"line_start":827,"line_end":827,"column_start":1,"column_end":76}},{"value":"/   descriptors will remain identical after daemonizing.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578067,"byte_end":578125,"line_start":828,"line_end":828,"column_start":1,"column_end":59}},{"value":"/ * `noclose = false`: The process' stdin, stdout, and stderr will point to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578126,"byte_end":578203,"line_start":829,"line_end":829,"column_start":1,"column_end":78}},{"value":"/   `/dev/null` after daemonizing.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578204,"byte_end":578240,"line_start":830,"line_end":830,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1843},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":579021,"byte_end":579032,"line_start":848,"line_end":848,"column_start":8,"column_end":19},"name":"sethostname","qualname":"::unistd::sethostname","value":"pub fn sethostname<S: AsRef<OsStr>>(S) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the system host name (see\n [sethostname(2)](http://man7.org/linux/man-pages/man2/gethostname.2.html)).","sig":null,"attributes":[{"value":"/ Set the system host name (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578617,"byte_end":578650,"line_start":841,"line_end":841,"column_start":1,"column_end":34}},{"value":"/ [sethostname(2)](http://man7.org/linux/man-pages/man2/gethostname.2.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578651,"byte_end":578730,"line_start":842,"line_end":842,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578731,"byte_end":578734,"line_start":843,"line_end":843,"column_start":1,"column_end":4}},{"value":"/ Given a name, attempt to update the system host name to the given string.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578735,"byte_end":578812,"line_start":844,"line_end":844,"column_start":1,"column_end":78}},{"value":"/ On some systems, the host name is limited to as few as 64 bytes.  An error","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578813,"byte_end":578891,"line_start":845,"line_end":845,"column_start":1,"column_end":79}},{"value":"/ will be return if the name is not valid or the current process does not have","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578892,"byte_end":578972,"line_start":846,"line_end":846,"column_start":1,"column_end":81}},{"value":"/ permissions to update the host name.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":578973,"byte_end":579013,"line_start":847,"line_end":847,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1845},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580715,"byte_end":580726,"line_start":887,"line_end":887,"column_start":8,"column_end":19},"name":"gethostname","qualname":"::unistd::gethostname","value":"pub fn gethostname(&mut [u8]) -> Result<&CStr>","parent":null,"children":[],"decl_id":null,"docs":" Get the host name and store it in the provided buffer, returning a pointer\n the `CStr` in that buffer on success (see\n [gethostname(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/gethostname.html)).","sig":null,"attributes":[{"value":"/ Get the host name and store it in the provided buffer, returning a pointer","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":579674,"byte_end":579752,"line_start":867,"line_end":867,"column_start":1,"column_end":79}},{"value":"/ the `CStr` in that buffer on success (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":579753,"byte_end":579798,"line_start":868,"line_end":868,"column_start":1,"column_end":46}},{"value":"/ [gethostname(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/gethostname.html)).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":579799,"byte_end":579897,"line_start":869,"line_end":869,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":579898,"byte_end":579901,"line_start":870,"line_end":870,"column_start":1,"column_end":4}},{"value":"/ This function call attempts to get the host name for the running system and","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":579902,"byte_end":579981,"line_start":871,"line_end":871,"column_start":1,"column_end":80}},{"value":"/ store it in a provided buffer.  The buffer will be populated with bytes up","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":579982,"byte_end":580060,"line_start":872,"line_end":872,"column_start":1,"column_end":79}},{"value":"/ to the length of the provided slice including a NUL terminating byte.  If","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580061,"byte_end":580138,"line_start":873,"line_end":873,"column_start":1,"column_end":78}},{"value":"/ the hostname is longer than the length provided, no error will be provided.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580139,"byte_end":580218,"line_start":874,"line_end":874,"column_start":1,"column_end":80}},{"value":"/ The posix specification does not specify whether implementations will","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580219,"byte_end":580292,"line_start":875,"line_end":875,"column_start":1,"column_end":74}},{"value":"/ null-terminate in this case, but the nix implementation will ensure that the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580293,"byte_end":580373,"line_start":876,"line_end":876,"column_start":1,"column_end":81}},{"value":"/ buffer is null terminated in this case.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580374,"byte_end":580417,"line_start":877,"line_end":877,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580418,"byte_end":580421,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580422,"byte_end":580435,"line_start":879,"line_end":879,"column_start":1,"column_end":14}},{"value":"/ use nix::unistd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580436,"byte_end":580456,"line_start":880,"line_end":880,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580457,"byte_end":580460,"line_start":881,"line_end":881,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 64];","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580461,"byte_end":580489,"line_start":882,"line_end":882,"column_start":1,"column_end":29}},{"value":"/ let hostname_cstr = unistd::gethostname(&mut buf).expect(\"Failed getting hostname\");","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580490,"byte_end":580578,"line_start":883,"line_end":883,"column_start":1,"column_end":89}},{"value":"/ let hostname = hostname_cstr.to_str().expect(\"Hostname wasn't valid UTF-8\");","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580579,"byte_end":580659,"line_start":884,"line_end":884,"column_start":1,"column_end":81}},{"value":"/ println!(\"Hostname: {}\", hostname);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580660,"byte_end":580699,"line_start":885,"line_end":885,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":580700,"byte_end":580707,"line_start":886,"line_end":886,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1847},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582097,"byte_end":582102,"line_start":933,"line_end":933,"column_start":8,"column_end":13},"name":"close","qualname":"::unistd::close","value":"pub fn close(RawFd) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Close a raw file descriptor","sig":null,"attributes":[{"value":"/ Close a raw file descriptor","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581081,"byte_end":581112,"line_start":898,"line_end":898,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581113,"byte_end":581116,"line_start":899,"line_end":899,"column_start":1,"column_end":4}},{"value":"/ Be aware that many Rust types implicitly close-on-drop, including","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581117,"byte_end":581186,"line_start":900,"line_end":900,"column_start":1,"column_end":70}},{"value":"/ `std::fs::File`.  Explicitly closing them with this method too can result in","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581187,"byte_end":581267,"line_start":901,"line_end":901,"column_start":1,"column_end":81}},{"value":"/ a double-close condition, which can cause confusing `EBADF` errors in","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581268,"byte_end":581341,"line_start":902,"line_end":902,"column_start":1,"column_end":74}},{"value":"/ seemingly unrelated code.  Caveat programmer.  See also","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581342,"byte_end":581401,"line_start":903,"line_end":903,"column_start":1,"column_end":60}},{"value":"/ [close(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/close.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581402,"byte_end":581487,"line_start":904,"line_end":904,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581488,"byte_end":581491,"line_start":905,"line_end":905,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581492,"byte_end":581506,"line_start":906,"line_end":906,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581507,"byte_end":581510,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581511,"byte_end":581524,"line_start":908,"line_end":908,"column_start":1,"column_end":14}},{"value":"/ extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581525,"byte_end":581551,"line_start":909,"line_end":909,"column_start":1,"column_end":27}},{"value":"/ extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581552,"byte_end":581573,"line_start":910,"line_end":910,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581574,"byte_end":581577,"line_start":911,"line_end":911,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::AsRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581578,"byte_end":581613,"line_start":912,"line_end":912,"column_start":1,"column_end":36}},{"value":"/ use nix::unistd::close;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581614,"byte_end":581641,"line_start":913,"line_end":913,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581642,"byte_end":581645,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581646,"byte_end":581661,"line_start":915,"line_end":915,"column_start":1,"column_end":16}},{"value":"/     let f = tempfile::tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581662,"byte_end":581708,"line_start":916,"line_end":916,"column_start":1,"column_end":47}},{"value":"/     close(f.as_raw_fd()).unwrap();   // Bad!  f will also close on drop!","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581709,"byte_end":581785,"line_start":917,"line_end":917,"column_start":1,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581786,"byte_end":581791,"line_start":918,"line_end":918,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581792,"byte_end":581799,"line_start":919,"line_end":919,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581800,"byte_end":581803,"line_start":920,"line_end":920,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581804,"byte_end":581815,"line_start":921,"line_end":921,"column_start":1,"column_end":12}},{"value":"/ extern crate tempfile;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581816,"byte_end":581842,"line_start":922,"line_end":922,"column_start":1,"column_end":27}},{"value":"/ extern crate nix;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581843,"byte_end":581864,"line_start":923,"line_end":923,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581865,"byte_end":581868,"line_start":924,"line_end":924,"column_start":1,"column_end":4}},{"value":"/ use std::os::unix::io::IntoRawFd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581869,"byte_end":581906,"line_start":925,"line_end":925,"column_start":1,"column_end":38}},{"value":"/ use nix::unistd::close;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581907,"byte_end":581934,"line_start":926,"line_end":926,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581935,"byte_end":581938,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581939,"byte_end":581954,"line_start":928,"line_end":928,"column_start":1,"column_end":16}},{"value":"/     let f = tempfile::tempfile().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":581955,"byte_end":582001,"line_start":929,"line_end":929,"column_start":1,"column_end":47}},{"value":"/     close(f.into_raw_fd()).unwrap(); // Good.  into_raw_fd consumes f","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582002,"byte_end":582075,"line_start":930,"line_end":930,"column_start":1,"column_end":74}},{"value":"/ }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582076,"byte_end":582081,"line_start":931,"line_end":931,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582082,"byte_end":582089,"line_start":932,"line_end":932,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1848},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582348,"byte_end":582352,"line_start":941,"line_end":941,"column_start":8,"column_end":12},"name":"read","qualname":"::unistd::read","value":"pub fn read(RawFd, &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Read from a raw file descriptor.","sig":null,"attributes":[{"value":"/ Read from a raw file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582208,"byte_end":582244,"line_start":938,"line_end":938,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582245,"byte_end":582248,"line_start":939,"line_end":939,"column_start":1,"column_end":4}},{"value":"/ See also [read(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/read.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582249,"byte_end":582340,"line_start":940,"line_end":940,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":1850},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582682,"byte_end":582687,"line_start":950,"line_end":950,"column_start":8,"column_end":13},"name":"write","qualname":"::unistd::write","value":"pub fn write(RawFd, &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Write to a raw file descriptor.","sig":null,"attributes":[{"value":"/ Write to a raw file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582541,"byte_end":582576,"line_start":947,"line_end":947,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582577,"byte_end":582580,"line_start":948,"line_end":948,"column_start":1,"column_end":4}},{"value":"/ See also [write(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/write.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582581,"byte_end":582674,"line_start":949,"line_end":949,"column_start":1,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9293},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583150,"byte_end":583157,"line_start":964,"line_end":964,"column_start":5,"column_end":12},"name":"SeekSet","qualname":"::unistd::Whence::SeekSet","value":"Whence::SeekSet","parent":{"krate":0,"index":9292},"children":[],"decl_id":null,"docs":" Specify an offset relative to the start of the file.\n","sig":null,"attributes":[{"value":"/ Specify an offset relative to the start of the file.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583089,"byte_end":583145,"line_start":963,"line_end":963,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9296},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583245,"byte_end":583252,"line_start":966,"line_end":966,"column_start":5,"column_end":12},"name":"SeekCur","qualname":"::unistd::Whence::SeekCur","value":"Whence::SeekCur","parent":{"krate":0,"index":9292},"children":[],"decl_id":null,"docs":" Specify an offset relative to the current file location.\n","sig":null,"attributes":[{"value":"/ Specify an offset relative to the current file location.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583180,"byte_end":583240,"line_start":965,"line_end":965,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9299},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583334,"byte_end":583341,"line_start":968,"line_end":968,"column_start":5,"column_end":12},"name":"SeekEnd","qualname":"::unistd::Whence::SeekEnd","value":"Whence::SeekEnd","parent":{"krate":0,"index":9292},"children":[],"decl_id":null,"docs":" Specify an offset relative to the end of the file.\n","sig":null,"attributes":[{"value":"/ Specify an offset relative to the end of the file.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583275,"byte_end":583329,"line_start":967,"line_end":967,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9302},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583838,"byte_end":583846,"line_start":976,"line_end":976,"column_start":5,"column_end":13},"name":"SeekData","qualname":"::unistd::Whence::SeekData","value":"Whence::SeekData","parent":{"krate":0,"index":9292},"children":[],"decl_id":null,"docs":" Specify an offset relative to the next location in the file greater than or\n equal to offset that contains some data. If offset points to\n some data, then the file offset is set to offset.\n","sig":null,"attributes":[{"value":"/ Specify an offset relative to the next location in the file greater than or","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583364,"byte_end":583443,"line_start":969,"line_end":969,"column_start":5,"column_end":84}},{"value":"/ equal to offset that contains some data. If offset points to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583448,"byte_end":583512,"line_start":970,"line_end":970,"column_start":5,"column_end":69}},{"value":"/ some data, then the file offset is set to offset.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583517,"byte_end":583570,"line_start":971,"line_end":971,"column_start":5,"column_end":58}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\",\n          all(target_os = \"linux\",\n              not(any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                      \"mips64\")))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583575,"byte_end":583833,"line_start":972,"line_end":975,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9305},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584506,"byte_end":584514,"line_start":986,"line_end":986,"column_start":5,"column_end":13},"name":"SeekHole","qualname":"::unistd::Whence::SeekHole","value":"Whence::SeekHole","parent":{"krate":0,"index":9292},"children":[],"decl_id":null,"docs":" Specify an offset relative to the next hole in the file greater than\n or equal to offset. If offset points into the middle of a hole, then\n the file offset should be set to offset. If there is no hole past offset,\n then the file offset should be adjusted to the end of the file (i.e., there\n is an implicit hole at the end of any file).\n","sig":null,"attributes":[{"value":"/ Specify an offset relative to the next hole in the file greater than","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583870,"byte_end":583942,"line_start":977,"line_end":977,"column_start":5,"column_end":77}},{"value":"/ or equal to offset. If offset points into the middle of a hole, then","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583947,"byte_end":584019,"line_start":978,"line_end":978,"column_start":5,"column_end":77}},{"value":"/ the file offset should be set to offset. If there is no hole past offset,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584024,"byte_end":584101,"line_start":979,"line_end":979,"column_start":5,"column_end":82}},{"value":"/ then the file offset should be adjusted to the end of the file (i.e., there","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584106,"byte_end":584185,"line_start":980,"line_end":980,"column_start":5,"column_end":84}},{"value":"/ is an implicit hole at the end of any file).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584190,"byte_end":584238,"line_start":981,"line_end":981,"column_start":5,"column_end":53}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\",\n          all(target_os = \"linux\",\n              not(any(target_env = \"musl\", target_arch = \"mips\", target_arch =\n                      \"mips64\")))))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584243,"byte_end":584501,"line_start":982,"line_end":985,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":9292},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583076,"byte_end":583082,"line_start":962,"line_end":962,"column_start":10,"column_end":16},"name":"Whence","qualname":"::unistd::Whence","value":"pub enum Whence {\n\n    /// Specify an offset relative to the start of the file.\n    SeekSet = ,\n\n    /// Specify an offset relative to the current file location.\n    SeekCur = ,\n\n    /// Specify an offset relative to the end of the file.\n    SeekEnd = ,\n\n    /// Specify an offset relative to the next location in the file greater than or\n    /// equal to offset that contains some data. If offset points to\n    /// some data, then the file offset is set to offset.\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\",\n              all(target_os = \"linux\",\n                  not(any(target_env = \"musl\", target_arch = \"mips\",\n                          target_arch = \"mips64\")))))]\n    SeekData = ,\n\n    /// Specify an offset relative to the next hole in the file greater than\n    /// or equal to offset. If offset points into the middle of a hole, then\n    /// the file offset should be set to offset. If there is no hole past offset,\n    /// then the file offset should be adjusted to the end of the file (i.e., there\n    /// is an implicit hole at the end of any file).\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\",\n              all(target_os = \"linux\",\n                  not(any(target_env = \"musl\", target_arch = \"mips\",\n                          target_arch = \"mips64\")))))]\n    SeekHole = ,\n}","parent":null,"children":[{"krate":0,"index":9293},{"krate":0,"index":9296},{"krate":0,"index":9299},{"krate":0,"index":9302},{"krate":0,"index":9305}],"decl_id":null,"docs":" Directive that tells [`lseek`] and [`lseek64`] what the offset is relative to.","sig":null,"attributes":[{"value":"/ Directive that tells [`lseek`] and [`lseek64`] what the offset is relative to.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582871,"byte_end":582953,"line_start":956,"line_end":956,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582954,"byte_end":582957,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ [`lseek`]: ./fn.lseek.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582958,"byte_end":582988,"line_start":958,"line_end":958,"column_start":1,"column_end":31}},{"value":"/ [`lseek64`]: ./fn.lseek64.html","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":582989,"byte_end":583023,"line_start":959,"line_end":959,"column_start":1,"column_end":35}},{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":583024,"byte_end":583036,"line_start":960,"line_end":960,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":1852},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584678,"byte_end":584683,"line_start":992,"line_end":992,"column_start":8,"column_end":13},"name":"lseek","qualname":"::unistd::lseek","value":"pub fn lseek(RawFd, off_t, Whence) -> Result<off_t>","parent":null,"children":[],"decl_id":null,"docs":" Move the read/write file offset.","sig":null,"attributes":[{"value":"/ Move the read/write file offset.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584536,"byte_end":584572,"line_start":989,"line_end":989,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584573,"byte_end":584576,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ See also [lseek(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/lseek.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584577,"byte_end":584670,"line_start":991,"line_end":991,"column_start":1,"column_end":94}}]},{"kind":"Function","id":{"krate":0,"index":1854},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584920,"byte_end":584927,"line_start":999,"line_end":999,"column_start":8,"column_end":15},"name":"lseek64","qualname":"::unistd::lseek64","value":"pub fn lseek64(RawFd, libc::off64_t, Whence) -> Result<libc::off64_t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"linux\", target_os = \"android\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":584857,"byte_end":584912,"line_start":998,"line_end":998,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":1856},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585266,"byte_end":585270,"line_start":1008,"line_end":1008,"column_start":8,"column_end":12},"name":"pipe","qualname":"::unistd::pipe","value":"pub fn pipe() -> Result<(RawFd, RawFd)>","parent":null,"children":[],"decl_id":null,"docs":" Create an interprocess channel.","sig":null,"attributes":[{"value":"/ Create an interprocess channel.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585127,"byte_end":585162,"line_start":1005,"line_end":1005,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585163,"byte_end":585166,"line_start":1006,"line_end":1006,"column_start":1,"column_end":4}},{"value":"/ See also [pipe(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pipe.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585167,"byte_end":585258,"line_start":1007,"line_end":1007,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":1858},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":586125,"byte_end":586130,"line_start":1036,"line_end":1036,"column_start":8,"column_end":13},"name":"pipe2","qualname":"::unistd::pipe2","value":"pub fn pipe2(OFlag) -> Result<(RawFd, RawFd)>","parent":null,"children":[],"decl_id":null,"docs":" Like `pipe`, but allows setting certain file descriptor flags.","sig":null,"attributes":[{"value":"/ Like `pipe`, but allows setting certain file descriptor flags.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585488,"byte_end":585554,"line_start":1020,"line_end":1020,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585555,"byte_end":585558,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ The following flags are supported, and will be set atomically as the pipe is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585559,"byte_end":585639,"line_start":1022,"line_end":1022,"column_start":1,"column_end":81}},{"value":"/ created:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585640,"byte_end":585652,"line_start":1023,"line_end":1023,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585653,"byte_end":585656,"line_start":1024,"line_end":1024,"column_start":1,"column_end":4}},{"value":"/ `O_CLOEXEC`:    Set the close-on-exec flag for the new file descriptors.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585657,"byte_end":585733,"line_start":1025,"line_end":1025,"column_start":1,"column_end":77}},{"value":"/ `O_NONBLOCK`:   Set the non-blocking flag for the ends of the pipe.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585734,"byte_end":585805,"line_start":1026,"line_end":1026,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585806,"byte_end":585809,"line_start":1027,"line_end":1027,"column_start":1,"column_end":4}},{"value":"/ See also [pipe(2)](http://man7.org/linux/man-pages/man2/pipe.2.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585810,"byte_end":585882,"line_start":1028,"line_end":1028,"column_start":1,"column_end":73}},{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"emscripten\", target_os = \"freebsd\", target_os = \"linux\", target_os\n          = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":585883,"byte_end":586117,"line_start":1029,"line_end":1035,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1860},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":588040,"byte_end":588048,"line_start":1102,"line_end":1102,"column_start":8,"column_end":16},"name":"truncate","qualname":"::unistd::truncate","value":"pub fn truncate<P: ?Sized + NixPath>(&P, off_t) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Truncate a file to a specified length","sig":null,"attributes":[{"value":"/ Truncate a file to a specified length","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":587883,"byte_end":587924,"line_start":1098,"line_end":1098,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":587925,"byte_end":587928,"line_start":1099,"line_end":1099,"column_start":1,"column_end":4}},{"value":"/ See also","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":587929,"byte_end":587941,"line_start":1100,"line_end":1100,"column_start":1,"column_end":13}},{"value":"/ [truncate(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/truncate.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":587942,"byte_end":588032,"line_start":1101,"line_end":1101,"column_start":1,"column_end":91}}]},{"kind":"Function","id":{"krate":0,"index":1863},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":588429,"byte_end":588438,"line_start":1116,"line_end":1116,"column_start":8,"column_end":17},"name":"ftruncate","qualname":"::unistd::ftruncate","value":"pub fn ftruncate(RawFd, off_t) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Truncate a file to a specified length","sig":null,"attributes":[{"value":"/ Truncate a file to a specified length","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":588270,"byte_end":588311,"line_start":1112,"line_end":1112,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":588312,"byte_end":588315,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}},{"value":"/ See also","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":588316,"byte_end":588328,"line_start":1114,"line_end":1114,"column_start":1,"column_end":13}},{"value":"/ [ftruncate(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/ftruncate.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":588329,"byte_end":588421,"line_start":1115,"line_end":1115,"column_start":1,"column_end":93}}]},{"kind":"Function","id":{"krate":0,"index":1864},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":588553,"byte_end":588559,"line_start":1120,"line_end":1120,"column_start":8,"column_end":14},"name":"isatty","qualname":"::unistd::isatty","value":"pub fn isatty(RawFd) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1865},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589075,"byte_end":589081,"line_start":1138,"line_end":1138,"column_start":8,"column_end":14},"name":"unlink","qualname":"::unistd::unlink","value":"pub fn unlink<P: ?Sized + NixPath>(&P) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Remove a directory entry","sig":null,"attributes":[{"value":"/ Remove a directory entry","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":588939,"byte_end":588967,"line_start":1135,"line_end":1135,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":588968,"byte_end":588971,"line_start":1136,"line_end":1136,"column_start":1,"column_end":4}},{"value":"/ See also [unlink(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/unlink.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":588972,"byte_end":589067,"line_start":1137,"line_end":1137,"column_start":1,"column_end":96}}]},{"kind":"Function","id":{"krate":0,"index":1868},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589300,"byte_end":589306,"line_start":1148,"line_end":1148,"column_start":8,"column_end":14},"name":"chroot","qualname":"::unistd::chroot","value":"pub fn chroot<P: ?Sized + NixPath>(&P) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589283,"byte_end":589292,"line_start":1147,"line_end":1147,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1871},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589777,"byte_end":589781,"line_start":1166,"line_end":1166,"column_start":8,"column_end":12},"name":"sync","qualname":"::unistd::sync","value":"pub fn sync() -> ()","parent":null,"children":[],"decl_id":null,"docs":" Commit filesystem caches to disk","sig":null,"attributes":[{"value":"/ Commit filesystem caches to disk","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589489,"byte_end":589525,"line_start":1156,"line_end":1156,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589526,"byte_end":589529,"line_start":1157,"line_end":1157,"column_start":1,"column_end":4}},{"value":"/ See also [sync(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/sync.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589530,"byte_end":589621,"line_start":1158,"line_end":1158,"column_start":1,"column_end":92}},{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"linux\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589622,"byte_end":589769,"line_start":1159,"line_end":1165,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1872},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589973,"byte_end":589978,"line_start":1174,"line_end":1174,"column_start":8,"column_end":13},"name":"fsync","qualname":"::unistd::fsync","value":"pub fn fsync(RawFd) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Synchronize changes to a file","sig":null,"attributes":[{"value":"/ Synchronize changes to a file","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589824,"byte_end":589857,"line_start":1170,"line_end":1170,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589858,"byte_end":589861,"line_start":1171,"line_end":1171,"column_start":1,"column_end":4}},{"value":"/ See also [fsync(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fsync.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589862,"byte_end":589955,"line_start":1172,"line_end":1172,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":589956,"byte_end":589965,"line_start":1173,"line_end":1173,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1873},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590514,"byte_end":590523,"line_start":1190,"line_end":1190,"column_start":8,"column_end":17},"name":"fdatasync","qualname":"::unistd::fdatasync","value":"pub fn fdatasync(RawFd) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Synchronize the data of a file","sig":null,"attributes":[{"value":"/ Synchronize the data of a file","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590085,"byte_end":590119,"line_start":1180,"line_end":1180,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590120,"byte_end":590123,"line_start":1181,"line_end":1181,"column_start":1,"column_end":4}},{"value":"/ See also","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590124,"byte_end":590136,"line_start":1182,"line_end":1182,"column_start":1,"column_end":13}},{"value":"/ [fdatasync(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/fdatasync.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590137,"byte_end":590229,"line_start":1183,"line_end":1183,"column_start":1,"column_end":93}},{"value":"cfg(any(target_os = \"linux\", target_os = \"android\", target_os =\n          \"emscripten\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590395,"byte_end":590496,"line_start":1186,"line_end":1188,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590497,"byte_end":590506,"line_start":1189,"line_end":1189,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1874},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590872,"byte_end":590878,"line_start":1202,"line_end":1202,"column_start":8,"column_end":14},"name":"getuid","qualname":"::unistd::getuid","value":"pub fn getuid() -> Uid","parent":null,"children":[],"decl_id":null,"docs":" Get a real user ID","sig":null,"attributes":[{"value":"/ Get a real user ID","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590634,"byte_end":590656,"line_start":1196,"line_end":1196,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590657,"byte_end":590660,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ See also [getuid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getuid.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590661,"byte_end":590756,"line_start":1198,"line_end":1198,"column_start":1,"column_end":96}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590855,"byte_end":590864,"line_start":1201,"line_end":1201,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1875},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591176,"byte_end":591183,"line_start":1212,"line_end":1212,"column_start":8,"column_end":15},"name":"geteuid","qualname":"::unistd::geteuid","value":"pub fn geteuid() -> Uid","parent":null,"children":[],"decl_id":null,"docs":" Get the effective user ID","sig":null,"attributes":[{"value":"/ Get the effective user ID","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590928,"byte_end":590957,"line_start":1206,"line_end":1206,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590958,"byte_end":590961,"line_start":1207,"line_end":1207,"column_start":1,"column_end":4}},{"value":"/ See also [geteuid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/geteuid.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":590962,"byte_end":591059,"line_start":1208,"line_end":1208,"column_start":1,"column_end":98}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591159,"byte_end":591168,"line_start":1211,"line_end":1211,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1876},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591475,"byte_end":591481,"line_start":1222,"line_end":1222,"column_start":8,"column_end":14},"name":"getgid","qualname":"::unistd::getgid","value":"pub fn getgid() -> Gid","parent":null,"children":[],"decl_id":null,"docs":" Get the real group ID","sig":null,"attributes":[{"value":"/ Get the real group ID","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591234,"byte_end":591259,"line_start":1216,"line_end":1216,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591260,"byte_end":591263,"line_start":1217,"line_end":1217,"column_start":1,"column_end":4}},{"value":"/ See also [getgid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getgid.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591264,"byte_end":591359,"line_start":1218,"line_end":1218,"column_start":1,"column_end":96}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591458,"byte_end":591467,"line_start":1221,"line_end":1221,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1877},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591780,"byte_end":591787,"line_start":1232,"line_end":1232,"column_start":8,"column_end":15},"name":"getegid","qualname":"::unistd::getegid","value":"pub fn getegid() -> Gid","parent":null,"children":[],"decl_id":null,"docs":" Get the effective group ID","sig":null,"attributes":[{"value":"/ Get the effective group ID","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591531,"byte_end":591561,"line_start":1226,"line_end":1226,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591562,"byte_end":591565,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ See also [getegid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/getegid.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591566,"byte_end":591663,"line_start":1228,"line_end":1228,"column_start":1,"column_end":98}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591763,"byte_end":591772,"line_start":1231,"line_end":1231,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1878},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591975,"byte_end":591981,"line_start":1240,"line_end":1240,"column_start":8,"column_end":14},"name":"setuid","qualname":"::unistd::setuid","value":"pub fn setuid(Uid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the user ID","sig":null,"attributes":[{"value":"/ Set the user ID","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591838,"byte_end":591857,"line_start":1236,"line_end":1236,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591858,"byte_end":591861,"line_start":1237,"line_end":1237,"column_start":1,"column_end":4}},{"value":"/ See also [setuid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/setuid.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591862,"byte_end":591957,"line_start":1238,"line_end":1238,"column_start":1,"column_end":96}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":591958,"byte_end":591967,"line_start":1239,"line_end":1239,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1879},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592233,"byte_end":592239,"line_start":1250,"line_end":1250,"column_start":8,"column_end":14},"name":"setgid","qualname":"::unistd::setgid","value":"pub fn setgid(Gid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the user ID","sig":null,"attributes":[{"value":"/ Set the user ID","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592096,"byte_end":592115,"line_start":1246,"line_end":1246,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592116,"byte_end":592119,"line_start":1247,"line_end":1247,"column_start":1,"column_end":4}},{"value":"/ See also [setgid(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/setgid.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592120,"byte_end":592215,"line_start":1248,"line_end":1248,"column_start":1,"column_end":96}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592216,"byte_end":592225,"line_start":1249,"line_end":1249,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1880},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592781,"byte_end":592790,"line_start":1264,"line_end":1264,"column_start":8,"column_end":17},"name":"getgroups","qualname":"::unistd::getgroups","value":"pub fn getgroups() -> Result<Vec<Gid>>","parent":null,"children":[],"decl_id":null,"docs":" Get the list of supplementary group IDs of the calling process.","sig":null,"attributes":[{"value":"/ Get the list of supplementary group IDs of the calling process.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592354,"byte_end":592421,"line_start":1256,"line_end":1256,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592422,"byte_end":592425,"line_start":1257,"line_end":1257,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://pubs.opengroup.org/onlinepubs/009695399/functions/getgroups.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592426,"byte_end":592520,"line_start":1258,"line_end":1258,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592521,"byte_end":592524,"line_start":1259,"line_end":1259,"column_start":1,"column_end":4}},{"value":"/ **Note:** This function is not available for Apple platforms. On those","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592525,"byte_end":592599,"line_start":1260,"line_end":1260,"column_start":1,"column_end":75}},{"value":"/ platforms, checking group membership should be achieved via communication","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592600,"byte_end":592677,"line_start":1261,"line_end":1261,"column_start":1,"column_end":78}},{"value":"/ with the `opendirectoryd` service.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592678,"byte_end":592716,"line_start":1262,"line_end":1262,"column_start":1,"column_end":39}},{"value":"cfg(not(any(target_os = \"ios\", target_os = \"macos\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":592717,"byte_end":592773,"line_start":1263,"line_end":1263,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1881},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595235,"byte_end":595244,"line_start":1332,"line_end":1332,"column_start":8,"column_end":17},"name":"setgroups","qualname":"::unistd::setgroups","value":"pub fn setgroups(&[Gid]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the list of supplementary group IDs for the calling process.","sig":null,"attributes":[{"value":"/ Set the list of supplementary group IDs for the calling process.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594193,"byte_end":594261,"line_start":1298,"line_end":1298,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594262,"byte_end":594265,"line_start":1299,"line_end":1299,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://man7.org/linux/man-pages/man2/getgroups.2.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594266,"byte_end":594342,"line_start":1300,"line_end":1300,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594343,"byte_end":594346,"line_start":1301,"line_end":1301,"column_start":1,"column_end":4}},{"value":"/ **Note:** This function is not available for Apple platforms. On those","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594347,"byte_end":594421,"line_start":1302,"line_end":1302,"column_start":1,"column_end":75}},{"value":"/ platforms, group membership management should be achieved via communication","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594422,"byte_end":594501,"line_start":1303,"line_end":1303,"column_start":1,"column_end":80}},{"value":"/ with the `opendirectoryd` service.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594502,"byte_end":594540,"line_start":1304,"line_end":1304,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594541,"byte_end":594544,"line_start":1305,"line_end":1305,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594545,"byte_end":594559,"line_start":1306,"line_end":1306,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594560,"byte_end":594563,"line_start":1307,"line_end":1307,"column_start":1,"column_end":4}},{"value":"/ `setgroups` can be used when dropping privileges from the root user to a","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594564,"byte_end":594640,"line_start":1308,"line_end":1308,"column_start":1,"column_end":77}},{"value":"/ specific user and group. For example, given the user `www-data` with UID","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594641,"byte_end":594717,"line_start":1309,"line_end":1309,"column_start":1,"column_end":77}},{"value":"/ `33` and the group `backup` with the GID `34`, one could switch the user as","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594718,"byte_end":594797,"line_start":1310,"line_end":1310,"column_start":1,"column_end":80}},{"value":"/ follows:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594798,"byte_end":594810,"line_start":1311,"line_end":1311,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594811,"byte_end":594814,"line_start":1312,"line_end":1312,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594815,"byte_end":594833,"line_start":1313,"line_end":1313,"column_start":1,"column_end":19}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594834,"byte_end":594862,"line_start":1314,"line_end":1314,"column_start":1,"column_end":29}},{"value":"/ # use nix::unistd::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594863,"byte_end":594888,"line_start":1315,"line_end":1315,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594889,"byte_end":594894,"line_start":1316,"line_end":1316,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> Result<(), Box<Error>> {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594895,"byte_end":594942,"line_start":1317,"line_end":1317,"column_start":1,"column_end":48}},{"value":"/ let uid = Uid::from_raw(33);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594943,"byte_end":594975,"line_start":1318,"line_end":1318,"column_start":1,"column_end":33}},{"value":"/ let gid = Gid::from_raw(34);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":594976,"byte_end":595008,"line_start":1319,"line_end":1319,"column_start":1,"column_end":33}},{"value":"/ setgroups(&[gid])?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595009,"byte_end":595032,"line_start":1320,"line_end":1320,"column_start":1,"column_end":24}},{"value":"/ setgid(gid)?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595033,"byte_end":595050,"line_start":1321,"line_end":1321,"column_start":1,"column_end":18}},{"value":"/ setuid(uid)?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595051,"byte_end":595068,"line_start":1322,"line_end":1322,"column_start":1,"column_end":18}},{"value":"/ #","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595069,"byte_end":595074,"line_start":1323,"line_end":1323,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595075,"byte_end":595091,"line_start":1324,"line_end":1324,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595092,"byte_end":595099,"line_start":1325,"line_end":1325,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595100,"byte_end":595105,"line_start":1326,"line_end":1326,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595106,"byte_end":595123,"line_start":1327,"line_end":1327,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595124,"byte_end":595154,"line_start":1328,"line_end":1328,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595155,"byte_end":595162,"line_start":1329,"line_end":1329,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595163,"byte_end":595170,"line_start":1330,"line_end":1330,"column_start":1,"column_end":8}},{"value":"cfg(not(any(target_os = \"ios\", target_os = \"macos\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":595171,"byte_end":595227,"line_start":1331,"line_end":1331,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1882},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":597116,"byte_end":597128,"line_start":1376,"line_end":1376,"column_start":8,"column_end":20},"name":"getgrouplist","qualname":"::unistd::getgrouplist","value":"pub fn getgrouplist(&CStr, Gid) -> Result<Vec<Gid>>","parent":null,"children":[],"decl_id":null,"docs":" Calculate the supplementary group access list.","sig":null,"attributes":[{"value":"/ Calculate the supplementary group access list.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596060,"byte_end":596110,"line_start":1355,"line_end":1355,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596111,"byte_end":596114,"line_start":1356,"line_end":1356,"column_start":1,"column_end":4}},{"value":"/ Gets the group IDs of all groups that `user` is a member of. The additional","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596115,"byte_end":596194,"line_start":1357,"line_end":1357,"column_start":1,"column_end":80}},{"value":"/ group `group` is also added to the list.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596195,"byte_end":596239,"line_start":1358,"line_end":1358,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596240,"byte_end":596243,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://man7.org/linux/man-pages/man3/getgrouplist.3.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596244,"byte_end":596323,"line_start":1360,"line_end":1360,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596324,"byte_end":596327,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/ **Note:** This function is not available for Apple platforms. On those","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596328,"byte_end":596402,"line_start":1362,"line_end":1362,"column_start":1,"column_end":75}},{"value":"/ platforms, checking group membership should be achieved via communication","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596403,"byte_end":596480,"line_start":1363,"line_end":1363,"column_start":1,"column_end":78}},{"value":"/ with the `opendirectoryd` service.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596481,"byte_end":596519,"line_start":1364,"line_end":1364,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596520,"byte_end":596523,"line_start":1365,"line_end":1365,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596524,"byte_end":596536,"line_start":1366,"line_end":1366,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596537,"byte_end":596540,"line_start":1367,"line_end":1367,"column_start":1,"column_end":4}},{"value":"/ Although the `getgrouplist()` call does not return any specific","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596541,"byte_end":596608,"line_start":1368,"line_end":1368,"column_start":1,"column_end":68}},{"value":"/ errors on any known platforms, this implementation will return a system","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596609,"byte_end":596684,"line_start":1369,"line_end":1369,"column_start":1,"column_end":76}},{"value":"/ error of `EINVAL` if the number of groups to be fetched exceeds the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596685,"byte_end":596756,"line_start":1370,"line_end":1370,"column_start":1,"column_end":72}},{"value":"/ `NGROUPS_MAX` sysconf value. This mimics the behaviour of `getgroups()`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596757,"byte_end":596832,"line_start":1371,"line_end":1371,"column_start":1,"column_end":76}},{"value":"/ and `setgroups()`. Additionally, while some implementations will return a","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596833,"byte_end":596910,"line_start":1372,"line_end":1372,"column_start":1,"column_end":78}},{"value":"/ partial list of groups when `NGROUPS_MAX` is exceeded, this implementation","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596911,"byte_end":596989,"line_start":1373,"line_end":1373,"column_start":1,"column_end":79}},{"value":"/ will only ever return the complete list or else an error.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":596990,"byte_end":597051,"line_start":1374,"line_end":1374,"column_start":1,"column_end":62}},{"value":"cfg(not(any(target_os = \"ios\", target_os = \"macos\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":597052,"byte_end":597108,"line_start":1375,"line_end":1375,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1884},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600410,"byte_end":600420,"line_start":1467,"line_end":1467,"column_start":8,"column_end":18},"name":"initgroups","qualname":"::unistd::initgroups","value":"pub fn initgroups(&CStr, Gid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initialize the supplementary group access list.","sig":null,"attributes":[{"value":"/ Initialize the supplementary group access list.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599004,"byte_end":599055,"line_start":1426,"line_end":1426,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599056,"byte_end":599059,"line_start":1427,"line_end":1427,"column_start":1,"column_end":4}},{"value":"/ Sets the supplementary group IDs for the calling process using all groups","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599060,"byte_end":599137,"line_start":1428,"line_end":1428,"column_start":1,"column_end":78}},{"value":"/ that `user` is a member of. The additional group `group` is also added to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599138,"byte_end":599215,"line_start":1429,"line_end":1429,"column_start":1,"column_end":78}},{"value":"/ the list.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599216,"byte_end":599229,"line_start":1430,"line_end":1430,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599230,"byte_end":599233,"line_start":1431,"line_end":1431,"column_start":1,"column_end":4}},{"value":"/ [Further reading](http://man7.org/linux/man-pages/man3/initgroups.3.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599234,"byte_end":599311,"line_start":1432,"line_end":1432,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599312,"byte_end":599315,"line_start":1433,"line_end":1433,"column_start":1,"column_end":4}},{"value":"/ **Note:** This function is not available for Apple platforms. On those","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599316,"byte_end":599390,"line_start":1434,"line_end":1434,"column_start":1,"column_end":75}},{"value":"/ platforms, group membership management should be achieved via communication","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599391,"byte_end":599470,"line_start":1435,"line_end":1435,"column_start":1,"column_end":80}},{"value":"/ with the `opendirectoryd` service.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599471,"byte_end":599509,"line_start":1436,"line_end":1436,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599510,"byte_end":599513,"line_start":1437,"line_end":1437,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599514,"byte_end":599528,"line_start":1438,"line_end":1438,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599529,"byte_end":599532,"line_start":1439,"line_end":1439,"column_start":1,"column_end":4}},{"value":"/ `initgroups` can be used when dropping privileges from the root user to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599533,"byte_end":599608,"line_start":1440,"line_end":1440,"column_start":1,"column_end":76}},{"value":"/ another user. For example, given the user `www-data`, we could look up the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599609,"byte_end":599687,"line_start":1441,"line_end":1441,"column_start":1,"column_end":79}},{"value":"/ UID and GID for the user in the system's password database (usually found","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599688,"byte_end":599765,"line_start":1442,"line_end":1442,"column_start":1,"column_end":78}},{"value":"/ in `/etc/passwd`). If the `www-data` user's UID and GID were `33` and `33`,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599766,"byte_end":599845,"line_start":1443,"line_end":1443,"column_start":1,"column_end":80}},{"value":"/ respectively, one could switch the user as follows:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599846,"byte_end":599901,"line_start":1444,"line_end":1444,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599902,"byte_end":599905,"line_start":1445,"line_end":1445,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599906,"byte_end":599924,"line_start":1446,"line_end":1446,"column_start":1,"column_end":19}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599925,"byte_end":599953,"line_start":1447,"line_end":1447,"column_start":1,"column_end":29}},{"value":"/ # use std::ffi::CString;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599954,"byte_end":599982,"line_start":1448,"line_end":1448,"column_start":1,"column_end":29}},{"value":"/ # use nix::unistd::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":599983,"byte_end":600008,"line_start":1449,"line_end":1449,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600009,"byte_end":600014,"line_start":1450,"line_end":1450,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> Result<(), Box<Error>> {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600015,"byte_end":600062,"line_start":1451,"line_end":1451,"column_start":1,"column_end":48}},{"value":"/ let user = CString::new(\"www-data\").unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600063,"byte_end":600112,"line_start":1452,"line_end":1452,"column_start":1,"column_end":50}},{"value":"/ let uid = Uid::from_raw(33);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600113,"byte_end":600145,"line_start":1453,"line_end":1453,"column_start":1,"column_end":33}},{"value":"/ let gid = Gid::from_raw(33);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600146,"byte_end":600178,"line_start":1454,"line_end":1454,"column_start":1,"column_end":33}},{"value":"/ initgroups(&user, gid)?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600179,"byte_end":600207,"line_start":1455,"line_end":1455,"column_start":1,"column_end":29}},{"value":"/ setgid(gid)?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600208,"byte_end":600225,"line_start":1456,"line_end":1456,"column_start":1,"column_end":18}},{"value":"/ setuid(uid)?;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600226,"byte_end":600243,"line_start":1457,"line_end":1457,"column_start":1,"column_end":18}},{"value":"/ #","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600244,"byte_end":600249,"line_start":1458,"line_end":1458,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600250,"byte_end":600266,"line_start":1459,"line_end":1459,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600267,"byte_end":600274,"line_start":1460,"line_end":1460,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600275,"byte_end":600280,"line_start":1461,"line_end":1461,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600281,"byte_end":600298,"line_start":1462,"line_end":1462,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600299,"byte_end":600329,"line_start":1463,"line_end":1463,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600330,"byte_end":600337,"line_start":1464,"line_end":1464,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600338,"byte_end":600345,"line_start":1465,"line_end":1465,"column_start":1,"column_end":8}},{"value":"cfg(not(any(target_os = \"ios\", target_os = \"macos\")))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600346,"byte_end":600402,"line_start":1466,"line_end":1466,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1885},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600988,"byte_end":600993,"line_start":1485,"line_end":1485,"column_start":8,"column_end":13},"name":"pause","qualname":"::unistd::pause","value":"pub fn pause()","parent":null,"children":[],"decl_id":null,"docs":" Suspend the thread until a signal is received.","sig":null,"attributes":[{"value":"/ Suspend the thread until a signal is received.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600821,"byte_end":600871,"line_start":1481,"line_end":1481,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600872,"byte_end":600875,"line_start":1482,"line_end":1482,"column_start":1,"column_end":4}},{"value":"/ See also [pause(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pause.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600876,"byte_end":600970,"line_start":1483,"line_end":1483,"column_start":1,"column_end":95}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":600971,"byte_end":600980,"line_start":1484,"line_end":1484,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":1886},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601039,"byte_end":601044,"line_start":1489,"line_end":1489,"column_start":9,"column_end":14},"name":"alarm","qualname":"::unistd::alarm","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","parent":null,"children":[{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890}],"decl_id":null,"docs":" Alarm signal scheduling.","sig":null,"attributes":[{"value":"/ Alarm signal scheduling.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601051,"byte_end":601079,"line_start":1490,"line_end":1490,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601084,"byte_end":601087,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ Scheduling an alarm will trigger a `SIGALRM` signal when the time has","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601092,"byte_end":601165,"line_start":1492,"line_end":1492,"column_start":5,"column_end":78}},{"value":"/ elapsed, which has to be caught, because the default action for the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601170,"byte_end":601241,"line_start":1493,"line_end":1493,"column_start":5,"column_end":76}},{"value":"/ signal is to terminate the program. This signal also can't be ignored","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601246,"byte_end":601319,"line_start":1494,"line_end":1494,"column_start":5,"column_end":78}},{"value":"/ because the system calls like `pause` will not be interrupted, see the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601324,"byte_end":601398,"line_start":1495,"line_end":1495,"column_start":5,"column_end":79}},{"value":"/ second example below.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601403,"byte_end":601428,"line_start":1496,"line_end":1496,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601433,"byte_end":601436,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601441,"byte_end":601455,"line_start":1498,"line_end":1498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601460,"byte_end":601463,"line_start":1499,"line_end":1499,"column_start":5,"column_end":8}},{"value":"/ Canceling an alarm:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601468,"byte_end":601491,"line_start":1500,"line_end":1500,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601496,"byte_end":601499,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601504,"byte_end":601511,"line_start":1502,"line_end":1502,"column_start":5,"column_end":12}},{"value":"/ use nix::unistd::alarm;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601516,"byte_end":601543,"line_start":1503,"line_end":1503,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601548,"byte_end":601551,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ // Set an alarm for 60 seconds from now.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601556,"byte_end":601600,"line_start":1505,"line_end":1505,"column_start":5,"column_end":49}},{"value":"/ alarm::set(60);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601605,"byte_end":601624,"line_start":1506,"line_end":1506,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601629,"byte_end":601632,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ // Cancel the above set alarm, which returns the number of seconds left","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601637,"byte_end":601712,"line_start":1508,"line_end":1508,"column_start":5,"column_end":80}},{"value":"/ // of the previously set alarm.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601717,"byte_end":601752,"line_start":1509,"line_end":1509,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(alarm::cancel(), Some(60));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601757,"byte_end":601799,"line_start":1510,"line_end":1510,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601804,"byte_end":601811,"line_start":1511,"line_end":1511,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601816,"byte_end":601819,"line_start":1512,"line_end":1512,"column_start":5,"column_end":8}},{"value":"/ Scheduling an alarm and waiting for the signal:","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601824,"byte_end":601875,"line_start":1513,"line_end":1513,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601880,"byte_end":601883,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601888,"byte_end":601895,"line_start":1515,"line_end":1515,"column_start":5,"column_end":12}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601900,"byte_end":601939,"line_start":1516,"line_end":1516,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601944,"byte_end":601947,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ use nix::unistd::{alarm, pause};","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601952,"byte_end":601988,"line_start":1518,"line_end":1518,"column_start":5,"column_end":41}},{"value":"/ use nix::sys::signal::*;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":601993,"byte_end":602021,"line_start":1519,"line_end":1519,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602026,"byte_end":602029,"line_start":1520,"line_end":1520,"column_start":5,"column_end":8}},{"value":"/ // We need to setup an empty signal handler to catch the alarm signal,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602034,"byte_end":602108,"line_start":1521,"line_end":1521,"column_start":5,"column_end":79}},{"value":"/ // otherwise the program will be terminated once the signal is delivered.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602113,"byte_end":602190,"line_start":1522,"line_end":1522,"column_start":5,"column_end":82}},{"value":"/ extern fn signal_handler(_: nix::libc::c_int) { }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602195,"byte_end":602248,"line_start":1523,"line_end":1523,"column_start":5,"column_end":58}},{"value":"/ unsafe { sigaction(Signal::SIGALRM, &SigAction::new(SigHandler::Handler(signal_handler), SaFlags::empty(), SigSet::empty())); }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602253,"byte_end":602384,"line_start":1524,"line_end":1524,"column_start":5,"column_end":136}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602389,"byte_end":602392,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ // Set an alarm for 1 second from now.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602397,"byte_end":602439,"line_start":1526,"line_end":1526,"column_start":5,"column_end":47}},{"value":"/ alarm::set(1);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602444,"byte_end":602462,"line_start":1527,"line_end":1527,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602467,"byte_end":602470,"line_start":1528,"line_end":1528,"column_start":5,"column_end":8}},{"value":"/ let start = Instant::now();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602475,"byte_end":602506,"line_start":1529,"line_end":1529,"column_start":5,"column_end":36}},{"value":"/ // Pause the process until the alarm signal is received.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602511,"byte_end":602571,"line_start":1530,"line_end":1530,"column_start":5,"column_end":65}},{"value":"/ pause();","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602576,"byte_end":602588,"line_start":1531,"line_end":1531,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602593,"byte_end":602596,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ assert!(start.elapsed() >= Duration::from_secs(1));","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602601,"byte_end":602656,"line_start":1533,"line_end":1533,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602661,"byte_end":602668,"line_start":1534,"line_end":1534,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602673,"byte_end":602676,"line_start":1535,"line_end":1535,"column_start":5,"column_end":8}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602681,"byte_end":602697,"line_start":1536,"line_end":1536,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602702,"byte_end":602705,"line_start":1537,"line_end":1537,"column_start":5,"column_end":8}},{"value":"/ See also [alarm(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/alarm.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602710,"byte_end":602804,"line_start":1538,"line_end":1538,"column_start":5,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":1888},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603102,"byte_end":603105,"line_start":1548,"line_end":1548,"column_start":12,"column_end":15},"name":"set","qualname":"::unistd::alarm::set","value":"pub fn set(libc::c_uint) -> Option<libc::c_uint>","parent":null,"children":[],"decl_id":null,"docs":" Schedule an alarm signal.","sig":null,"attributes":[{"value":"/ Schedule an alarm signal.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602825,"byte_end":602854,"line_start":1542,"line_end":1542,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602859,"byte_end":602862,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ This will cause the system to generate a `SIGALRM` signal for the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602867,"byte_end":602936,"line_start":1544,"line_end":1544,"column_start":5,"column_end":74}},{"value":"/ process after the specified number of seconds have elapsed.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":602941,"byte_end":603004,"line_start":1545,"line_end":1545,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603009,"byte_end":603012,"line_start":1546,"line_end":1546,"column_start":5,"column_end":8}},{"value":"/ Returns the leftover time of a previously set alarm if there was one.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603017,"byte_end":603090,"line_start":1547,"line_end":1547,"column_start":5,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1889},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603435,"byte_end":603441,"line_start":1556,"line_end":1556,"column_start":12,"column_end":18},"name":"cancel","qualname":"::unistd::alarm::cancel","value":"pub fn cancel() -> Option<libc::c_uint>","parent":null,"children":[],"decl_id":null,"docs":" Cancel an previously set alarm signal.","sig":null,"attributes":[{"value":"/ Cancel an previously set alarm signal.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603295,"byte_end":603337,"line_start":1553,"line_end":1553,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603342,"byte_end":603345,"line_start":1554,"line_end":1554,"column_start":5,"column_end":8}},{"value":"/ Returns the leftover time of a previously set alarm if there was one.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603350,"byte_end":603423,"line_start":1555,"line_end":1555,"column_start":5,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1891},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603874,"byte_end":603879,"line_start":1573,"line_end":1573,"column_start":8,"column_end":13},"name":"sleep","qualname":"::unistd::sleep","value":"pub fn sleep(c_uint) -> c_uint","parent":null,"children":[],"decl_id":null,"docs":" Suspend execution for an interval of time","sig":null,"attributes":[{"value":"/ Suspend execution for an interval of time","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603672,"byte_end":603717,"line_start":1568,"line_end":1568,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603718,"byte_end":603721,"line_start":1569,"line_end":1569,"column_start":1,"column_end":4}},{"value":"/ See also [sleep(2)](http://pubs.opengroup.org/onlinepubs/009695399/functions/sleep.html#tag_03_705_05)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603722,"byte_end":603828,"line_start":1570,"line_end":1570,"column_start":1,"column_end":107}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603857,"byte_end":603866,"line_start":1572,"line_end":1572,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":1892},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":603956,"byte_end":603960,"line_start":1577,"line_end":1577,"column_start":9,"column_end":13},"name":"acct","qualname":"::unistd::acct","value":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1902}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1899},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604159,"byte_end":604165,"line_start":1586,"line_end":1586,"column_start":12,"column_end":18},"name":"enable","qualname":"::unistd::acct::enable","value":"pub fn enable<P: ?Sized + NixPath>(&P) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Enable process accounting","sig":null,"attributes":[{"value":"/ Enable process accounting","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604049,"byte_end":604078,"line_start":1583,"line_end":1583,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604083,"byte_end":604086,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ See also [acct(2)](https://linux.die.net/man/2/acct)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604091,"byte_end":604147,"line_start":1585,"line_end":1585,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":1902},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604420,"byte_end":604427,"line_start":1595,"line_end":1595,"column_start":12,"column_end":19},"name":"disable","qualname":"::unistd::acct::disable","value":"pub fn disable() -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Disable process accounting\n","sig":null,"attributes":[{"value":"/ Disable process accounting","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604378,"byte_end":604408,"line_start":1594,"line_end":1594,"column_start":5,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":1903},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605369,"byte_end":605376,"line_start":1627,"line_end":1627,"column_start":8,"column_end":15},"name":"mkstemp","qualname":"::unistd::mkstemp","value":"pub fn mkstemp<P: ?Sized + NixPath>(&P) -> Result<(RawFd, PathBuf)>","parent":null,"children":[],"decl_id":null,"docs":" Creates a regular file which persists even after process termination","sig":null,"attributes":[{"value":"/ Creates a regular file which persists even after process termination","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604547,"byte_end":604619,"line_start":1602,"line_end":1602,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604620,"byte_end":604623,"line_start":1603,"line_end":1603,"column_start":1,"column_end":4}},{"value":"/ * `template`: a path whose 6 rightmost characters must be X, e.g. `/tmp/tmpfile_XXXXXX`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604624,"byte_end":604715,"line_start":1604,"line_end":1604,"column_start":1,"column_end":92}},{"value":"/ * returns: tuple of file descriptor and filename","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604716,"byte_end":604768,"line_start":1605,"line_end":1605,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604769,"byte_end":604772,"line_start":1606,"line_end":1606,"column_start":1,"column_end":4}},{"value":"/ Err is returned either if no temporary filename could be created or the template doesn't","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604773,"byte_end":604865,"line_start":1607,"line_end":1607,"column_start":1,"column_end":93}},{"value":"/ end with XXXXXX","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604866,"byte_end":604885,"line_start":1608,"line_end":1608,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604886,"byte_end":604889,"line_start":1609,"line_end":1609,"column_start":1,"column_end":4}},{"value":"/ See also [mkstemp(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mkstemp.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604890,"byte_end":604987,"line_start":1610,"line_end":1610,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604988,"byte_end":604991,"line_start":1611,"line_end":1611,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":604992,"byte_end":605005,"line_start":1612,"line_end":1612,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605006,"byte_end":605009,"line_start":1613,"line_end":1613,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605010,"byte_end":605021,"line_start":1614,"line_end":1614,"column_start":1,"column_end":12}},{"value":"/ use nix::unistd;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605022,"byte_end":605042,"line_start":1615,"line_end":1615,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605043,"byte_end":605046,"line_start":1616,"line_end":1616,"column_start":1,"column_end":4}},{"value":"/ let _ = match unistd::mkstemp(\"/tmp/tempfile_XXXXXX\") {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605047,"byte_end":605106,"line_start":1617,"line_end":1617,"column_start":1,"column_end":60}},{"value":"/     Ok((fd, path)) => {","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605107,"byte_end":605134,"line_start":1618,"line_end":1618,"column_start":1,"column_end":28}},{"value":"/         unistd::unlink(path.as_path()).unwrap(); // flag file to be deleted at app termination","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605135,"byte_end":605233,"line_start":1619,"line_end":1619,"column_start":1,"column_end":99}},{"value":"/         fd","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605234,"byte_end":605248,"line_start":1620,"line_end":1620,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605249,"byte_end":605258,"line_start":1621,"line_end":1621,"column_start":1,"column_end":10}},{"value":"/     Err(e) => panic!(\"mkstemp failed: {}\", e)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605259,"byte_end":605308,"line_start":1622,"line_end":1622,"column_start":1,"column_end":50}},{"value":"/ };","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605309,"byte_end":605315,"line_start":1623,"line_end":1623,"column_start":1,"column_end":7}},{"value":"/ // do something with fd","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605316,"byte_end":605343,"line_start":1624,"line_end":1624,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605344,"byte_end":605351,"line_start":1625,"line_end":1625,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605352,"byte_end":605361,"line_start":1626,"line_end":1626,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9317},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607058,"byte_end":607070,"line_start":1661,"line_end":1661,"column_start":5,"column_end":17},"name":"FILESIZEBITS","qualname":"::unistd::PathconfVar::FILESIZEBITS","value":"PathconfVar::FILESIZEBITS","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Minimum number of bits needed to represent, as a signed integer value,\n the maximum size of a regular file allowed in the specified directory.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"linux\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606756,"byte_end":606895,"line_start":1657,"line_end":1658,"column_start":5,"column_end":61}},{"value":"/ Minimum number of bits needed to represent, as a signed integer value,","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606900,"byte_end":606974,"line_start":1659,"line_end":1659,"column_start":5,"column_end":79}},{"value":"/ the maximum size of a regular file allowed in the specified directory.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606979,"byte_end":607053,"line_start":1660,"line_end":1660,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9320},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607151,"byte_end":607159,"line_start":1663,"line_end":1663,"column_start":5,"column_end":13},"name":"LINK_MAX","qualname":"::unistd::PathconfVar::LINK_MAX","value":"PathconfVar::LINK_MAX","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Maximum number of links to a single file.\n","sig":null,"attributes":[{"value":"/ Maximum number of links to a single file.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607101,"byte_end":607146,"line_start":1662,"line_end":1662,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9323},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607254,"byte_end":607263,"line_start":1665,"line_end":1665,"column_start":5,"column_end":14},"name":"MAX_CANON","qualname":"::unistd::PathconfVar::MAX_CANON","value":"PathconfVar::MAX_CANON","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Maximum number of bytes in a terminal canonical input line.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes in a terminal canonical input line.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607186,"byte_end":607249,"line_start":1664,"line_end":1664,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9326},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607513,"byte_end":607522,"line_start":1669,"line_end":1669,"column_start":5,"column_end":14},"name":"MAX_INPUT","qualname":"::unistd::PathconfVar::MAX_INPUT","value":"PathconfVar::MAX_INPUT","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Minimum number of bytes for which space is available in a terminal input\n queue; therefore, the maximum number of bytes a conforming application\n may require to be typed as input before reading them.\n","sig":null,"attributes":[{"value":"/ Minimum number of bytes for which space is available in a terminal input","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607291,"byte_end":607367,"line_start":1666,"line_end":1666,"column_start":5,"column_end":81}},{"value":"/ queue; therefore, the maximum number of bytes a conforming application","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607372,"byte_end":607446,"line_start":1667,"line_end":1667,"column_start":5,"column_end":79}},{"value":"/ may require to be typed as input before reading them.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607451,"byte_end":607508,"line_start":1668,"line_end":1668,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9329},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607663,"byte_end":607671,"line_start":1672,"line_end":1672,"column_start":5,"column_end":13},"name":"NAME_MAX","qualname":"::unistd::PathconfVar::NAME_MAX","value":"PathconfVar::NAME_MAX","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Maximum number of bytes in a filename (not including the terminating\n null of a filename string).\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes in a filename (not including the terminating","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607550,"byte_end":607622,"line_start":1670,"line_end":1670,"column_start":5,"column_end":77}},{"value":"/ null of a filename string).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607627,"byte_end":607658,"line_start":1671,"line_end":1671,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9332},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607979,"byte_end":607987,"line_start":1677,"line_end":1677,"column_start":5,"column_end":13},"name":"PATH_MAX","qualname":"::unistd::PathconfVar::PATH_MAX","value":"PathconfVar::PATH_MAX","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Maximum number of bytes the implementation will store as a pathname in a\n user-supplied buffer of unspecified size, including the terminating null\n character. Minimum number the implementation will accept as the maximum\n number of bytes in a pathname.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes the implementation will store as a pathname in a","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607698,"byte_end":607774,"line_start":1673,"line_end":1673,"column_start":5,"column_end":81}},{"value":"/ user-supplied buffer of unspecified size, including the terminating null","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607779,"byte_end":607855,"line_start":1674,"line_end":1674,"column_start":5,"column_end":81}},{"value":"/ character. Minimum number the implementation will accept as the maximum","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607860,"byte_end":607935,"line_start":1675,"line_end":1675,"column_start":5,"column_end":80}},{"value":"/ number of bytes in a pathname.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":607940,"byte_end":607974,"line_start":1676,"line_end":1676,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9335},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608110,"byte_end":608118,"line_start":1680,"line_end":1680,"column_start":5,"column_end":13},"name":"PIPE_BUF","qualname":"::unistd::PathconfVar::PIPE_BUF","value":"PathconfVar::PIPE_BUF","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Maximum number of bytes that is guaranteed to be atomic when writing to\n a pipe.\n","sig":null,"attributes":[{"value":"/ Maximum number of bytes that is guaranteed to be atomic when writing to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608014,"byte_end":608089,"line_start":1678,"line_end":1678,"column_start":5,"column_end":80}},{"value":"/ a pipe.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608094,"byte_end":608105,"line_start":1679,"line_end":1679,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9338},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608328,"byte_end":608343,"line_start":1684,"line_end":1684,"column_start":5,"column_end":20},"name":"POSIX2_SYMLINKS","qualname":"::unistd::PathconfVar::POSIX2_SYMLINKS","value":"PathconfVar::POSIX2_SYMLINKS","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Symbolic links can be created.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os = \"linux\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608145,"byte_end":608284,"line_start":1681,"line_end":1682,"column_start":5,"column_end":61}},{"value":"/ Symbolic links can be created.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608289,"byte_end":608323,"line_start":1683,"line_end":1683,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9341},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608614,"byte_end":608634,"line_start":1689,"line_end":1689,"column_start":5,"column_end":25},"name":"POSIX_ALLOC_SIZE_MIN","qualname":"::unistd::PathconfVar::POSIX_ALLOC_SIZE_MIN","value":"PathconfVar::POSIX_ALLOC_SIZE_MIN","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Minimum number of bytes of storage actually allocated for any portion of\n a file.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608372,"byte_end":608512,"line_start":1685,"line_end":1686,"column_start":5,"column_end":60}},{"value":"/ Minimum number of bytes of storage actually allocated for any portion of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608517,"byte_end":608593,"line_start":1687,"line_end":1687,"column_start":5,"column_end":81}},{"value":"/ a file.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608598,"byte_end":608609,"line_start":1688,"line_end":1688,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9344},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608950,"byte_end":608974,"line_start":1694,"line_end":1694,"column_start":5,"column_end":29},"name":"POSIX_REC_INCR_XFER_SIZE","qualname":"::unistd::PathconfVar::POSIX_REC_INCR_XFER_SIZE","value":"PathconfVar::POSIX_REC_INCR_XFER_SIZE","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Recommended increment for file transfer sizes between the\n `POSIX_REC_MIN_XFER_SIZE` and `POSIX_REC_MAX_XFER_SIZE` values.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608667,"byte_end":608807,"line_start":1690,"line_end":1691,"column_start":5,"column_end":60}},{"value":"/ Recommended increment for file transfer sizes between the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608812,"byte_end":608873,"line_start":1692,"line_end":1692,"column_start":5,"column_end":66}},{"value":"/ `POSIX_REC_MIN_XFER_SIZE` and `POSIX_REC_MAX_XFER_SIZE` values.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":608878,"byte_end":608945,"line_start":1693,"line_end":1693,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9347},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609204,"byte_end":609227,"line_start":1698,"line_end":1698,"column_start":5,"column_end":28},"name":"POSIX_REC_MAX_XFER_SIZE","qualname":"::unistd::PathconfVar::POSIX_REC_MAX_XFER_SIZE","value":"PathconfVar::POSIX_REC_MAX_XFER_SIZE","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Maximum recommended file transfer size.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609011,"byte_end":609151,"line_start":1695,"line_end":1696,"column_start":5,"column_end":60}},{"value":"/ Maximum recommended file transfer size.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609156,"byte_end":609199,"line_start":1697,"line_end":1697,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9350},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609456,"byte_end":609479,"line_start":1702,"line_end":1702,"column_start":5,"column_end":28},"name":"POSIX_REC_MIN_XFER_SIZE","qualname":"::unistd::PathconfVar::POSIX_REC_MIN_XFER_SIZE","value":"PathconfVar::POSIX_REC_MIN_XFER_SIZE","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Minimum recommended file transfer size.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609263,"byte_end":609403,"line_start":1699,"line_end":1700,"column_start":5,"column_end":60}},{"value":"/ Minimum recommended file transfer size.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609408,"byte_end":609451,"line_start":1701,"line_end":1701,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9353},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609713,"byte_end":609733,"line_start":1706,"line_end":1706,"column_start":5,"column_end":25},"name":"POSIX_REC_XFER_ALIGN","qualname":"::unistd::PathconfVar::POSIX_REC_XFER_ALIGN","value":"PathconfVar::POSIX_REC_XFER_ALIGN","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":"  Recommended file transfer buffer alignment.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609515,"byte_end":609655,"line_start":1703,"line_end":1704,"column_start":5,"column_end":60}},{"value":"/  Recommended file transfer buffer alignment.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609660,"byte_end":609708,"line_start":1705,"line_end":1705,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9356},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609985,"byte_end":609996,"line_start":1710,"line_end":1710,"column_start":5,"column_end":16},"name":"SYMLINK_MAX","qualname":"::unistd::PathconfVar::SYMLINK_MAX","value":"PathconfVar::SYMLINK_MAX","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Maximum number of bytes in a symbolic link.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os =\n          \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609766,"byte_end":609928,"line_start":1707,"line_end":1708,"column_start":5,"column_end":82}},{"value":"/ Maximum number of bytes in a symbolic link.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":609933,"byte_end":609980,"line_start":1709,"line_end":1709,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9359},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610273,"byte_end":610296,"line_start":1715,"line_end":1715,"column_start":5,"column_end":28},"name":"_POSIX_CHOWN_RESTRICTED","qualname":"::unistd::PathconfVar::_POSIX_CHOWN_RESTRICTED","value":"PathconfVar::_POSIX_CHOWN_RESTRICTED","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" The use of `chown` and `fchown` is restricted to a process with\n appropriate privileges, and to changing the group ID of a file only to\n the effective group ID of the process or to one of its supplementary\n group IDs.\n","sig":null,"attributes":[{"value":"/ The use of `chown` and `fchown` is restricted to a process with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610026,"byte_end":610093,"line_start":1711,"line_end":1711,"column_start":5,"column_end":72}},{"value":"/ appropriate privileges, and to changing the group ID of a file only to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610098,"byte_end":610172,"line_start":1712,"line_end":1712,"column_start":5,"column_end":79}},{"value":"/ the effective group ID of the process or to one of its supplementary","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610177,"byte_end":610249,"line_start":1713,"line_end":1713,"column_start":5,"column_end":77}},{"value":"/ group IDs.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610254,"byte_end":610268,"line_start":1714,"line_end":1714,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9362},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610401,"byte_end":610416,"line_start":1717,"line_end":1717,"column_start":5,"column_end":20},"name":"_POSIX_NO_TRUNC","qualname":"::unistd::PathconfVar::_POSIX_NO_TRUNC","value":"PathconfVar::_POSIX_NO_TRUNC","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Pathname components longer than {NAME_MAX} generate an error.\n","sig":null,"attributes":[{"value":"/ Pathname components longer than {NAME_MAX} generate an error.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610331,"byte_end":610396,"line_start":1716,"line_end":1716,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9365},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610575,"byte_end":610590,"line_start":1720,"line_end":1720,"column_start":5,"column_end":20},"name":"_POSIX_VDISABLE","qualname":"::unistd::PathconfVar::_POSIX_VDISABLE","value":"PathconfVar::_POSIX_VDISABLE","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" This symbol shall be defined to be the value of a character that shall\n disable terminal special character handling.\n","sig":null,"attributes":[{"value":"/ This symbol shall be defined to be the value of a character that shall","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610443,"byte_end":610517,"line_start":1718,"line_end":1718,"column_start":5,"column_end":79}},{"value":"/ disable terminal special character handling.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610522,"byte_end":610570,"line_start":1719,"line_end":1719,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9368},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610860,"byte_end":610875,"line_start":1725,"line_end":1725,"column_start":5,"column_end":20},"name":"_POSIX_ASYNC_IO","qualname":"::unistd::PathconfVar::_POSIX_ASYNC_IO","value":"PathconfVar::_POSIX_ASYNC_IO","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Asynchronous input or output operations may be performed for the\n associated file.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610617,"byte_end":610757,"line_start":1721,"line_end":1722,"column_start":5,"column_end":60}},{"value":"/ Asynchronous input or output operations may be performed for the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610762,"byte_end":610830,"line_start":1723,"line_end":1723,"column_start":5,"column_end":73}},{"value":"/ associated file.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610835,"byte_end":610855,"line_start":1724,"line_end":1724,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9371},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611144,"byte_end":611158,"line_start":1730,"line_end":1730,"column_start":5,"column_end":19},"name":"_POSIX_PRIO_IO","qualname":"::unistd::PathconfVar::_POSIX_PRIO_IO","value":"PathconfVar::_POSIX_PRIO_IO","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Prioritized input or output operations may be performed for the\n associated file.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":610902,"byte_end":611042,"line_start":1726,"line_end":1727,"column_start":5,"column_end":60}},{"value":"/ Prioritized input or output operations may be performed for the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611047,"byte_end":611114,"line_start":1728,"line_end":1728,"column_start":5,"column_end":72}},{"value":"/ associated file.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611119,"byte_end":611139,"line_start":1729,"line_end":1729,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9374},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611449,"byte_end":611463,"line_start":1735,"line_end":1735,"column_start":5,"column_end":19},"name":"_POSIX_SYNC_IO","qualname":"::unistd::PathconfVar::_POSIX_SYNC_IO","value":"PathconfVar::_POSIX_SYNC_IO","parent":{"krate":0,"index":9316},"children":[],"decl_id":null,"docs":" Synchronized input or output operations may be performed for the\n associated file.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os =\n          \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611184,"byte_end":611346,"line_start":1731,"line_end":1732,"column_start":5,"column_end":82}},{"value":"/ Synchronized input or output operations may be performed for the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611351,"byte_end":611419,"line_start":1733,"line_end":1733,"column_start":5,"column_end":73}},{"value":"/ associated file.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611424,"byte_end":611444,"line_start":1734,"line_end":1734,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":9316},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606738,"byte_end":606749,"line_start":1656,"line_end":1656,"column_start":10,"column_end":21},"name":"PathconfVar","qualname":"::unistd::PathconfVar","value":"pub enum PathconfVar {\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))]\n    /// Minimum number of bits needed to represent, as a signed integer value,\n    /// the maximum size of a regular file allowed in the specified directory.\n    FILESIZEBITS = ,\n\n    /// Maximum number of links to a single file.\n    LINK_MAX = ,\n\n    /// Maximum number of bytes in a terminal canonical input line.\n    MAX_CANON = ,\n\n    /// Minimum number of bytes for which space is available in a terminal input\n    /// queue; therefore, the maximum number of bytes a conforming application\n    /// may require to be typed as input before reading them.\n    MAX_INPUT = ,\n\n    /// Maximum number of bytes in a filename (not including the terminating\n    /// null of a filename string).\n    NAME_MAX = ,\n\n    /// Maximum number of bytes the implementation will store as a pathname in a\n    /// user-supplied buffer of unspecified size, including the terminating null\n    /// character. Minimum number the implementation will accept as the maximum\n    /// number of bytes in a pathname.\n    PATH_MAX = ,\n\n    /// Maximum number of bytes that is guaranteed to be atomic when writing to\n    /// a pipe.\n    PIPE_BUF = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"linux\", target_os = \"netbsd\", target_os = \"openbsd\"))]\n    /// Symbolic links can be created.\n    POSIX2_SYMLINKS = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))]\n    /// Minimum number of bytes of storage actually allocated for any portion of\n    /// a file.\n    POSIX_ALLOC_SIZE_MIN = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))]\n    /// Recommended increment for file transfer sizes between the\n    /// `POSIX_REC_MIN_XFER_SIZE` and `POSIX_REC_MAX_XFER_SIZE` values.\n    POSIX_REC_INCR_XFER_SIZE = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))]\n    /// Maximum recommended file transfer size.\n    POSIX_REC_MAX_XFER_SIZE = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))]\n    /// Minimum recommended file transfer size.\n    POSIX_REC_MIN_XFER_SIZE = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))]\n    ///  Recommended file transfer buffer alignment.\n    POSIX_REC_XFER_ALIGN = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os\n              = \"openbsd\"))]\n    /// Maximum number of bytes in a symbolic link.\n    SYMLINK_MAX = ,\n\n    /// The use of `chown` and `fchown` is restricted to a process with\n    /// appropriate privileges, and to changing the group ID of a file only to\n    /// the effective group ID of the process or to one of its supplementary\n    /// group IDs.\n    _POSIX_CHOWN_RESTRICTED = ,\n\n    /// Pathname components longer than {NAME_MAX} generate an error.\n    _POSIX_NO_TRUNC = ,\n\n    /// This symbol shall be defined to be the value of a character that shall\n    /// disable terminal special character handling.\n    _POSIX_VDISABLE = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))]\n    /// Asynchronous input or output operations may be performed for the\n    /// associated file.\n    _POSIX_ASYNC_IO = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"linux\", target_os = \"openbsd\"))]\n    /// Prioritized input or output operations may be performed for the\n    /// associated file.\n    _POSIX_PRIO_IO = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"linux\", target_os = \"netbsd\", target_os\n              = \"openbsd\"))]\n    /// Synchronized input or output operations may be performed for the\n    /// associated file.\n    _POSIX_SYNC_IO = ,\n}","parent":null,"children":[{"krate":0,"index":9317},{"krate":0,"index":9320},{"krate":0,"index":9323},{"krate":0,"index":9326},{"krate":0,"index":9329},{"krate":0,"index":9332},{"krate":0,"index":9335},{"krate":0,"index":9338},{"krate":0,"index":9341},{"krate":0,"index":9344},{"krate":0,"index":9347},{"krate":0,"index":9350},{"krate":0,"index":9353},{"krate":0,"index":9356},{"krate":0,"index":9359},{"krate":0,"index":9362},{"krate":0,"index":9365},{"krate":0,"index":9368},{"krate":0,"index":9371},{"krate":0,"index":9374}],"decl_id":null,"docs":" Variable names for `pathconf`","sig":null,"attributes":[{"value":"/ Variable names for `pathconf`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605817,"byte_end":605850,"line_start":1638,"line_end":1638,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605851,"byte_end":605854,"line_start":1639,"line_end":1639,"column_start":1,"column_end":4}},{"value":"/ Nix uses the same naming convention for these variables as the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605855,"byte_end":605921,"line_start":1640,"line_end":1640,"column_start":1,"column_end":67}},{"value":"/ [getconf(1)](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/getconf.html) utility.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":605922,"byte_end":606019,"line_start":1641,"line_end":1641,"column_start":1,"column_end":98}},{"value":"/ That is, `PathconfVar` variables have the same name as the abstract","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606020,"byte_end":606091,"line_start":1642,"line_end":1642,"column_start":1,"column_end":72}},{"value":"/ variables  shown in the `pathconf(2)` man page.  Usually, it's the same as","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606092,"byte_end":606170,"line_start":1643,"line_end":1643,"column_start":1,"column_end":79}},{"value":"/ the C variable name without the leading `_PC_`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606171,"byte_end":606222,"line_start":1644,"line_end":1644,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606223,"byte_end":606226,"line_start":1645,"line_end":1645,"column_start":1,"column_end":4}},{"value":"/ POSIX 1003.1-2008 standardizes all of these variables, but some OSes choose","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606227,"byte_end":606306,"line_start":1646,"line_end":1646,"column_start":1,"column_end":80}},{"value":"/ not to implement variables that cannot change at runtime.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606307,"byte_end":606368,"line_start":1647,"line_end":1647,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606369,"byte_end":606372,"line_start":1648,"line_end":1648,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606373,"byte_end":606389,"line_start":1649,"line_end":1649,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606390,"byte_end":606393,"line_start":1650,"line_end":1650,"column_start":1,"column_end":4}},{"value":"/ - [pathconf(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pathconf.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606394,"byte_end":606486,"line_start":1651,"line_end":1651,"column_start":1,"column_end":93}},{"value":"/ - [limits.h](http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/limits.h.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606487,"byte_end":606575,"line_start":1652,"line_end":1652,"column_start":1,"column_end":89}},{"value":"/ - [unistd.h](http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/unistd.h.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606576,"byte_end":606664,"line_start":1653,"line_end":1653,"column_start":1,"column_end":89}},{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":606716,"byte_end":606728,"line_start":1655,"line_end":1655,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":1906},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612391,"byte_end":612400,"line_start":1757,"line_end":1757,"column_start":8,"column_end":17},"name":"fpathconf","qualname":"::unistd::fpathconf","value":"pub fn fpathconf(RawFd, PathconfVar) -> Result<Option<c_long>>","parent":null,"children":[],"decl_id":null,"docs":" Like `pathconf`, but works with file descriptors instead of paths (see\n [fpathconf(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pathconf.html))","sig":null,"attributes":[{"value":"/ Like `pathconf`, but works with file descriptors instead of paths (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611680,"byte_end":611754,"line_start":1741,"line_end":1741,"column_start":1,"column_end":75}},{"value":"/ [fpathconf(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pathconf.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611755,"byte_end":611847,"line_start":1742,"line_end":1742,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611848,"byte_end":611851,"line_start":1743,"line_end":1743,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611852,"byte_end":611868,"line_start":1744,"line_end":1744,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611869,"byte_end":611872,"line_start":1745,"line_end":1745,"column_start":1,"column_end":4}},{"value":"/ - `fd`:   The file descriptor whose variable should be interrogated","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611873,"byte_end":611944,"line_start":1746,"line_end":1746,"column_start":1,"column_end":72}},{"value":"/ - `var`:  The pathconf variable to lookup","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611945,"byte_end":611990,"line_start":1747,"line_end":1747,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611991,"byte_end":611994,"line_start":1748,"line_end":1748,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":611995,"byte_end":612008,"line_start":1749,"line_end":1749,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612009,"byte_end":612012,"line_start":1750,"line_end":1750,"column_start":1,"column_end":4}},{"value":"/ - `Ok(Some(x))`: the variable's limit (for limit variables) or its","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612013,"byte_end":612083,"line_start":1751,"line_end":1751,"column_start":1,"column_end":71}},{"value":"/     implementation level (for option variables).  Implementation levels are","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612084,"byte_end":612163,"line_start":1752,"line_end":1752,"column_start":1,"column_end":80}},{"value":"/     usually a decimal-coded date, such as 200112 for POSIX 2001.12","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612164,"byte_end":612234,"line_start":1753,"line_end":1753,"column_start":1,"column_end":71}},{"value":"/ - `Ok(None)`: the variable has no limit (for limit variables) or is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612235,"byte_end":612306,"line_start":1754,"line_end":1754,"column_start":1,"column_end":72}},{"value":"/     unsupported (for option variables)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612307,"byte_end":612349,"line_start":1755,"line_end":1755,"column_start":1,"column_end":43}},{"value":"/ - `Err(x)`: an error occurred","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612350,"byte_end":612383,"line_start":1756,"line_end":1756,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":1907},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613828,"byte_end":613836,"line_start":1794,"line_end":1794,"column_start":8,"column_end":16},"name":"pathconf","qualname":"::unistd::pathconf","value":"pub fn pathconf<P: ?Sized + NixPath>(&P, PathconfVar)\n-> Result<Option<c_long>>","parent":null,"children":[],"decl_id":null,"docs":" Get path-dependent configurable system variables (see\n [pathconf(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pathconf.html))","sig":null,"attributes":[{"value":"/ Get path-dependent configurable system variables (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612741,"byte_end":612798,"line_start":1773,"line_end":1773,"column_start":1,"column_end":58}},{"value":"/ [pathconf(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pathconf.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612799,"byte_end":612890,"line_start":1774,"line_end":1774,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612891,"byte_end":612894,"line_start":1775,"line_end":1775,"column_start":1,"column_end":4}},{"value":"/ Returns the value of a path-dependent configurable system variable.  Most","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612895,"byte_end":612972,"line_start":1776,"line_end":1776,"column_start":1,"column_end":78}},{"value":"/ supported variables also have associated compile-time constants, but POSIX","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":612973,"byte_end":613051,"line_start":1777,"line_end":1777,"column_start":1,"column_end":79}},{"value":"/ allows their values to change at runtime.  There are generally two types of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613052,"byte_end":613131,"line_start":1778,"line_end":1778,"column_start":1,"column_end":80}},{"value":"/ `pathconf` variables: options and limits.  See [pathconf(2)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/pathconf.html) for more details.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613132,"byte_end":613287,"line_start":1779,"line_end":1779,"column_start":1,"column_end":156}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613288,"byte_end":613291,"line_start":1780,"line_end":1780,"column_start":1,"column_end":4}},{"value":"/ # Parameters","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613292,"byte_end":613308,"line_start":1781,"line_end":1781,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613309,"byte_end":613312,"line_start":1782,"line_end":1782,"column_start":1,"column_end":4}},{"value":"/ - `path`: Lookup the value of `var` for this file or directory","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613313,"byte_end":613379,"line_start":1783,"line_end":1783,"column_start":1,"column_end":67}},{"value":"/ - `var`:  The `pathconf` variable to lookup","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613380,"byte_end":613427,"line_start":1784,"line_end":1784,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613428,"byte_end":613431,"line_start":1785,"line_end":1785,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613432,"byte_end":613445,"line_start":1786,"line_end":1786,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613446,"byte_end":613449,"line_start":1787,"line_end":1787,"column_start":1,"column_end":4}},{"value":"/ - `Ok(Some(x))`: the variable's limit (for limit variables) or its","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613450,"byte_end":613520,"line_start":1788,"line_end":1788,"column_start":1,"column_end":71}},{"value":"/     implementation level (for option variables).  Implementation levels are","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613521,"byte_end":613600,"line_start":1789,"line_end":1789,"column_start":1,"column_end":80}},{"value":"/     usually a decimal-coded date, such as 200112 for POSIX 2001.12","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613601,"byte_end":613671,"line_start":1790,"line_end":1790,"column_start":1,"column_end":71}},{"value":"/ - `Ok(None)`: the variable has no limit (for limit variables) or is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613672,"byte_end":613743,"line_start":1791,"line_end":1791,"column_start":1,"column_end":72}},{"value":"/     unsupported (for option variables)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613744,"byte_end":613786,"line_start":1792,"line_end":1792,"column_start":1,"column_end":43}},{"value":"/ - `Err(x)`: an error occurred","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":613787,"byte_end":613820,"line_start":1793,"line_end":1793,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9392},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615276,"byte_end":615290,"line_start":1833,"line_end":1833,"column_start":5,"column_end":19},"name":"AIO_LISTIO_MAX","qualname":"::unistd::SysconfVar::AIO_LISTIO_MAX","value":"SysconfVar::AIO_LISTIO_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum number of I/O operations in a single list I/O call supported by\n the implementation.\n","sig":null,"attributes":[{"value":"/ Maximum number of I/O operations in a single list I/O call supported by","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615168,"byte_end":615243,"line_start":1831,"line_end":1831,"column_start":5,"column_end":80}},{"value":"/ the implementation.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615248,"byte_end":615271,"line_start":1832,"line_end":1832,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9395},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615430,"byte_end":615437,"line_start":1836,"line_end":1836,"column_start":5,"column_end":12},"name":"AIO_MAX","qualname":"::unistd::SysconfVar::AIO_MAX","value":"SysconfVar::AIO_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum number of outstanding asynchronous I/O operations supported by\n the implementation.\n","sig":null,"attributes":[{"value":"/ Maximum number of outstanding asynchronous I/O operations supported by","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615323,"byte_end":615397,"line_start":1834,"line_end":1834,"column_start":5,"column_end":79}},{"value":"/ the implementation.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615402,"byte_end":615425,"line_start":1835,"line_end":1835,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9398},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615789,"byte_end":615807,"line_start":1842,"line_end":1842,"column_start":5,"column_end":23},"name":"AIO_PRIO_DELTA_MAX","qualname":"::unistd::SysconfVar::AIO_PRIO_DELTA_MAX","value":"SysconfVar::AIO_PRIO_DELTA_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The maximum amount by which a process can decrease its asynchronous I/O\n priority level from its own scheduling priority.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615463,"byte_end":615647,"line_start":1837,"line_end":1839,"column_start":5,"column_end":37}},{"value":"/ The maximum amount by which a process can decrease its asynchronous I/O","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615652,"byte_end":615727,"line_start":1840,"line_end":1840,"column_start":5,"column_end":80}},{"value":"/ priority level from its own scheduling priority.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615732,"byte_end":615784,"line_start":1841,"line_end":1841,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9401},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615929,"byte_end":615936,"line_start":1844,"line_end":1844,"column_start":5,"column_end":12},"name":"ARG_MAX","qualname":"::unistd::SysconfVar::ARG_MAX","value":"SysconfVar::ARG_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum length of argument to the exec functions including environment data.\n","sig":null,"attributes":[{"value":"/ Maximum length of argument to the exec functions including environment data.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615844,"byte_end":615924,"line_start":1843,"line_end":1843,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9404},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616036,"byte_end":616046,"line_start":1846,"line_end":1846,"column_start":5,"column_end":15},"name":"ATEXIT_MAX","qualname":"::unistd::SysconfVar::ATEXIT_MAX","value":"SysconfVar::ATEXIT_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum number of functions that may be registered with `atexit`.\n","sig":null,"attributes":[{"value":"/ Maximum number of functions that may be registered with `atexit`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615962,"byte_end":616031,"line_start":1845,"line_end":1845,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9407},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616131,"byte_end":616142,"line_start":1848,"line_end":1848,"column_start":5,"column_end":16},"name":"BC_BASE_MAX","qualname":"::unistd::SysconfVar::BC_BASE_MAX","value":"SysconfVar::BC_BASE_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum obase values allowed by the bc utility.\n","sig":null,"attributes":[{"value":"/ Maximum obase values allowed by the bc utility.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616075,"byte_end":616126,"line_start":1847,"line_end":1847,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9410},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616248,"byte_end":616258,"line_start":1850,"line_end":1850,"column_start":5,"column_end":15},"name":"BC_DIM_MAX","qualname":"::unistd::SysconfVar::BC_DIM_MAX","value":"SysconfVar::BC_DIM_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum number of elements permitted in an array by the bc utility.\n","sig":null,"attributes":[{"value":"/ Maximum number of elements permitted in an array by the bc utility.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616172,"byte_end":616243,"line_start":1849,"line_end":1849,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9413},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616342,"byte_end":616354,"line_start":1852,"line_end":1852,"column_start":5,"column_end":17},"name":"BC_SCALE_MAX","qualname":"::unistd::SysconfVar::BC_SCALE_MAX","value":"SysconfVar::BC_SCALE_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum scale value allowed by the bc utility.\n","sig":null,"attributes":[{"value":"/ Maximum scale value allowed by the bc utility.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616287,"byte_end":616337,"line_start":1851,"line_end":1851,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9416},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616457,"byte_end":616470,"line_start":1854,"line_end":1854,"column_start":5,"column_end":18},"name":"BC_STRING_MAX","qualname":"::unistd::SysconfVar::BC_STRING_MAX","value":"SysconfVar::BC_STRING_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum length of a string constant accepted by the bc utility.\n","sig":null,"attributes":[{"value":"/ Maximum length of a string constant accepted by the bc utility.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616385,"byte_end":616452,"line_start":1853,"line_end":1853,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9419},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616569,"byte_end":616578,"line_start":1856,"line_end":1856,"column_start":5,"column_end":14},"name":"CHILD_MAX","qualname":"::unistd::SysconfVar::CHILD_MAX","value":"SysconfVar::CHILD_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum number of simultaneous processes per real user ID.\n","sig":null,"attributes":[{"value":"/ Maximum number of simultaneous processes per real user ID.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616502,"byte_end":616564,"line_start":1855,"line_end":1855,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9422},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616774,"byte_end":616790,"line_start":1860,"line_end":1860,"column_start":5,"column_end":21},"name":"COLL_WEIGHTS_MAX","qualname":"::unistd::SysconfVar::COLL_WEIGHTS_MAX","value":"SysconfVar::COLL_WEIGHTS_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum number of weights that can be assigned to an entry of the\n LC_COLLATE order keyword in the locale definition file\n","sig":null,"attributes":[{"value":"/ Maximum number of weights that can be assigned to an entry of the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616637,"byte_end":616706,"line_start":1858,"line_end":1858,"column_start":5,"column_end":74}},{"value":"/ LC_COLLATE order keyword in the locale definition file","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616711,"byte_end":616769,"line_start":1859,"line_end":1859,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9425},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616878,"byte_end":616892,"line_start":1862,"line_end":1862,"column_start":5,"column_end":19},"name":"DELAYTIMER_MAX","qualname":"::unistd::SysconfVar::DELAYTIMER_MAX","value":"SysconfVar::DELAYTIMER_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum number of timer expiration overruns.\n","sig":null,"attributes":[{"value":"/ Maximum number of timer expiration overruns.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616825,"byte_end":616873,"line_start":1861,"line_end":1861,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9428},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617030,"byte_end":617043,"line_start":1865,"line_end":1865,"column_start":5,"column_end":18},"name":"EXPR_NEST_MAX","qualname":"::unistd::SysconfVar::EXPR_NEST_MAX","value":"SysconfVar::EXPR_NEST_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum number of expressions that can be nested within parentheses by\n the expr utility.\n","sig":null,"attributes":[{"value":"/ Maximum number of expressions that can be nested within parentheses by","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":616925,"byte_end":616999,"line_start":1863,"line_end":1863,"column_start":5,"column_end":79}},{"value":"/ the expr utility.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617004,"byte_end":617025,"line_start":1864,"line_end":1864,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9431},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617390,"byte_end":617403,"line_start":1871,"line_end":1871,"column_start":5,"column_end":18},"name":"HOST_NAME_MAX","qualname":"::unistd::SysconfVar::HOST_NAME_MAX","value":"SysconfVar::HOST_NAME_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum length of a host name (not including the terminating null) as\n returned from the `gethostname` function\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617075,"byte_end":617258,"line_start":1866,"line_end":1868,"column_start":5,"column_end":37}},{"value":"/ Maximum length of a host name (not including the terminating null) as","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617263,"byte_end":617336,"line_start":1869,"line_end":1869,"column_start":5,"column_end":78}},{"value":"/ returned from the `gethostname` function","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617341,"byte_end":617385,"line_start":1870,"line_end":1870,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9434},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617551,"byte_end":617558,"line_start":1874,"line_end":1874,"column_start":5,"column_end":12},"name":"IOV_MAX","qualname":"::unistd::SysconfVar::IOV_MAX","value":"SysconfVar::IOV_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum number of iovec structures that one process has available for\n use with `readv` or `writev`.\n","sig":null,"attributes":[{"value":"/ Maximum number of iovec structures that one process has available for","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617435,"byte_end":617508,"line_start":1872,"line_end":1872,"column_start":5,"column_end":78}},{"value":"/ use with `readv` or `writev`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617513,"byte_end":617546,"line_start":1873,"line_end":1873,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9437},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617846,"byte_end":617854,"line_start":1879,"line_end":1879,"column_start":5,"column_end":13},"name":"LINE_MAX","qualname":"::unistd::SysconfVar::LINE_MAX","value":"SysconfVar::LINE_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Unless otherwise noted, the maximum length, in bytes, of a utility's\n input line (either standard input or another file), when the utility is\n described as processing text files. The length includes room for the\n trailing <newline>.\n","sig":null,"attributes":[{"value":"/ Unless otherwise noted, the maximum length, in bytes, of a utility's","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617584,"byte_end":617656,"line_start":1875,"line_end":1875,"column_start":5,"column_end":77}},{"value":"/ input line (either standard input or another file), when the utility is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617661,"byte_end":617736,"line_start":1876,"line_end":1876,"column_start":5,"column_end":80}},{"value":"/ described as processing text files. The length includes room for the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617741,"byte_end":617813,"line_start":1877,"line_end":1877,"column_start":5,"column_end":77}},{"value":"/ trailing <newline>.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617818,"byte_end":617841,"line_start":1878,"line_end":1878,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9440},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617921,"byte_end":617935,"line_start":1881,"line_end":1881,"column_start":5,"column_end":19},"name":"LOGIN_NAME_MAX","qualname":"::unistd::SysconfVar::LOGIN_NAME_MAX","value":"SysconfVar::LOGIN_NAME_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum length of a login name.\n","sig":null,"attributes":[{"value":"/ Maximum length of a login name.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617881,"byte_end":617916,"line_start":1880,"line_end":1880,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9443},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618044,"byte_end":618055,"line_start":1883,"line_end":1883,"column_start":5,"column_end":16},"name":"NGROUPS_MAX","qualname":"::unistd::SysconfVar::NGROUPS_MAX","value":"SysconfVar::NGROUPS_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Maximum number of simultaneous supplementary group IDs per process.\n","sig":null,"attributes":[{"value":"/ Maximum number of simultaneous supplementary group IDs per process.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":617968,"byte_end":618039,"line_start":1882,"line_end":1882,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9446},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618152,"byte_end":618168,"line_start":1885,"line_end":1885,"column_start":5,"column_end":21},"name":"GETGR_R_SIZE_MAX","qualname":"::unistd::SysconfVar::GETGR_R_SIZE_MAX","value":"SysconfVar::GETGR_R_SIZE_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Initial size of `getgrgid_r` and `getgrnam_r` data buffers\n","sig":null,"attributes":[{"value":"/ Initial size of `getgrgid_r` and `getgrnam_r` data buffers","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618085,"byte_end":618147,"line_start":1884,"line_end":1884,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9449},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618270,"byte_end":618286,"line_start":1887,"line_end":1887,"column_start":5,"column_end":21},"name":"GETPW_R_SIZE_MAX","qualname":"::unistd::SysconfVar::GETPW_R_SIZE_MAX","value":"SysconfVar::GETPW_R_SIZE_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Initial size of `getpwuid_r` and `getpwnam_r` data buffers\n","sig":null,"attributes":[{"value":"/ Initial size of `getpwuid_r` and `getpwnam_r` data buffers","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618203,"byte_end":618265,"line_start":1886,"line_end":1886,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9452},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618402,"byte_end":618413,"line_start":1889,"line_end":1889,"column_start":5,"column_end":16},"name":"MQ_OPEN_MAX","qualname":"::unistd::SysconfVar::MQ_OPEN_MAX","value":"SysconfVar::MQ_OPEN_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The maximum number of open message queue descriptors a process may hold.\n","sig":null,"attributes":[{"value":"/ The maximum number of open message queue descriptors a process may hold.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618321,"byte_end":618397,"line_start":1888,"line_end":1888,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9455},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618525,"byte_end":618536,"line_start":1891,"line_end":1891,"column_start":5,"column_end":16},"name":"MQ_PRIO_MAX","qualname":"::unistd::SysconfVar::MQ_PRIO_MAX","value":"SysconfVar::MQ_PRIO_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The maximum number of message priorities supported by the implementation.\n","sig":null,"attributes":[{"value":"/ The maximum number of message priorities supported by the implementation.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618443,"byte_end":618520,"line_start":1890,"line_end":1890,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9458},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618688,"byte_end":618696,"line_start":1894,"line_end":1894,"column_start":5,"column_end":13},"name":"OPEN_MAX","qualname":"::unistd::SysconfVar::OPEN_MAX","value":"SysconfVar::OPEN_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" A value one greater than the maximum value that the system may assign to\n a newly-created file descriptor.\n","sig":null,"attributes":[{"value":"/ A value one greater than the maximum value that the system may assign to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618566,"byte_end":618642,"line_start":1892,"line_end":1892,"column_start":5,"column_end":81}},{"value":"/ a newly-created file descriptor.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618647,"byte_end":618683,"line_start":1893,"line_end":1893,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9461},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618946,"byte_end":618966,"line_start":1898,"line_end":1898,"column_start":5,"column_end":25},"name":"_POSIX_ADVISORY_INFO","qualname":"::unistd::SysconfVar::_POSIX_ADVISORY_INFO","value":"SysconfVar::_POSIX_ADVISORY_INFO","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Advisory Information option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618723,"byte_end":618872,"line_start":1895,"line_end":1896,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the Advisory Information option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618877,"byte_end":618941,"line_start":1897,"line_end":1897,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9464},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619232,"byte_end":619247,"line_start":1903,"line_end":1903,"column_start":5,"column_end":20},"name":"_POSIX_BARRIERS","qualname":"::unistd::SysconfVar::_POSIX_BARRIERS","value":"SysconfVar::_POSIX_BARRIERS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports barriers.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":618998,"byte_end":619181,"line_start":1899,"line_end":1901,"column_start":5,"column_end":37}},{"value":"/ The implementation supports barriers.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619186,"byte_end":619227,"line_start":1902,"line_end":1902,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9467},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619341,"byte_end":619363,"line_start":1905,"line_end":1905,"column_start":5,"column_end":27},"name":"_POSIX_ASYNCHRONOUS_IO","qualname":"::unistd::SysconfVar::_POSIX_ASYNCHRONOUS_IO","value":"SysconfVar::_POSIX_ASYNCHRONOUS_IO","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports asynchronous input and output.\n","sig":null,"attributes":[{"value":"/ The implementation supports asynchronous input and output.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619274,"byte_end":619336,"line_start":1904,"line_end":1904,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9470},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619638,"byte_end":619660,"line_start":1910,"line_end":1910,"column_start":5,"column_end":27},"name":"_POSIX_CLOCK_SELECTION","qualname":"::unistd::SysconfVar::_POSIX_CLOCK_SELECTION","value":"SysconfVar::_POSIX_CLOCK_SELECTION","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports clock selection.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619397,"byte_end":619580,"line_start":1906,"line_end":1908,"column_start":5,"column_end":37}},{"value":"/ The implementation supports clock selection.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619585,"byte_end":619633,"line_start":1909,"line_end":1909,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9473},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619954,"byte_end":619968,"line_start":1915,"line_end":1915,"column_start":5,"column_end":19},"name":"_POSIX_CPUTIME","qualname":"::unistd::SysconfVar::_POSIX_CPUTIME","value":"SysconfVar::_POSIX_CPUTIME","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Process CPU-Time Clocks option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619694,"byte_end":619877,"line_start":1911,"line_end":1913,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Process CPU-Time Clocks option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619882,"byte_end":619949,"line_start":1914,"line_end":1914,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9476},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620063,"byte_end":620075,"line_start":1917,"line_end":1917,"column_start":5,"column_end":17},"name":"_POSIX_FSYNC","qualname":"::unistd::SysconfVar::_POSIX_FSYNC","value":"SysconfVar::_POSIX_FSYNC","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the File Synchronization option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the File Synchronization option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":619994,"byte_end":620058,"line_start":1916,"line_end":1916,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9479},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620306,"byte_end":620317,"line_start":1921,"line_end":1921,"column_start":5,"column_end":16},"name":"_POSIX_IPV6","qualname":"::unistd::SysconfVar::_POSIX_IPV6","value":"SysconfVar::_POSIX_IPV6","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the IPv6 option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620099,"byte_end":620248,"line_start":1918,"line_end":1919,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the IPv6 option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620253,"byte_end":620301,"line_start":1920,"line_end":1920,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9482},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620389,"byte_end":620407,"line_start":1923,"line_end":1923,"column_start":5,"column_end":23},"name":"_POSIX_JOB_CONTROL","qualname":"::unistd::SysconfVar::_POSIX_JOB_CONTROL","value":"SysconfVar::_POSIX_JOB_CONTROL","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports job control.\n","sig":null,"attributes":[{"value":"/ The implementation supports job control.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620340,"byte_end":620384,"line_start":1922,"line_end":1922,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9485},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620494,"byte_end":620513,"line_start":1925,"line_end":1925,"column_start":5,"column_end":24},"name":"_POSIX_MAPPED_FILES","qualname":"::unistd::SysconfVar::_POSIX_MAPPED_FILES","value":"SysconfVar::_POSIX_MAPPED_FILES","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports memory mapped Files.\n","sig":null,"attributes":[{"value":"/ The implementation supports memory mapped Files.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620437,"byte_end":620489,"line_start":1924,"line_end":1924,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9488},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620615,"byte_end":620629,"line_start":1927,"line_end":1927,"column_start":5,"column_end":19},"name":"_POSIX_MEMLOCK","qualname":"::unistd::SysconfVar::_POSIX_MEMLOCK","value":"SysconfVar::_POSIX_MEMLOCK","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Process Memory Locking option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Process Memory Locking option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620544,"byte_end":620610,"line_start":1926,"line_end":1926,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9491},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620724,"byte_end":620744,"line_start":1929,"line_end":1929,"column_start":5,"column_end":25},"name":"_POSIX_MEMLOCK_RANGE","qualname":"::unistd::SysconfVar::_POSIX_MEMLOCK_RANGE","value":"SysconfVar::_POSIX_MEMLOCK_RANGE","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Range Memory Locking option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Range Memory Locking option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620655,"byte_end":620719,"line_start":1928,"line_end":1928,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9494},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620831,"byte_end":620855,"line_start":1931,"line_end":1931,"column_start":5,"column_end":29},"name":"_POSIX_MEMORY_PROTECTION","qualname":"::unistd::SysconfVar::_POSIX_MEMORY_PROTECTION","value":"SysconfVar::_POSIX_MEMORY_PROTECTION","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports memory protection.\n","sig":null,"attributes":[{"value":"/ The implementation supports memory protection.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620776,"byte_end":620826,"line_start":1930,"line_end":1930,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9497},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620955,"byte_end":620977,"line_start":1933,"line_end":1933,"column_start":5,"column_end":27},"name":"_POSIX_MESSAGE_PASSING","qualname":"::unistd::SysconfVar::_POSIX_MESSAGE_PASSING","value":"SysconfVar::_POSIX_MESSAGE_PASSING","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Message Passing option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Message Passing option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":620891,"byte_end":620950,"line_start":1932,"line_end":1932,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9500},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621075,"byte_end":621097,"line_start":1935,"line_end":1935,"column_start":5,"column_end":27},"name":"_POSIX_MONOTONIC_CLOCK","qualname":"::unistd::SysconfVar::_POSIX_MONOTONIC_CLOCK","value":"SysconfVar::_POSIX_MONOTONIC_CLOCK","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Monotonic Clock option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Monotonic Clock option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621011,"byte_end":621070,"line_start":1934,"line_end":1934,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9503},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621397,"byte_end":621418,"line_start":1940,"line_end":1940,"column_start":5,"column_end":26},"name":"_POSIX_PRIORITIZED_IO","qualname":"::unistd::SysconfVar::_POSIX_PRIORITIZED_IO","value":"SysconfVar::_POSIX_PRIORITIZED_IO","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Prioritized Input and Output option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621131,"byte_end":621315,"line_start":1936,"line_end":1938,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Prioritized Input and Output option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621320,"byte_end":621392,"line_start":1939,"line_end":1939,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9506},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621518,"byte_end":621544,"line_start":1942,"line_end":1942,"column_start":5,"column_end":31},"name":"_POSIX_PRIORITY_SCHEDULING","qualname":"::unistd::SysconfVar::_POSIX_PRIORITY_SCHEDULING","value":"SysconfVar::_POSIX_PRIORITY_SCHEDULING","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Process Scheduling option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Process Scheduling option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621451,"byte_end":621513,"line_start":1941,"line_end":1941,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9509},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621796,"byte_end":621814,"line_start":1946,"line_end":1946,"column_start":5,"column_end":23},"name":"_POSIX_RAW_SOCKETS","qualname":"::unistd::SysconfVar::_POSIX_RAW_SOCKETS","value":"SysconfVar::_POSIX_RAW_SOCKETS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Raw Sockets option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621582,"byte_end":621731,"line_start":1943,"line_end":1944,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the Raw Sockets option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621736,"byte_end":621791,"line_start":1945,"line_end":1945,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9512},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622086,"byte_end":622112,"line_start":1951,"line_end":1951,"column_start":5,"column_end":31},"name":"_POSIX_READER_WRITER_LOCKS","qualname":"::unistd::SysconfVar::_POSIX_READER_WRITER_LOCKS","value":"SysconfVar::_POSIX_READER_WRITER_LOCKS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports read-write locks.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":621844,"byte_end":622027,"line_start":1947,"line_end":1949,"column_start":5,"column_end":37}},{"value":"/ The implementation supports read-write locks.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622032,"byte_end":622081,"line_start":1950,"line_end":1950,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9515},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622397,"byte_end":622420,"line_start":1956,"line_end":1956,"column_start":5,"column_end":28},"name":"_POSIX_REALTIME_SIGNALS","qualname":"::unistd::SysconfVar::_POSIX_REALTIME_SIGNALS","value":"SysconfVar::_POSIX_REALTIME_SIGNALS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports realtime signals.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622150,"byte_end":622338,"line_start":1952,"line_end":1954,"column_start":5,"column_end":39}},{"value":"/ The implementation supports realtime signals.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622343,"byte_end":622392,"line_start":1955,"line_end":1955,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9518},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622719,"byte_end":622732,"line_start":1961,"line_end":1961,"column_start":5,"column_end":18},"name":"_POSIX_REGEXP","qualname":"::unistd::SysconfVar::_POSIX_REGEXP","value":"SysconfVar::_POSIX_REGEXP","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Regular Expression Handling option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622455,"byte_end":622638,"line_start":1957,"line_end":1959,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Regular Expression Handling option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622643,"byte_end":622714,"line_start":1960,"line_end":1960,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9521},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622828,"byte_end":622844,"line_start":1963,"line_end":1963,"column_start":5,"column_end":21},"name":"_POSIX_SAVED_IDS","qualname":"::unistd::SysconfVar::_POSIX_SAVED_IDS","value":"SysconfVar::_POSIX_SAVED_IDS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Each process has a saved set-user-ID and a saved set-group-ID.\n","sig":null,"attributes":[{"value":"/ Each process has a saved set-user-ID and a saved set-group-ID.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622757,"byte_end":622823,"line_start":1962,"line_end":1962,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9524},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622920,"byte_end":622937,"line_start":1965,"line_end":1965,"column_start":5,"column_end":22},"name":"_POSIX_SEMAPHORES","qualname":"::unistd::SysconfVar::_POSIX_SEMAPHORES","value":"SysconfVar::_POSIX_SEMAPHORES","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports semaphores.\n","sig":null,"attributes":[{"value":"/ The implementation supports semaphores.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622872,"byte_end":622915,"line_start":1964,"line_end":1964,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9527},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623036,"byte_end":623064,"line_start":1967,"line_end":1967,"column_start":5,"column_end":33},"name":"_POSIX_SHARED_MEMORY_OBJECTS","qualname":"::unistd::SysconfVar::_POSIX_SHARED_MEMORY_OBJECTS","value":"SysconfVar::_POSIX_SHARED_MEMORY_OBJECTS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Shared Memory Objects option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Shared Memory Objects option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":622966,"byte_end":623031,"line_start":1966,"line_end":1966,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9530},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623345,"byte_end":623357,"line_start":1972,"line_end":1972,"column_start":5,"column_end":17},"name":"_POSIX_SHELL","qualname":"::unistd::SysconfVar::_POSIX_SHELL","value":"SysconfVar::_POSIX_SHELL","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the POSIX shell.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623104,"byte_end":623287,"line_start":1968,"line_end":1970,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the POSIX shell.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623292,"byte_end":623340,"line_start":1971,"line_end":1971,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9533},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623623,"byte_end":623635,"line_start":1977,"line_end":1977,"column_start":5,"column_end":17},"name":"_POSIX_SPAWN","qualname":"::unistd::SysconfVar::_POSIX_SPAWN","value":"SysconfVar::_POSIX_SPAWN","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Spawn option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623381,"byte_end":623564,"line_start":1973,"line_end":1975,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Spawn option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623569,"byte_end":623618,"line_start":1976,"line_end":1976,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9536},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623895,"byte_end":623912,"line_start":1982,"line_end":1982,"column_start":5,"column_end":22},"name":"_POSIX_SPIN_LOCKS","qualname":"::unistd::SysconfVar::_POSIX_SPIN_LOCKS","value":"SysconfVar::_POSIX_SPIN_LOCKS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports spin locks.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623659,"byte_end":623842,"line_start":1978,"line_end":1980,"column_start":5,"column_end":37}},{"value":"/ The implementation supports spin locks.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623847,"byte_end":623890,"line_start":1981,"line_end":1981,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9539},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624167,"byte_end":624189,"line_start":1986,"line_end":1986,"column_start":5,"column_end":27},"name":"_POSIX_SPORADIC_SERVER","qualname":"::unistd::SysconfVar::_POSIX_SPORADIC_SERVER","value":"SysconfVar::_POSIX_SPORADIC_SERVER","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Process Sporadic Server option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":623941,"byte_end":624090,"line_start":1983,"line_end":1984,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the Process Sporadic Server option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624095,"byte_end":624162,"line_start":1985,"line_end":1985,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9542},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624333,"byte_end":624351,"line_start":1989,"line_end":1989,"column_start":5,"column_end":23},"name":"_POSIX_SS_REPL_MAX","qualname":"::unistd::SysconfVar::_POSIX_SS_REPL_MAX","value":"SysconfVar::_POSIX_SS_REPL_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624223,"byte_end":624328,"line_start":1987,"line_end":1988,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9545},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624459,"byte_end":624481,"line_start":1991,"line_end":1991,"column_start":5,"column_end":27},"name":"_POSIX_SYNCHRONIZED_IO","qualname":"::unistd::SysconfVar::_POSIX_SYNCHRONIZED_IO","value":"SysconfVar::_POSIX_SYNCHRONIZED_IO","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Synchronized Input and Output option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Synchronized Input and Output option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624381,"byte_end":624454,"line_start":1990,"line_end":1990,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9548},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624594,"byte_end":624622,"line_start":1993,"line_end":1993,"column_start":5,"column_end":33},"name":"_POSIX_THREAD_ATTR_STACKADDR","qualname":"::unistd::SysconfVar::_POSIX_THREAD_ATTR_STACKADDR","value":"SysconfVar::_POSIX_THREAD_ATTR_STACKADDR","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Thread Stack Address Attribute option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Thread Stack Address Attribute option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624515,"byte_end":624589,"line_start":1992,"line_end":1992,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9551},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624738,"byte_end":624766,"line_start":1995,"line_end":1995,"column_start":5,"column_end":33},"name":"_POSIX_THREAD_ATTR_STACKSIZE","qualname":"::unistd::SysconfVar::_POSIX_THREAD_ATTR_STACKSIZE","value":"SysconfVar::_POSIX_THREAD_ATTR_STACKSIZE","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Thread Stack Size Attribute option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Thread Stack Size Attribute option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624662,"byte_end":624733,"line_start":1994,"line_end":1994,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9554},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625007,"byte_end":625028,"line_start":1999,"line_end":1999,"column_start":5,"column_end":26},"name":"_POSIX_THREAD_CPUTIME","qualname":"::unistd::SysconfVar::_POSIX_THREAD_CPUTIME","value":"SysconfVar::_POSIX_THREAD_CPUTIME","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Thread CPU-Time Clocks option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n          target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624806,"byte_end":624931,"line_start":1996,"line_end":1997,"column_start":5,"column_end":57}},{"value":"/ The implementation supports the Thread CPU-Time Clocks option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":624936,"byte_end":625002,"line_start":1998,"line_end":1998,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9557},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625155,"byte_end":625181,"line_start":2002,"line_end":2002,"column_start":5,"column_end":31},"name":"_POSIX_THREAD_PRIO_INHERIT","qualname":"::unistd::SysconfVar::_POSIX_THREAD_PRIO_INHERIT","value":"SysconfVar::_POSIX_THREAD_PRIO_INHERIT","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Non-Robust Mutex Priority Inheritance\n option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Non-Robust Mutex Priority Inheritance","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625061,"byte_end":625134,"line_start":2000,"line_end":2000,"column_start":5,"column_end":78}},{"value":"/ option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625139,"byte_end":625150,"line_start":2001,"line_end":2001,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9560},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625304,"byte_end":625330,"line_start":2004,"line_end":2004,"column_start":5,"column_end":31},"name":"_POSIX_THREAD_PRIO_PROTECT","qualname":"::unistd::SysconfVar::_POSIX_THREAD_PRIO_PROTECT","value":"SysconfVar::_POSIX_THREAD_PRIO_PROTECT","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Non-Robust Mutex Priority Protection option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Non-Robust Mutex Priority Protection option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625219,"byte_end":625299,"line_start":2003,"line_end":2003,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9563},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625444,"byte_end":625477,"line_start":2006,"line_end":2006,"column_start":5,"column_end":38},"name":"_POSIX_THREAD_PRIORITY_SCHEDULING","qualname":"::unistd::SysconfVar::_POSIX_THREAD_PRIORITY_SCHEDULING","value":"SysconfVar::_POSIX_THREAD_PRIORITY_SCHEDULING","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Thread Execution Scheduling option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Thread Execution Scheduling option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625368,"byte_end":625439,"line_start":2005,"line_end":2005,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9566},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625804,"byte_end":625832,"line_start":2012,"line_end":2012,"column_start":5,"column_end":33},"name":"_POSIX_THREAD_PROCESS_SHARED","qualname":"::unistd::SysconfVar::_POSIX_THREAD_PROCESS_SHARED","value":"SysconfVar::_POSIX_THREAD_PROCESS_SHARED","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Thread Process-Shared Synchronization\n option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625522,"byte_end":625705,"line_start":2007,"line_end":2009,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Thread Process-Shared Synchronization","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625710,"byte_end":625783,"line_start":2010,"line_end":2010,"column_start":5,"column_end":78}},{"value":"/ option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625788,"byte_end":625799,"line_start":2011,"line_end":2011,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9569},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626033,"byte_end":626066,"line_start":2015,"line_end":2015,"column_start":5,"column_end":38},"name":"_POSIX_THREAD_ROBUST_PRIO_INHERIT","qualname":"::unistd::SysconfVar::_POSIX_THREAD_ROBUST_PRIO_INHERIT","value":"SysconfVar::_POSIX_THREAD_ROBUST_PRIO_INHERIT","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Robust Mutex Priority Inheritance option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"linux\", target_os =\n          \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625872,"byte_end":625946,"line_start":2013,"line_end":2013,"column_start":5,"column_end":79}},{"value":"/ The implementation supports the Robust Mutex Priority Inheritance option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":625951,"byte_end":626028,"line_start":2014,"line_end":2014,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9572},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626271,"byte_end":626304,"line_start":2018,"line_end":2018,"column_start":5,"column_end":38},"name":"_POSIX_THREAD_ROBUST_PRIO_PROTECT","qualname":"::unistd::SysconfVar::_POSIX_THREAD_ROBUST_PRIO_PROTECT","value":"SysconfVar::_POSIX_THREAD_ROBUST_PRIO_PROTECT","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Robust Mutex Priority Protection option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"linux\", target_os =\n          \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626111,"byte_end":626185,"line_start":2016,"line_end":2016,"column_start":5,"column_end":79}},{"value":"/ The implementation supports the Robust Mutex Priority Protection option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626190,"byte_end":626266,"line_start":2017,"line_end":2017,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9575},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626408,"byte_end":626436,"line_start":2020,"line_end":2020,"column_start":5,"column_end":33},"name":"_POSIX_THREAD_SAFE_FUNCTIONS","qualname":"::unistd::SysconfVar::_POSIX_THREAD_SAFE_FUNCTIONS","value":"SysconfVar::_POSIX_THREAD_SAFE_FUNCTIONS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports thread-safe functions.\n","sig":null,"attributes":[{"value":"/ The implementation supports thread-safe functions.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626349,"byte_end":626403,"line_start":2019,"line_end":2019,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9578},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626701,"byte_end":626730,"line_start":2024,"line_end":2024,"column_start":5,"column_end":34},"name":"_POSIX_THREAD_SPORADIC_SERVER","qualname":"::unistd::SysconfVar::_POSIX_THREAD_SPORADIC_SERVER","value":"SysconfVar::_POSIX_THREAD_SPORADIC_SERVER","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Thread Sporadic Server option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626476,"byte_end":626625,"line_start":2021,"line_end":2022,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the Thread Sporadic Server option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626630,"byte_end":626696,"line_start":2023,"line_end":2023,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9581},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626816,"byte_end":626830,"line_start":2026,"line_end":2026,"column_start":5,"column_end":19},"name":"_POSIX_THREADS","qualname":"::unistd::SysconfVar::_POSIX_THREADS","value":"SysconfVar::_POSIX_THREADS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports threads.\n","sig":null,"attributes":[{"value":"/ The implementation supports threads.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626771,"byte_end":626811,"line_start":2025,"line_end":2025,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9584},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627056,"byte_end":627071,"line_start":2030,"line_end":2030,"column_start":5,"column_end":20},"name":"_POSIX_TIMEOUTS","qualname":"::unistd::SysconfVar::_POSIX_TIMEOUTS","value":"SysconfVar::_POSIX_TIMEOUTS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports timeouts.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":626856,"byte_end":627005,"line_start":2027,"line_end":2028,"column_start":5,"column_end":77}},{"value":"/ The implementation supports timeouts.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627010,"byte_end":627051,"line_start":2029,"line_end":2029,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9587},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627142,"byte_end":627155,"line_start":2032,"line_end":2032,"column_start":5,"column_end":18},"name":"_POSIX_TIMERS","qualname":"::unistd::SysconfVar::_POSIX_TIMERS","value":"SysconfVar::_POSIX_TIMERS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports timers.\n","sig":null,"attributes":[{"value":"/ The implementation supports timers.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627098,"byte_end":627137,"line_start":2031,"line_end":2031,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9590},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627388,"byte_end":627400,"line_start":2036,"line_end":2036,"column_start":5,"column_end":17},"name":"_POSIX_TRACE","qualname":"::unistd::SysconfVar::_POSIX_TRACE","value":"SysconfVar::_POSIX_TRACE","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Trace option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627180,"byte_end":627329,"line_start":2033,"line_end":2034,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the Trace option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627334,"byte_end":627383,"line_start":2035,"line_end":2035,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9593},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627645,"byte_end":627670,"line_start":2040,"line_end":2040,"column_start":5,"column_end":30},"name":"_POSIX_TRACE_EVENT_FILTER","qualname":"::unistd::SysconfVar::_POSIX_TRACE_EVENT_FILTER","value":"SysconfVar::_POSIX_TRACE_EVENT_FILTER","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Trace Event Filter option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627424,"byte_end":627573,"line_start":2037,"line_end":2038,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the Trace Event Filter option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627578,"byte_end":627640,"line_start":2039,"line_end":2039,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9596},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627817,"byte_end":627844,"line_start":2043,"line_end":2043,"column_start":5,"column_end":32},"name":"_POSIX_TRACE_EVENT_NAME_MAX","qualname":"::unistd::SysconfVar::_POSIX_TRACE_EVENT_NAME_MAX","value":"SysconfVar::_POSIX_TRACE_EVENT_NAME_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627707,"byte_end":627812,"line_start":2041,"line_end":2042,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9599},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628099,"byte_end":628119,"line_start":2047,"line_end":2047,"column_start":5,"column_end":25},"name":"_POSIX_TRACE_INHERIT","qualname":"::unistd::SysconfVar::_POSIX_TRACE_INHERIT","value":"SysconfVar::_POSIX_TRACE_INHERIT","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Trace Inherit option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":627883,"byte_end":628032,"line_start":2044,"line_end":2045,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the Trace Inherit option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628037,"byte_end":628094,"line_start":2046,"line_end":2046,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9602},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628363,"byte_end":628379,"line_start":2051,"line_end":2051,"column_start":5,"column_end":21},"name":"_POSIX_TRACE_LOG","qualname":"::unistd::SysconfVar::_POSIX_TRACE_LOG","value":"SysconfVar::_POSIX_TRACE_LOG","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Trace Log option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628151,"byte_end":628300,"line_start":2048,"line_end":2049,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the Trace Log option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628305,"byte_end":628358,"line_start":2050,"line_end":2050,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9605},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628517,"byte_end":628538,"line_start":2054,"line_end":2054,"column_start":5,"column_end":26},"name":"_POSIX_TRACE_NAME_MAX","qualname":"::unistd::SysconfVar::_POSIX_TRACE_NAME_MAX","value":"SysconfVar::_POSIX_TRACE_NAME_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628407,"byte_end":628512,"line_start":2052,"line_end":2053,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9608},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628681,"byte_end":628701,"line_start":2057,"line_end":2057,"column_start":5,"column_end":25},"name":"_POSIX_TRACE_SYS_MAX","qualname":"::unistd::SysconfVar::_POSIX_TRACE_SYS_MAX","value":"SysconfVar::_POSIX_TRACE_SYS_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628571,"byte_end":628676,"line_start":2055,"line_end":2056,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9611},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628843,"byte_end":628870,"line_start":2060,"line_end":2060,"column_start":5,"column_end":32},"name":"_POSIX_TRACE_USER_EVENT_MAX","qualname":"::unistd::SysconfVar::_POSIX_TRACE_USER_EVENT_MAX","value":"SysconfVar::_POSIX_TRACE_USER_EVENT_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628733,"byte_end":628838,"line_start":2058,"line_end":2059,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9614},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629132,"byte_end":629159,"line_start":2064,"line_end":2064,"column_start":5,"column_end":32},"name":"_POSIX_TYPED_MEMORY_OBJECTS","qualname":"::unistd::SysconfVar::_POSIX_TYPED_MEMORY_OBJECTS","value":"SysconfVar::_POSIX_TYPED_MEMORY_OBJECTS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Typed Memory Objects option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":628909,"byte_end":629058,"line_start":2061,"line_end":2062,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the Typed Memory Objects option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629063,"byte_end":629127,"line_start":2063,"line_end":2063,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9617},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629407,"byte_end":629421,"line_start":2068,"line_end":2068,"column_start":5,"column_end":19},"name":"_POSIX_VERSION","qualname":"::unistd::SysconfVar::_POSIX_VERSION","value":"SysconfVar::_POSIX_VERSION","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Integer value indicating version of this standard (C-language binding)\n to which the implementation conforms. For implementations conforming to\n POSIX.1-2008, the value shall be 200809L.\n","sig":null,"attributes":[{"value":"/ Integer value indicating version of this standard (C-language binding)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629198,"byte_end":629272,"line_start":2065,"line_end":2065,"column_start":5,"column_end":79}},{"value":"/ to which the implementation conforms. For implementations conforming to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629277,"byte_end":629352,"line_start":2066,"line_end":2066,"column_start":5,"column_end":80}},{"value":"/ POSIX.1-2008, the value shall be 200809L.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629357,"byte_end":629402,"line_start":2067,"line_end":2067,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9620},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629773,"byte_end":629794,"line_start":2074,"line_end":2074,"column_start":5,"column_end":26},"name":"_POSIX_V6_ILP32_OFF32","qualname":"::unistd::SysconfVar::_POSIX_V6_ILP32_OFF32","value":"SysconfVar::_POSIX_V6_ILP32_OFF32","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation provides a C-language compilation environment with\n 32-bit `int`, `long`, `pointer`, and `off_t` types.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629447,"byte_end":629630,"line_start":2069,"line_end":2071,"column_start":5,"column_end":37}},{"value":"/ The implementation provides a C-language compilation environment with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629635,"byte_end":629708,"line_start":2072,"line_end":2072,"column_start":5,"column_end":78}},{"value":"/ 32-bit `int`, `long`, `pointer`, and `off_t` types.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629713,"byte_end":629768,"line_start":2073,"line_end":2073,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9623},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630193,"byte_end":630215,"line_start":2081,"line_end":2081,"column_start":5,"column_end":27},"name":"_POSIX_V6_ILP32_OFFBIG","qualname":"::unistd::SysconfVar::_POSIX_V6_ILP32_OFFBIG","value":"SysconfVar::_POSIX_V6_ILP32_OFFBIG","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation provides a C-language compilation environment with\n 32-bit `int`, `long`, and pointer types and an `off_t` type using at\n least 64 bits.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":629827,"byte_end":630010,"line_start":2075,"line_end":2077,"column_start":5,"column_end":37}},{"value":"/ The implementation provides a C-language compilation environment with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630015,"byte_end":630088,"line_start":2078,"line_end":2078,"column_start":5,"column_end":78}},{"value":"/ 32-bit `int`, `long`, and pointer types and an `off_t` type using at","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630093,"byte_end":630165,"line_start":2079,"line_end":2079,"column_start":5,"column_end":77}},{"value":"/ least 64 bits.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630170,"byte_end":630188,"line_start":2080,"line_end":2080,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9626},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630585,"byte_end":630605,"line_start":2087,"line_end":2087,"column_start":5,"column_end":25},"name":"_POSIX_V6_LP64_OFF64","qualname":"::unistd::SysconfVar::_POSIX_V6_LP64_OFF64","value":"SysconfVar::_POSIX_V6_LP64_OFF64","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation provides a C-language compilation environment with\n 32-bit `int` and 64-bit `long`, `pointer`, and `off_t` types.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630249,"byte_end":630432,"line_start":2082,"line_end":2084,"column_start":5,"column_end":37}},{"value":"/ The implementation provides a C-language compilation environment with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630437,"byte_end":630510,"line_start":2085,"line_end":2085,"column_start":5,"column_end":78}},{"value":"/ 32-bit `int` and 64-bit `long`, `pointer`, and `off_t` types.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630515,"byte_end":630580,"line_start":2086,"line_end":2086,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9629},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631019,"byte_end":631041,"line_start":2094,"line_end":2094,"column_start":5,"column_end":27},"name":"_POSIX_V6_LPBIG_OFFBIG","qualname":"::unistd::SysconfVar::_POSIX_V6_LPBIG_OFFBIG","value":"SysconfVar::_POSIX_V6_LPBIG_OFFBIG","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation provides a C-language compilation environment with an\n `int` type using at least 32 bits and `long`, pointer, and `off_t` types\n using at least 64 bits.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630637,"byte_end":630820,"line_start":2088,"line_end":2090,"column_start":5,"column_end":37}},{"value":"/ The implementation provides a C-language compilation environment with an","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630825,"byte_end":630901,"line_start":2091,"line_end":2091,"column_start":5,"column_end":81}},{"value":"/ `int` type using at least 32 bits and `long`, pointer, and `off_t` types","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630906,"byte_end":630982,"line_start":2092,"line_end":2092,"column_start":5,"column_end":81}},{"value":"/ using at least 64 bits.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":630987,"byte_end":631014,"line_start":2093,"line_end":2093,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9632},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631142,"byte_end":631156,"line_start":2096,"line_end":2096,"column_start":5,"column_end":19},"name":"_POSIX2_C_BIND","qualname":"::unistd::SysconfVar::_POSIX2_C_BIND","value":"SysconfVar::_POSIX2_C_BIND","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the C-Language Binding option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the C-Language Binding option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631075,"byte_end":631137,"line_start":2095,"line_end":2095,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9635},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631264,"byte_end":631277,"line_start":2098,"line_end":2098,"column_start":5,"column_end":18},"name":"_POSIX2_C_DEV","qualname":"::unistd::SysconfVar::_POSIX2_C_DEV","value":"SysconfVar::_POSIX2_C_DEV","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the C-Language Development Utilities option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the C-Language Development Utilities option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631183,"byte_end":631259,"line_start":2097,"line_end":2097,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9638},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631376,"byte_end":631393,"line_start":2100,"line_end":2100,"column_start":5,"column_end":22},"name":"_POSIX2_CHAR_TERM","qualname":"::unistd::SysconfVar::_POSIX2_CHAR_TERM","value":"SysconfVar::_POSIX2_CHAR_TERM","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Terminal Characteristics option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Terminal Characteristics option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631303,"byte_end":631371,"line_start":2099,"line_end":2099,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9641},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631501,"byte_end":631517,"line_start":2102,"line_end":2102,"column_start":5,"column_end":21},"name":"_POSIX2_FORT_DEV","qualname":"::unistd::SysconfVar::_POSIX2_FORT_DEV","value":"SysconfVar::_POSIX2_FORT_DEV","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the FORTRAN Development Utilities option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the FORTRAN Development Utilities option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631423,"byte_end":631496,"line_start":2101,"line_end":2101,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9644},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631620,"byte_end":631636,"line_start":2104,"line_end":2104,"column_start":5,"column_end":21},"name":"_POSIX2_FORT_RUN","qualname":"::unistd::SysconfVar::_POSIX2_FORT_RUN","value":"SysconfVar::_POSIX2_FORT_RUN","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the FORTRAN Runtime Utilities option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the FORTRAN Runtime Utilities option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631546,"byte_end":631615,"line_start":2103,"line_end":2103,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9647},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631759,"byte_end":631776,"line_start":2107,"line_end":2107,"column_start":5,"column_end":22},"name":"_POSIX2_LOCALEDEF","qualname":"::unistd::SysconfVar::_POSIX2_LOCALEDEF","value":"SysconfVar::_POSIX2_LOCALEDEF","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the creation of locales by the localedef\n utility.\n","sig":null,"attributes":[{"value":"/ The implementation supports the creation of locales by the localedef","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631665,"byte_end":631737,"line_start":2105,"line_end":2105,"column_start":5,"column_end":77}},{"value":"/ utility.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631742,"byte_end":631754,"line_start":2106,"line_end":2106,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9650},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":632091,"byte_end":632102,"line_start":2113,"line_end":2113,"column_start":5,"column_end":16},"name":"_POSIX2_PBS","qualname":"::unistd::SysconfVar::_POSIX2_PBS","value":"SysconfVar::_POSIX2_PBS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Batch Environment Services and Utilities\n option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631806,"byte_end":631989,"line_start":2108,"line_end":2110,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Batch Environment Services and Utilities","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":631994,"byte_end":632070,"line_start":2111,"line_end":2111,"column_start":5,"column_end":81}},{"value":"/ option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":632075,"byte_end":632086,"line_start":2112,"line_end":2112,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9653},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":632379,"byte_end":632401,"line_start":2118,"line_end":2118,"column_start":5,"column_end":27},"name":"_POSIX2_PBS_ACCOUNTING","qualname":"::unistd::SysconfVar::_POSIX2_PBS_ACCOUNTING","value":"SysconfVar::_POSIX2_PBS_ACCOUNTING","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Batch Accounting option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":632126,"byte_end":632309,"line_start":2114,"line_end":2116,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Batch Accounting option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":632314,"byte_end":632374,"line_start":2117,"line_end":2117,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9656},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":632697,"byte_end":632719,"line_start":2123,"line_end":2123,"column_start":5,"column_end":27},"name":"_POSIX2_PBS_CHECKPOINT","qualname":"::unistd::SysconfVar::_POSIX2_PBS_CHECKPOINT","value":"SysconfVar::_POSIX2_PBS_CHECKPOINT","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Batch Checkpoint/Restart option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":632436,"byte_end":632619,"line_start":2119,"line_end":2121,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Batch Checkpoint/Restart option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":632624,"byte_end":632692,"line_start":2122,"line_end":2122,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9659},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633015,"byte_end":633033,"line_start":2128,"line_end":2128,"column_start":5,"column_end":23},"name":"_POSIX2_PBS_LOCATE","qualname":"::unistd::SysconfVar::_POSIX2_PBS_LOCATE","value":"SysconfVar::_POSIX2_PBS_LOCATE","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Locate Batch Job Request option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":632754,"byte_end":632937,"line_start":2124,"line_end":2126,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Locate Batch Job Request option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":632942,"byte_end":633010,"line_start":2127,"line_end":2127,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9662},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633326,"byte_end":633345,"line_start":2133,"line_end":2133,"column_start":5,"column_end":24},"name":"_POSIX2_PBS_MESSAGE","qualname":"::unistd::SysconfVar::_POSIX2_PBS_MESSAGE","value":"SysconfVar::_POSIX2_PBS_MESSAGE","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Batch Job Message Request option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633064,"byte_end":633247,"line_start":2129,"line_end":2131,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Batch Job Message Request option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633252,"byte_end":633321,"line_start":2132,"line_end":2132,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9665},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633637,"byte_end":633654,"line_start":2138,"line_end":2138,"column_start":5,"column_end":22},"name":"_POSIX2_PBS_TRACK","qualname":"::unistd::SysconfVar::_POSIX2_PBS_TRACK","value":"SysconfVar::_POSIX2_PBS_TRACK","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Track Batch Job Request option.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633377,"byte_end":633560,"line_start":2134,"line_end":2136,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Track Batch Job Request option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633565,"byte_end":633632,"line_start":2137,"line_end":2137,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9668},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633763,"byte_end":633777,"line_start":2140,"line_end":2140,"column_start":5,"column_end":19},"name":"_POSIX2_SW_DEV","qualname":"::unistd::SysconfVar::_POSIX2_SW_DEV","value":"SysconfVar::_POSIX2_SW_DEV","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Software Development Utilities option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Software Development Utilities option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633684,"byte_end":633758,"line_start":2139,"line_end":2139,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9671},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633879,"byte_end":633890,"line_start":2142,"line_end":2142,"column_start":5,"column_end":16},"name":"_POSIX2_UPE","qualname":"::unistd::SysconfVar::_POSIX2_UPE","value":"SysconfVar::_POSIX2_UPE","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the User Portability Utilities option.\n","sig":null,"attributes":[{"value":"/ The implementation supports the User Portability Utilities option.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633804,"byte_end":633874,"line_start":2141,"line_end":2141,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9674},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634046,"byte_end":634061,"line_start":2145,"line_end":2145,"column_start":5,"column_end":20},"name":"_POSIX2_VERSION","qualname":"::unistd::SysconfVar::_POSIX2_VERSION","value":"SysconfVar::_POSIX2_VERSION","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Integer value indicating version of the Shell and Utilities volume of\n POSIX.1 to which the implementation conforms.\n","sig":null,"attributes":[{"value":"/ Integer value indicating version of the Shell and Utilities volume of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633914,"byte_end":633987,"line_start":2143,"line_end":2143,"column_start":5,"column_end":78}},{"value":"/ POSIX.1 to which the implementation conforms.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":633992,"byte_end":634041,"line_start":2144,"line_end":2144,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9677},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634295,"byte_end":634304,"line_start":2150,"line_end":2150,"column_start":5,"column_end":14},"name":"PAGE_SIZE","qualname":"::unistd::SysconfVar::PAGE_SIZE","value":"SysconfVar::PAGE_SIZE","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The size of a system page in bytes.","sig":null,"attributes":[{"value":"/ The size of a system page in bytes.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634089,"byte_end":634128,"line_start":2146,"line_end":2146,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634133,"byte_end":634136,"line_start":2147,"line_end":2147,"column_start":5,"column_end":8}},{"value":"/ POSIX also defines an alias named `PAGESIZE`, but Rust does not allow two","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634141,"byte_end":634218,"line_start":2148,"line_end":2148,"column_start":5,"column_end":82}},{"value":"/ enum constants to have the same value, so nix omits `PAGESIZE`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634223,"byte_end":634290,"line_start":2149,"line_end":2149,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9680},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634332,"byte_end":634361,"line_start":2151,"line_end":2151,"column_start":5,"column_end":34},"name":"PTHREAD_DESTRUCTOR_ITERATIONS","qualname":"::unistd::SysconfVar::PTHREAD_DESTRUCTOR_ITERATIONS","value":"SysconfVar::PTHREAD_DESTRUCTOR_ITERATIONS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9683},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634408,"byte_end":634424,"line_start":2152,"line_end":2152,"column_start":5,"column_end":21},"name":"PTHREAD_KEYS_MAX","qualname":"::unistd::SysconfVar::PTHREAD_KEYS_MAX","value":"SysconfVar::PTHREAD_KEYS_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9686},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634458,"byte_end":634475,"line_start":2153,"line_end":2153,"column_start":5,"column_end":22},"name":"PTHREAD_STACK_MIN","qualname":"::unistd::SysconfVar::PTHREAD_STACK_MIN","value":"SysconfVar::PTHREAD_STACK_MIN","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9689},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634510,"byte_end":634529,"line_start":2154,"line_end":2154,"column_start":5,"column_end":24},"name":"PTHREAD_THREADS_MAX","qualname":"::unistd::SysconfVar::PTHREAD_THREADS_MAX","value":"SysconfVar::PTHREAD_THREADS_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9692},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634566,"byte_end":634576,"line_start":2155,"line_end":2155,"column_start":5,"column_end":15},"name":"RE_DUP_MAX","qualname":"::unistd::SysconfVar::RE_DUP_MAX","value":"SysconfVar::RE_DUP_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9695},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634794,"byte_end":634803,"line_start":2159,"line_end":2159,"column_start":5,"column_end":14},"name":"RTSIG_MAX","qualname":"::unistd::SysconfVar::RTSIG_MAX","value":"SysconfVar::RTSIG_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634605,"byte_end":634789,"line_start":2156,"line_end":2158,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9698},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634831,"byte_end":634844,"line_start":2160,"line_end":2160,"column_start":5,"column_end":18},"name":"SEM_NSEMS_MAX","qualname":"::unistd::SysconfVar::SEM_NSEMS_MAX","value":"SysconfVar::SEM_NSEMS_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9701},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635065,"byte_end":635078,"line_start":2164,"line_end":2164,"column_start":5,"column_end":18},"name":"SEM_VALUE_MAX","qualname":"::unistd::SysconfVar::SEM_VALUE_MAX","value":"SysconfVar::SEM_VALUE_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":634876,"byte_end":635060,"line_start":2161,"line_end":2163,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9704},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635303,"byte_end":635315,"line_start":2168,"line_end":2168,"column_start":5,"column_end":17},"name":"SIGQUEUE_MAX","qualname":"::unistd::SysconfVar::SIGQUEUE_MAX","value":"SysconfVar::SIGQUEUE_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635110,"byte_end":635298,"line_start":2165,"line_end":2167,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9707},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635346,"byte_end":635356,"line_start":2169,"line_end":2169,"column_start":5,"column_end":15},"name":"STREAM_MAX","qualname":"::unistd::SysconfVar::STREAM_MAX","value":"SysconfVar::STREAM_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9710},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635573,"byte_end":635584,"line_start":2173,"line_end":2173,"column_start":5,"column_end":16},"name":"SYMLOOP_MAX","qualname":"::unistd::SysconfVar::SYMLOOP_MAX","value":"SysconfVar::SYMLOOP_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"netbsd\",\n          target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635385,"byte_end":635568,"line_start":2170,"line_end":2172,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9713},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635614,"byte_end":635623,"line_start":2174,"line_end":2174,"column_start":5,"column_end":14},"name":"TIMER_MAX","qualname":"::unistd::SysconfVar::TIMER_MAX","value":"SysconfVar::TIMER_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9716},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635651,"byte_end":635663,"line_start":2175,"line_end":2175,"column_start":5,"column_end":17},"name":"TTY_NAME_MAX","qualname":"::unistd::SysconfVar::TTY_NAME_MAX","value":"SysconfVar::TTY_NAME_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9719},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635694,"byte_end":635704,"line_start":2176,"line_end":2176,"column_start":5,"column_end":15},"name":"TZNAME_MAX","qualname":"::unistd::SysconfVar::TZNAME_MAX","value":"SysconfVar::TZNAME_MAX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9722},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635994,"byte_end":636006,"line_start":2181,"line_end":2181,"column_start":5,"column_end":17},"name":"_XOPEN_CRYPT","qualname":"::unistd::SysconfVar::_XOPEN_CRYPT","value":"SysconfVar::_XOPEN_CRYPT","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the X/Open Encryption Option Group.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635733,"byte_end":635917,"line_start":2177,"line_end":2179,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the X/Open Encryption Option Group.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":635922,"byte_end":635989,"line_start":2180,"line_end":2180,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9725},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":636336,"byte_end":636351,"line_start":2187,"line_end":2187,"column_start":5,"column_end":20},"name":"_XOPEN_ENH_I18N","qualname":"::unistd::SysconfVar::_XOPEN_ENH_I18N","value":"SysconfVar::_XOPEN_ENH_I18N","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Issue 4, Version 2 Enhanced\n Internationalization Option Group.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":636036,"byte_end":636220,"line_start":2182,"line_end":2184,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the Issue 4, Version 2 Enhanced","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":636225,"byte_end":636288,"line_start":2185,"line_end":2185,"column_start":5,"column_end":68}},{"value":"/ Internationalization Option Group.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":636293,"byte_end":636331,"line_start":2186,"line_end":2186,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9728},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":636573,"byte_end":636586,"line_start":2191,"line_end":2191,"column_start":5,"column_end":18},"name":"_XOPEN_LEGACY","qualname":"::unistd::SysconfVar::_XOPEN_LEGACY","value":"SysconfVar::_XOPEN_LEGACY","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":636384,"byte_end":636568,"line_start":2188,"line_end":2190,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9731},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":636876,"byte_end":636891,"line_start":2196,"line_end":2196,"column_start":5,"column_end":20},"name":"_XOPEN_REALTIME","qualname":"::unistd::SysconfVar::_XOPEN_REALTIME","value":"SysconfVar::_XOPEN_REALTIME","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the X/Open Realtime Option Group.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":636617,"byte_end":636801,"line_start":2192,"line_end":2194,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the X/Open Realtime Option Group.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":636806,"byte_end":636871,"line_start":2195,"line_end":2195,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9734},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637191,"byte_end":637214,"line_start":2201,"line_end":2201,"column_start":5,"column_end":28},"name":"_XOPEN_REALTIME_THREADS","qualname":"::unistd::SysconfVar::_XOPEN_REALTIME_THREADS","value":"SysconfVar::_XOPEN_REALTIME_THREADS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the X/Open Realtime Threads Option Group.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":636924,"byte_end":637108,"line_start":2197,"line_end":2199,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the X/Open Realtime Threads Option Group.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637113,"byte_end":637186,"line_start":2200,"line_end":2200,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9737},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637350,"byte_end":637360,"line_start":2204,"line_end":2204,"column_start":5,"column_end":15},"name":"_XOPEN_SHM","qualname":"::unistd::SysconfVar::_XOPEN_SHM","value":"SysconfVar::_XOPEN_SHM","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the Issue 4, Version 2 Shared Memory Option\n Group.\n","sig":null,"attributes":[{"value":"/ The implementation supports the Issue 4, Version 2 Shared Memory Option","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637255,"byte_end":637330,"line_start":2202,"line_end":2202,"column_start":5,"column_end":80}},{"value":"/ Group.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637335,"byte_end":637345,"line_start":2203,"line_end":2203,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9740},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637608,"byte_end":637622,"line_start":2208,"line_end":2208,"column_start":5,"column_end":19},"name":"_XOPEN_STREAMS","qualname":"::unistd::SysconfVar::_XOPEN_STREAMS","value":"SysconfVar::_XOPEN_STREAMS","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the XSI STREAMS Option Group.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"ios\",\n          target_os = \"linux\", target_os = \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637388,"byte_end":637537,"line_start":2205,"line_end":2206,"column_start":5,"column_end":77}},{"value":"/ The implementation supports the XSI STREAMS Option Group.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637542,"byte_end":637603,"line_start":2207,"line_end":2207,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9743},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637894,"byte_end":637905,"line_start":2213,"line_end":2213,"column_start":5,"column_end":16},"name":"_XOPEN_UNIX","qualname":"::unistd::SysconfVar::_XOPEN_UNIX","value":"SysconfVar::_XOPEN_UNIX","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" The implementation supports the XSI option\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637654,"byte_end":637838,"line_start":2209,"line_end":2211,"column_start":5,"column_end":37}},{"value":"/ The implementation supports the XSI option","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637843,"byte_end":637889,"line_start":2212,"line_end":2212,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9746},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638242,"byte_end":638256,"line_start":2219,"line_end":2219,"column_start":5,"column_end":19},"name":"_XOPEN_VERSION","qualname":"::unistd::SysconfVar::_XOPEN_VERSION","value":"SysconfVar::_XOPEN_VERSION","parent":{"krate":0,"index":9391},"children":[],"decl_id":null,"docs":" Integer value indicating version of the X/Open Portability Guide to\n which the implementation conforms.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n          \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n          \"macos\", target_os = \"openbsd\"))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":637934,"byte_end":638118,"line_start":2214,"line_end":2216,"column_start":5,"column_end":37}},{"value":"/ Integer value indicating version of the X/Open Portability Guide to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638123,"byte_end":638194,"line_start":2217,"line_end":2217,"column_start":5,"column_end":76}},{"value":"/ which the implementation conforms.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638199,"byte_end":638237,"line_start":2218,"line_end":2218,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":9391},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615151,"byte_end":615161,"line_start":1830,"line_end":1830,"column_start":10,"column_end":20},"name":"SysconfVar","qualname":"::unistd::SysconfVar","value":"pub enum SysconfVar {\n\n    /// Maximum number of I/O operations in a single list I/O call supported by\n    /// the implementation.\n    AIO_LISTIO_MAX = ,\n\n    /// Maximum number of outstanding asynchronous I/O operations supported by\n    /// the implementation.\n    AIO_MAX = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    /// The maximum amount by which a process can decrease its asynchronous I/O\n    /// priority level from its own scheduling priority.\n    AIO_PRIO_DELTA_MAX = ,\n\n    /// Maximum length of argument to the exec functions including environment data.\n    ARG_MAX = ,\n\n    /// Maximum number of functions that may be registered with `atexit`.\n    ATEXIT_MAX = ,\n\n    /// Maximum obase values allowed by the bc utility.\n    BC_BASE_MAX = ,\n\n    /// Maximum number of elements permitted in an array by the bc utility.\n    BC_DIM_MAX = ,\n\n    /// Maximum scale value allowed by the bc utility.\n    BC_SCALE_MAX = ,\n\n    /// Maximum length of a string constant accepted by the bc utility.\n    BC_STRING_MAX = ,\n\n    /// Maximum number of simultaneous processes per real user ID.\n    CHILD_MAX = ,\n\n    /// Maximum number of weights that can be assigned to an entry of the\n    /// LC_COLLATE order keyword in the locale definition file\n    COLL_WEIGHTS_MAX = ,\n\n    /// Maximum number of timer expiration overruns.\n    DELAYTIMER_MAX = ,\n\n    /// Maximum number of expressions that can be nested within parentheses by\n    /// the expr utility.\n    EXPR_NEST_MAX = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// Maximum length of a host name (not including the terminating null) as\n    /// returned from the `gethostname` function\n    HOST_NAME_MAX = ,\n\n    /// Maximum number of iovec structures that one process has available for\n    /// use with `readv` or `writev`.\n    IOV_MAX = ,\n\n    /// Unless otherwise noted, the maximum length, in bytes, of a utility's\n    /// input line (either standard input or another file), when the utility is\n    /// described as processing text files. The length includes room for the\n    /// trailing <newline>.\n    LINE_MAX = ,\n\n    /// Maximum length of a login name.\n    LOGIN_NAME_MAX = ,\n\n    /// Maximum number of simultaneous supplementary group IDs per process.\n    NGROUPS_MAX = ,\n\n    /// Initial size of `getgrgid_r` and `getgrnam_r` data buffers\n    GETGR_R_SIZE_MAX = ,\n\n    /// Initial size of `getpwuid_r` and `getpwnam_r` data buffers\n    GETPW_R_SIZE_MAX = ,\n\n    /// The maximum number of open message queue descriptors a process may hold.\n    MQ_OPEN_MAX = ,\n\n    /// The maximum number of message priorities supported by the implementation.\n    MQ_PRIO_MAX = ,\n\n    /// A value one greater than the maximum value that the system may assign to\n    /// a newly-created file descriptor.\n    OPEN_MAX = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Advisory Information option.\n    _POSIX_ADVISORY_INFO = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports barriers.\n    _POSIX_BARRIERS = ,\n\n    /// The implementation supports asynchronous input and output.\n    _POSIX_ASYNCHRONOUS_IO = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports clock selection.\n    _POSIX_CLOCK_SELECTION = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Process CPU-Time Clocks option.\n    _POSIX_CPUTIME = ,\n\n    /// The implementation supports the File Synchronization option.\n    _POSIX_FSYNC = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the IPv6 option.\n    _POSIX_IPV6 = ,\n\n    /// The implementation supports job control.\n    _POSIX_JOB_CONTROL = ,\n\n    /// The implementation supports memory mapped Files.\n    _POSIX_MAPPED_FILES = ,\n\n    /// The implementation supports the Process Memory Locking option.\n    _POSIX_MEMLOCK = ,\n\n    /// The implementation supports the Range Memory Locking option.\n    _POSIX_MEMLOCK_RANGE = ,\n\n    /// The implementation supports memory protection.\n    _POSIX_MEMORY_PROTECTION = ,\n\n    /// The implementation supports the Message Passing option.\n    _POSIX_MESSAGE_PASSING = ,\n\n    /// The implementation supports the Monotonic Clock option.\n    _POSIX_MONOTONIC_CLOCK = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    /// The implementation supports the Prioritized Input and Output option.\n    _POSIX_PRIORITIZED_IO = ,\n\n    /// The implementation supports the Process Scheduling option.\n    _POSIX_PRIORITY_SCHEDULING = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Raw Sockets option.\n    _POSIX_RAW_SOCKETS = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports read-write locks.\n    _POSIX_READER_WRITER_LOCKS = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    /// The implementation supports realtime signals.\n    _POSIX_REALTIME_SIGNALS = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Regular Expression Handling option.\n    _POSIX_REGEXP = ,\n\n    /// Each process has a saved set-user-ID and a saved set-group-ID.\n    _POSIX_SAVED_IDS = ,\n\n    /// The implementation supports semaphores.\n    _POSIX_SEMAPHORES = ,\n\n    /// The implementation supports the Shared Memory Objects option.\n    _POSIX_SHARED_MEMORY_OBJECTS = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the POSIX shell.\n    _POSIX_SHELL = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Spawn option.\n    _POSIX_SPAWN = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports spin locks.\n    _POSIX_SPIN_LOCKS = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Process Sporadic Server option.\n    _POSIX_SPORADIC_SERVER = ,\n\n    #[cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n              target_os = \"openbsd\"))]\n    _POSIX_SS_REPL_MAX = ,\n\n    /// The implementation supports the Synchronized Input and Output option.\n    _POSIX_SYNCHRONIZED_IO = ,\n\n    /// The implementation supports the Thread Stack Address Attribute option.\n    _POSIX_THREAD_ATTR_STACKADDR = ,\n\n    /// The implementation supports the Thread Stack Size Attribute option.\n    _POSIX_THREAD_ATTR_STACKSIZE = ,\n\n    #[cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n              target_os = \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Thread CPU-Time Clocks option.\n    _POSIX_THREAD_CPUTIME = ,\n\n    /// The implementation supports the Non-Robust Mutex Priority Inheritance\n    /// option.\n    _POSIX_THREAD_PRIO_INHERIT = ,\n\n    /// The implementation supports the Non-Robust Mutex Priority Protection option.\n    _POSIX_THREAD_PRIO_PROTECT = ,\n\n    /// The implementation supports the Thread Execution Scheduling option.\n    _POSIX_THREAD_PRIORITY_SCHEDULING = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Thread Process-Shared Synchronization\n    /// option.\n    _POSIX_THREAD_PROCESS_SHARED = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"linux\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Robust Mutex Priority Inheritance option.\n    _POSIX_THREAD_ROBUST_PRIO_INHERIT = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"linux\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Robust Mutex Priority Protection option.\n    _POSIX_THREAD_ROBUST_PRIO_PROTECT = ,\n\n    /// The implementation supports thread-safe functions.\n    _POSIX_THREAD_SAFE_FUNCTIONS = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Thread Sporadic Server option.\n    _POSIX_THREAD_SPORADIC_SERVER = ,\n\n    /// The implementation supports threads.\n    _POSIX_THREADS = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports timeouts.\n    _POSIX_TIMEOUTS = ,\n\n    /// The implementation supports timers.\n    _POSIX_TIMERS = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Trace option.\n    _POSIX_TRACE = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Trace Event Filter option.\n    _POSIX_TRACE_EVENT_FILTER = ,\n\n    #[cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n              target_os = \"openbsd\"))]\n    _POSIX_TRACE_EVENT_NAME_MAX = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Trace Inherit option.\n    _POSIX_TRACE_INHERIT = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Trace Log option.\n    _POSIX_TRACE_LOG = ,\n\n    #[cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n              target_os = \"openbsd\"))]\n    _POSIX_TRACE_NAME_MAX = ,\n\n    #[cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n              target_os = \"openbsd\"))]\n    _POSIX_TRACE_SYS_MAX = ,\n\n    #[cfg(any(target_os = \"ios\", target_os = \"linux\", target_os = \"macos\",\n              target_os = \"openbsd\"))]\n    _POSIX_TRACE_USER_EVENT_MAX = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the Typed Memory Objects option.\n    _POSIX_TYPED_MEMORY_OBJECTS = ,\n\n    /// Integer value indicating version of this standard (C-language binding)\n    /// to which the implementation conforms. For implementations conforming to\n    /// POSIX.1-2008, the value shall be 200809L.\n    _POSIX_VERSION = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation provides a C-language compilation environment with\n    /// 32-bit `int`, `long`, `pointer`, and `off_t` types.\n    _POSIX_V6_ILP32_OFF32 = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation provides a C-language compilation environment with\n    /// 32-bit `int`, `long`, and pointer types and an `off_t` type using at\n    /// least 64 bits.\n    _POSIX_V6_ILP32_OFFBIG = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation provides a C-language compilation environment with\n    /// 32-bit `int` and 64-bit `long`, `pointer`, and `off_t` types.\n    _POSIX_V6_LP64_OFF64 = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation provides a C-language compilation environment with an\n    /// `int` type using at least 32 bits and `long`, pointer, and `off_t` types\n    /// using at least 64 bits.\n    _POSIX_V6_LPBIG_OFFBIG = ,\n\n    /// The implementation supports the C-Language Binding option.\n    _POSIX2_C_BIND = ,\n\n    /// The implementation supports the C-Language Development Utilities option.\n    _POSIX2_C_DEV = ,\n\n    /// The implementation supports the Terminal Characteristics option.\n    _POSIX2_CHAR_TERM = ,\n\n    /// The implementation supports the FORTRAN Development Utilities option.\n    _POSIX2_FORT_DEV = ,\n\n    /// The implementation supports the FORTRAN Runtime Utilities option.\n    _POSIX2_FORT_RUN = ,\n\n    /// The implementation supports the creation of locales by the localedef\n    /// utility.\n    _POSIX2_LOCALEDEF = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Batch Environment Services and Utilities\n    /// option.\n    _POSIX2_PBS = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Batch Accounting option.\n    _POSIX2_PBS_ACCOUNTING = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Batch Checkpoint/Restart option.\n    _POSIX2_PBS_CHECKPOINT = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Locate Batch Job Request option.\n    _POSIX2_PBS_LOCATE = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Batch Job Message Request option.\n    _POSIX2_PBS_MESSAGE = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    /// The implementation supports the Track Batch Job Request option.\n    _POSIX2_PBS_TRACK = ,\n\n    /// The implementation supports the Software Development Utilities option.\n    _POSIX2_SW_DEV = ,\n\n    /// The implementation supports the User Portability Utilities option.\n    _POSIX2_UPE = ,\n\n    /// Integer value indicating version of the Shell and Utilities volume of\n    /// POSIX.1 to which the implementation conforms.\n    _POSIX2_VERSION = ,\n\n    /// The size of a system page in bytes.\n    ///\n    /// POSIX also defines an alias named `PAGESIZE`, but Rust does not allow two\n    /// enum constants to have the same value, so nix omits `PAGESIZE`.\n    PAGE_SIZE = ,\n    PTHREAD_DESTRUCTOR_ITERATIONS = ,\n    PTHREAD_KEYS_MAX = ,\n    PTHREAD_STACK_MIN = ,\n    PTHREAD_THREADS_MAX = ,\n    RE_DUP_MAX = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    RTSIG_MAX = ,\n    SEM_NSEMS_MAX = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    SEM_VALUE_MAX = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    SIGQUEUE_MAX = ,\n    STREAM_MAX = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"netbsd\", target_os = \"openbsd\"))]\n    SYMLOOP_MAX = ,\n    TIMER_MAX = ,\n    TTY_NAME_MAX = ,\n    TZNAME_MAX = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    /// The implementation supports the X/Open Encryption Option Group.\n    _XOPEN_CRYPT = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    /// The implementation supports the Issue 4, Version 2 Enhanced\n    /// Internationalization Option Group.\n    _XOPEN_ENH_I18N = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    _XOPEN_LEGACY = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    /// The implementation supports the X/Open Realtime Option Group.\n    _XOPEN_REALTIME = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    /// The implementation supports the X/Open Realtime Threads Option Group.\n    _XOPEN_REALTIME_THREADS = ,\n\n    /// The implementation supports the Issue 4, Version 2 Shared Memory Option\n    /// Group.\n    _XOPEN_SHM = ,\n\n    #[cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os =\n              \"ios\", target_os = \"linux\", target_os = \"macos\", target_os =\n              \"openbsd\"))]\n    /// The implementation supports the XSI STREAMS Option Group.\n    _XOPEN_STREAMS = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    /// The implementation supports the XSI option\n    _XOPEN_UNIX = ,\n\n    #[cfg(any(target_os = \"android\", target_os = \"dragonfly\", target_os =\n              \"freebsd\", target_os = \"ios\", target_os = \"linux\", target_os =\n              \"macos\", target_os = \"openbsd\"))]\n    /// Integer value indicating version of the X/Open Portability Guide to\n    /// which the implementation conforms.\n    _XOPEN_VERSION = ,\n}","parent":null,"children":[{"krate":0,"index":9392},{"krate":0,"index":9395},{"krate":0,"index":9398},{"krate":0,"index":9401},{"krate":0,"index":9404},{"krate":0,"index":9407},{"krate":0,"index":9410},{"krate":0,"index":9413},{"krate":0,"index":9416},{"krate":0,"index":9419},{"krate":0,"index":9422},{"krate":0,"index":9425},{"krate":0,"index":9428},{"krate":0,"index":9431},{"krate":0,"index":9434},{"krate":0,"index":9437},{"krate":0,"index":9440},{"krate":0,"index":9443},{"krate":0,"index":9446},{"krate":0,"index":9449},{"krate":0,"index":9452},{"krate":0,"index":9455},{"krate":0,"index":9458},{"krate":0,"index":9461},{"krate":0,"index":9464},{"krate":0,"index":9467},{"krate":0,"index":9470},{"krate":0,"index":9473},{"krate":0,"index":9476},{"krate":0,"index":9479},{"krate":0,"index":9482},{"krate":0,"index":9485},{"krate":0,"index":9488},{"krate":0,"index":9491},{"krate":0,"index":9494},{"krate":0,"index":9497},{"krate":0,"index":9500},{"krate":0,"index":9503},{"krate":0,"index":9506},{"krate":0,"index":9509},{"krate":0,"index":9512},{"krate":0,"index":9515},{"krate":0,"index":9518},{"krate":0,"index":9521},{"krate":0,"index":9524},{"krate":0,"index":9527},{"krate":0,"index":9530},{"krate":0,"index":9533},{"krate":0,"index":9536},{"krate":0,"index":9539},{"krate":0,"index":9542},{"krate":0,"index":9545},{"krate":0,"index":9548},{"krate":0,"index":9551},{"krate":0,"index":9554},{"krate":0,"index":9557},{"krate":0,"index":9560},{"krate":0,"index":9563},{"krate":0,"index":9566},{"krate":0,"index":9569},{"krate":0,"index":9572},{"krate":0,"index":9575},{"krate":0,"index":9578},{"krate":0,"index":9581},{"krate":0,"index":9584},{"krate":0,"index":9587},{"krate":0,"index":9590},{"krate":0,"index":9593},{"krate":0,"index":9596},{"krate":0,"index":9599},{"krate":0,"index":9602},{"krate":0,"index":9605},{"krate":0,"index":9608},{"krate":0,"index":9611},{"krate":0,"index":9614},{"krate":0,"index":9617},{"krate":0,"index":9620},{"krate":0,"index":9623},{"krate":0,"index":9626},{"krate":0,"index":9629},{"krate":0,"index":9632},{"krate":0,"index":9635},{"krate":0,"index":9638},{"krate":0,"index":9641},{"krate":0,"index":9644},{"krate":0,"index":9647},{"krate":0,"index":9650},{"krate":0,"index":9653},{"krate":0,"index":9656},{"krate":0,"index":9659},{"krate":0,"index":9662},{"krate":0,"index":9665},{"krate":0,"index":9668},{"krate":0,"index":9671},{"krate":0,"index":9674},{"krate":0,"index":9677},{"krate":0,"index":9680},{"krate":0,"index":9683},{"krate":0,"index":9686},{"krate":0,"index":9689},{"krate":0,"index":9692},{"krate":0,"index":9695},{"krate":0,"index":9698},{"krate":0,"index":9701},{"krate":0,"index":9704},{"krate":0,"index":9707},{"krate":0,"index":9710},{"krate":0,"index":9713},{"krate":0,"index":9716},{"krate":0,"index":9719},{"krate":0,"index":9722},{"krate":0,"index":9725},{"krate":0,"index":9728},{"krate":0,"index":9731},{"krate":0,"index":9734},{"krate":0,"index":9737},{"krate":0,"index":9740},{"krate":0,"index":9743},{"krate":0,"index":9746}],"decl_id":null,"docs":" Variable names for `sysconf`","sig":null,"attributes":[{"value":"/ Variable names for `sysconf`","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614263,"byte_end":614295,"line_start":1812,"line_end":1812,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614296,"byte_end":614299,"line_start":1813,"line_end":1813,"column_start":1,"column_end":4}},{"value":"/ Nix uses the same naming convention for these variables as the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614300,"byte_end":614366,"line_start":1814,"line_end":1814,"column_start":1,"column_end":67}},{"value":"/ [getconf(1)](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/getconf.html) utility.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614367,"byte_end":614464,"line_start":1815,"line_end":1815,"column_start":1,"column_end":98}},{"value":"/ That is, `SysconfVar` variables have the same name as the abstract variables","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614465,"byte_end":614545,"line_start":1816,"line_end":1816,"column_start":1,"column_end":81}},{"value":"/ shown in the `sysconf(3)` man page.  Usually, it's the same as the C","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614546,"byte_end":614618,"line_start":1817,"line_end":1817,"column_start":1,"column_end":73}},{"value":"/ variable name without the leading `_SC_`.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614619,"byte_end":614664,"line_start":1818,"line_end":1818,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614665,"byte_end":614668,"line_start":1819,"line_end":1819,"column_start":1,"column_end":4}},{"value":"/ All of these symbols are standardized by POSIX 1003.1-2008, but haven't been","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614669,"byte_end":614749,"line_start":1820,"line_end":1820,"column_start":1,"column_end":81}},{"value":"/ implemented by all platforms.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614750,"byte_end":614783,"line_start":1821,"line_end":1821,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614784,"byte_end":614787,"line_start":1822,"line_end":1822,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614788,"byte_end":614804,"line_start":1823,"line_end":1823,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614805,"byte_end":614808,"line_start":1824,"line_end":1824,"column_start":1,"column_end":4}},{"value":"/ - [sysconf(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/sysconf.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614809,"byte_end":614899,"line_start":1825,"line_end":1825,"column_start":1,"column_end":91}},{"value":"/ - [unistd.h](http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/unistd.h.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614900,"byte_end":614988,"line_start":1826,"line_end":1826,"column_start":1,"column_end":89}},{"value":"/ - [limits.h](http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/limits.h.html)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":614989,"byte_end":615077,"line_start":1827,"line_end":1827,"column_start":1,"column_end":89}},{"value":"repr(i32)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":615129,"byte_end":615141,"line_start":1829,"line_end":1829,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":1910},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":639123,"byte_end":639130,"line_start":2238,"line_end":2238,"column_start":8,"column_end":15},"name":"sysconf","qualname":"::unistd::sysconf","value":"pub fn sysconf(SysconfVar) -> Result<Option<c_long>>","parent":null,"children":[],"decl_id":null,"docs":" Get configurable system variables (see\n [sysconf(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/sysconf.html))","sig":null,"attributes":[{"value":"/ Get configurable system variables (see","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638287,"byte_end":638329,"line_start":2222,"line_end":2222,"column_start":1,"column_end":43}},{"value":"/ [sysconf(3)](http://pubs.opengroup.org/onlinepubs/9699919799/functions/sysconf.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638330,"byte_end":638419,"line_start":2223,"line_end":2223,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638420,"byte_end":638423,"line_start":2224,"line_end":2224,"column_start":1,"column_end":4}},{"value":"/ Returns the value of a configurable system variable.  Most supported","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638424,"byte_end":638496,"line_start":2225,"line_end":2225,"column_start":1,"column_end":73}},{"value":"/ variables also have associated compile-time constants, but POSIX","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638497,"byte_end":638565,"line_start":2226,"line_end":2226,"column_start":1,"column_end":69}},{"value":"/ allows their values to change at runtime.  There are generally two types of","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638566,"byte_end":638645,"line_start":2227,"line_end":2227,"column_start":1,"column_end":80}},{"value":"/ sysconf variables: options and limits.  See sysconf(3) for more details.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638646,"byte_end":638722,"line_start":2228,"line_end":2228,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638723,"byte_end":638726,"line_start":2229,"line_end":2229,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638727,"byte_end":638740,"line_start":2230,"line_end":2230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638741,"byte_end":638744,"line_start":2231,"line_end":2231,"column_start":1,"column_end":4}},{"value":"/ - `Ok(Some(x))`: the variable's limit (for limit variables) or its","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638745,"byte_end":638815,"line_start":2232,"line_end":2232,"column_start":1,"column_end":71}},{"value":"/     implementation level (for option variables).  Implementation levels are","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638816,"byte_end":638895,"line_start":2233,"line_end":2233,"column_start":1,"column_end":80}},{"value":"/     usually a decimal-coded date, such as 200112 for POSIX 2001.12","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638896,"byte_end":638966,"line_start":2234,"line_end":2234,"column_start":1,"column_end":71}},{"value":"/ - `Ok(None)`: the variable has no limit (for limit variables) or is","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":638967,"byte_end":639038,"line_start":2235,"line_end":2235,"column_start":1,"column_end":72}},{"value":"/     unsupported (for option variables)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":639039,"byte_end":639081,"line_start":2236,"line_end":2236,"column_start":1,"column_end":43}},{"value":"/ - `Err(x)`: an error occurred","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":639082,"byte_end":639115,"line_start":2237,"line_end":2237,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":1917},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":639601,"byte_end":639611,"line_start":2260,"line_end":2260,"column_start":12,"column_end":22},"name":"pivot_root","qualname":"::unistd::pivot_root::pivot_root","value":"pub fn pivot_root<P1: ?Sized + NixPath, P2: ?Sized + NixPath>(&P1, &P2)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1929},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640623,"byte_end":640632,"line_start":2292,"line_end":2292,"column_start":12,"column_end":21},"name":"setresuid","qualname":"::unistd::setres::setresuid","value":"pub fn setresuid(Uid, Uid, Uid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the real, effective, and saved uid.\n ([see setresuid(2)](http://man7.org/linux/man-pages/man2/setresuid.2.html))","sig":null,"attributes":[{"value":"/ Sets the real, effective, and saved uid.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640235,"byte_end":640279,"line_start":2282,"line_end":2282,"column_start":5,"column_end":49}},{"value":"/ ([see setresuid(2)](http://man7.org/linux/man-pages/man2/setresuid.2.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640284,"byte_end":640363,"line_start":2283,"line_end":2283,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640368,"byte_end":640371,"line_start":2284,"line_end":2284,"column_start":5,"column_end":8}},{"value":"/ * `ruid`: real user id","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640376,"byte_end":640402,"line_start":2285,"line_end":2285,"column_start":5,"column_end":31}},{"value":"/ * `euid`: effective user id","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640407,"byte_end":640438,"line_start":2286,"line_end":2286,"column_start":5,"column_end":36}},{"value":"/ * `suid`: saved user id","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640443,"byte_end":640470,"line_start":2287,"line_end":2287,"column_start":5,"column_end":32}},{"value":"/ * returns: Ok or libc error code.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640475,"byte_end":640512,"line_start":2288,"line_end":2288,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640517,"byte_end":640520,"line_start":2289,"line_end":2289,"column_start":5,"column_end":8}},{"value":"/ Err is returned if the user doesn't have permission to set this UID.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640525,"byte_end":640597,"line_start":2290,"line_end":2290,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640602,"byte_end":640611,"line_start":2291,"line_end":2291,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1930},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":641207,"byte_end":641216,"line_start":2308,"line_end":2308,"column_start":12,"column_end":21},"name":"setresgid","qualname":"::unistd::setres::setresgid","value":"pub fn setresgid(Gid, Gid, Gid) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the real, effective, and saved gid.\n ([see setresuid(2)](http://man7.org/linux/man-pages/man2/setresuid.2.html))","sig":null,"attributes":[{"value":"/ Sets the real, effective, and saved gid.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640816,"byte_end":640860,"line_start":2298,"line_end":2298,"column_start":5,"column_end":49}},{"value":"/ ([see setresuid(2)](http://man7.org/linux/man-pages/man2/setresuid.2.html))","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640865,"byte_end":640944,"line_start":2299,"line_end":2299,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640949,"byte_end":640952,"line_start":2300,"line_end":2300,"column_start":5,"column_end":8}},{"value":"/ * `rgid`: real group id","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640957,"byte_end":640984,"line_start":2301,"line_end":2301,"column_start":5,"column_end":32}},{"value":"/ * `egid`: effective group id","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":640989,"byte_end":641021,"line_start":2302,"line_end":2302,"column_start":5,"column_end":37}},{"value":"/ * `sgid`: saved group id","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":641026,"byte_end":641054,"line_start":2303,"line_end":2303,"column_start":5,"column_end":33}},{"value":"/ * returns: Ok or libc error code.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":641059,"byte_end":641096,"line_start":2304,"line_end":2304,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":641101,"byte_end":641104,"line_start":2305,"line_end":2305,"column_start":5,"column_end":8}},{"value":"/ Err is returned if the user doesn't have permission to set this GID.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":641109,"byte_end":641181,"line_start":2306,"line_end":2306,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":641186,"byte_end":641195,"line_start":2307,"line_end":2307,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":1947},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2214,"byte_end":2220,"line_start":91,"line_end":91,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Nix Result Type\n","sig":null,"attributes":[{"value":"/ Nix Result Type","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2185,"byte_end":2204,"line_start":90,"line_end":90,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9764},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2619,"byte_end":2622,"line_start":102,"line_end":102,"column_start":5,"column_end":8},"name":"Sys","qualname":"::Error::Sys","value":"Error::Sys(Errno)","parent":{"krate":0,"index":9763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9767},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2635,"byte_end":2646,"line_start":103,"line_end":103,"column_start":5,"column_end":16},"name":"InvalidPath","qualname":"::Error::InvalidPath","value":"Error::InvalidPath","parent":{"krate":0,"index":9763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9769},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2799,"byte_end":2810,"line_start":106,"line_end":106,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::Error::InvalidUtf8","value":"Error::InvalidUtf8","parent":{"krate":0,"index":9763},"children":[],"decl_id":null,"docs":" The operation involved a conversion to Rust's native String type, which failed because the\n string did not contain all valid UTF-8.\n","sig":null,"attributes":[{"value":"/ The operation involved a conversion to Rust's native String type, which failed because the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2652,"byte_end":2746,"line_start":104,"line_end":104,"column_start":5,"column_end":99}},{"value":"/ string did not contain all valid UTF-8.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2751,"byte_end":2794,"line_start":105,"line_end":105,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9771},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3012,"byte_end":3032,"line_start":109,"line_end":109,"column_start":5,"column_end":25},"name":"UnsupportedOperation","qualname":"::Error::UnsupportedOperation","value":"Error::UnsupportedOperation","parent":{"krate":0,"index":9763},"children":[],"decl_id":null,"docs":" The operation is not supported by Nix, in this instance either use the libc bindings or\n consult the module documentation to see if there is a more appropriate interface available.\n","sig":null,"attributes":[{"value":"/ The operation is not supported by Nix, in this instance either use the libc bindings or","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2816,"byte_end":2907,"line_start":107,"line_end":107,"column_start":5,"column_end":96}},{"value":"/ consult the module documentation to see if there is a more appropriate interface available.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2912,"byte_end":3007,"line_start":108,"line_end":108,"column_start":5,"column_end":100}}]},{"kind":"Enum","id":{"krate":0,"index":9763},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2607,"byte_end":2612,"line_start":101,"line_end":101,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    Sys(Errno),\n    InvalidPath,\n\n    /// The operation involved a conversion to Rust's native String type, which failed because the\n    /// string did not contain all valid UTF-8.\n    InvalidUtf8,\n\n    /// The operation is not supported by Nix, in this instance either use the libc bindings or\n    /// consult the module documentation to see if there is a more appropriate interface available.\n    UnsupportedOperation,\n}","parent":null,"children":[{"krate":0,"index":9764},{"krate":0,"index":9767},{"krate":0,"index":9769},{"krate":0,"index":9771}],"decl_id":null,"docs":" Nix Error Type","sig":null,"attributes":[{"value":"/ Nix Error Type","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2253,"byte_end":2271,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2272,"byte_end":2275,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The nix error type provides a common way of dealing with","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2276,"byte_end":2336,"line_start":95,"line_end":95,"column_start":1,"column_end":61}},{"value":"/ various system system/libc calls that might fail.  Each","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2337,"byte_end":2396,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/ error has a corresponding errno (usually the one from the","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2397,"byte_end":2458,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/ underlying OS) to which it can be mapped in addition to","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2459,"byte_end":2518,"line_start":98,"line_end":98,"column_start":1,"column_end":60}},{"value":"/ implementing other common traits.","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":2519,"byte_end":2556,"line_start":99,"line_end":99,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3338,"byte_end":3346,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"as_errno","qualname":"<Error>::as_errno","value":"pub fn as_errno(&Self) -> Option<Errno>","parent":null,"children":[],"decl_id":null,"docs":" Convert this `Error` to an [`Errno`](enum.Errno.html).","sig":null,"attributes":[{"value":"/ Convert this `Error` to an [`Errno`](enum.Errno.html).","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3054,"byte_end":3112,"line_start":113,"line_end":113,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3117,"byte_end":3120,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3125,"byte_end":3138,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3143,"byte_end":3146,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3151,"byte_end":3158,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ # use nix::Error;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3163,"byte_end":3184,"line_start":118,"line_end":118,"column_start":5,"column_end":26}},{"value":"/ # use nix::errno::Errno;","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3189,"byte_end":3217,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let e = Error::from(Errno::EPERM);","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3222,"byte_end":3260,"line_start":120,"line_end":120,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(Some(Errno::EPERM), e.as_errno());","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3265,"byte_end":3314,"line_start":121,"line_end":121,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3319,"byte_end":3326,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3545,"byte_end":3555,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"from_errno","qualname":"<Error>::from_errno","value":"pub fn from_errno(Errno) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create a nix Error from a given errno\n","sig":null,"attributes":[{"value":"/ Create a nix Error from a given errno","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3492,"byte_end":3533,"line_start":131,"line_end":131,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3685,"byte_end":3689,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"last","qualname":"<Error>::last","value":"pub fn last() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Get the current errno and convert it to a nix Error\n","sig":null,"attributes":[{"value":"/ Get the current errno and convert it to a nix Error","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3618,"byte_end":3673,"line_start":136,"line_end":136,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3810,"byte_end":3826,"line_start":142,"line_end":142,"column_start":12,"column_end":28},"name":"invalid_argument","qualname":"<Error>::invalid_argument","value":"pub fn invalid_argument() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create a new invalid argument error (`EINVAL`)\n","sig":null,"attributes":[{"value":"/ Create a new invalid argument error (`EINVAL`)","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3748,"byte_end":3798,"line_start":141,"line_end":141,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":1962},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":4868,"byte_end":4875,"line_start":178,"line_end":178,"column_start":11,"column_end":18},"name":"NixPath","qualname":"::NixPath","value":"NixPath","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1964}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":4885,"byte_end":4888,"line_start":179,"line_end":179,"column_start":8,"column_end":11},"name":"len","qualname":"::NixPath::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":1962},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":4914,"byte_end":4927,"line_start":181,"line_end":181,"column_start":8,"column_end":21},"name":"with_nix_path","qualname":"::NixPath::with_nix_path","value":"pub fn with_nix_path<T, F>(&Self, F) -> Result<T> where F: FnOnce(&CStr) -> T","parent":{"krate":0,"index":1962},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15135,"byte_end":15138,"line_start":33,"line_end":33,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":16838,"byte_end":16841,"line_start":77,"line_end":77,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":16863,"byte_end":16866,"line_start":79,"line_end":79,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":16972,"byte_end":16975,"line_start":85,"line_end":85,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":17156,"byte_end":17159,"line_start":93,"line_end":93,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":17313,"byte_end":17317,"line_start":102,"line_end":102,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18321,"byte_end":18325,"line_start":126,"line_end":126,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18771,"byte_end":18776,"line_start":149,"line_end":149,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":20775,"byte_end":20780,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":22822,"byte_end":22827,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23949,"byte_end":23961,"line_start":110,"line_end":110,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":24033,"byte_end":24038,"line_start":114,"line_end":114,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":24128,"byte_end":24133,"line_start":120,"line_end":120,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":24278,"byte_end":24283,"line_start":126,"line_end":126,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":114168,"byte_end":114184,"line_start":46,"line_end":46,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":115614,"byte_end":115638,"line_start":83,"line_end":83,"column_start":15,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":115742,"byte_end":115766,"line_start":89,"line_end":89,"column_start":19,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124507,"byte_end":124513,"line_start":38,"line_end":38,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124862,"byte_end":124868,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141219,"byte_end":141225,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141797,"byte_end":141803,"line_start":46,"line_end":46,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147909,"byte_end":147918,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147999,"byte_end":148008,"line_start":44,"line_end":44,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":148133,"byte_end":148142,"line_start":52,"line_end":52,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156823,"byte_end":156829,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164670,"byte_end":164676,"line_start":110,"line_end":110,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166071,"byte_end":166076,"line_start":149,"line_end":149,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":198603,"byte_end":198608,"line_start":1021,"line_end":1021,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199281,"byte_end":199286,"line_start":1037,"line_end":1037,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":200511,"byte_end":200516,"line_start":1071,"line_end":1071,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":208336,"byte_end":208341,"line_start":1269,"line_end":1269,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":208608,"byte_end":208613,"line_start":1278,"line_end":1278,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209862,"byte_end":209872,"line_start":52,"line_end":52,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275802,"byte_end":275810,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277765,"byte_end":277770,"line_start":103,"line_end":103,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":278115,"byte_end":278120,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285272,"byte_end":285277,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305933,"byte_end":305939,"line_start":67,"line_end":67,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":307994,"byte_end":308000,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":309965,"byte_end":309971,"line_start":159,"line_end":159,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":311962,"byte_end":311976,"line_start":274,"line_end":274,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312252,"byte_end":312258,"line_start":288,"line_end":288,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313363,"byte_end":313369,"line_start":338,"line_end":338,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316439,"byte_end":316445,"line_start":422,"line_end":422,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317294,"byte_end":317303,"line_start":450,"line_end":450,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328020,"byte_end":328028,"line_start":710,"line_end":710,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":331693,"byte_end":331701,"line_start":775,"line_end":775,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":332703,"byte_end":332711,"line_start":797,"line_end":797,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341467,"byte_end":341475,"line_start":85,"line_end":85,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":342356,"byte_end":342364,"line_start":112,"line_end":112,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":342457,"byte_end":342465,"line_start":118,"line_end":118,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":342545,"byte_end":342553,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":394963,"byte_end":394976,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":396406,"byte_end":396414,"line_start":252,"line_end":252,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":399311,"byte_end":399319,"line_start":332,"line_end":332,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":399930,"byte_end":399938,"line_start":350,"line_end":350,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":399964,"byte_end":399972,"line_start":353,"line_end":353,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":400473,"byte_end":400481,"line_start":372,"line_end":372,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":400563,"byte_end":400571,"line_start":378,"line_end":378,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":400846,"byte_end":400854,"line_start":387,"line_end":387,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401080,"byte_end":401086,"line_start":404,"line_end":404,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402100,"byte_end":402106,"line_start":435,"line_end":435,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402318,"byte_end":402324,"line_start":444,"line_end":444,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402530,"byte_end":402538,"line_start":459,"line_end":459,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403411,"byte_end":403419,"line_start":489,"line_end":489,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403528,"byte_end":403536,"line_start":495,"line_end":495,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403562,"byte_end":403570,"line_start":498,"line_end":498,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403703,"byte_end":403711,"line_start":505,"line_end":505,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403793,"byte_end":403801,"line_start":511,"line_end":511,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":404009,"byte_end":404017,"line_start":518,"line_end":518,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":404693,"byte_end":404701,"line_start":549,"line_end":549,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405503,"byte_end":405511,"line_start":572,"line_end":572,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405635,"byte_end":405643,"line_start":578,"line_end":578,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":406319,"byte_end":406327,"line_start":601,"line_end":601,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409820,"byte_end":409828,"line_start":690,"line_end":690,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409941,"byte_end":409949,"line_start":696,"line_end":696,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409975,"byte_end":409983,"line_start":699,"line_end":699,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410114,"byte_end":410122,"line_start":705,"line_end":705,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410204,"byte_end":410212,"line_start":711,"line_end":711,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410599,"byte_end":410607,"line_start":724,"line_end":724,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":411390,"byte_end":411398,"line_start":757,"line_end":757,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":417485,"byte_end":417493,"line_start":874,"line_end":874,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":418461,"byte_end":418469,"line_start":903,"line_end":903,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":418495,"byte_end":418503,"line_start":906,"line_end":906,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":419364,"byte_end":419372,"line_start":928,"line_end":928,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":419454,"byte_end":419462,"line_start":934,"line_end":934,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":420682,"byte_end":420693,"line_start":967,"line_end":967,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":420951,"byte_end":420962,"line_start":975,"line_end":975,"column_start":17,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":420985,"byte_end":420996,"line_start":977,"line_end":977,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":421175,"byte_end":421186,"line_start":985,"line_end":985,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":421674,"byte_end":421685,"line_start":1004,"line_end":1004,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":421863,"byte_end":421874,"line_start":1010,"line_end":1010,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425137,"byte_end":425145,"line_start":1125,"line_end":1125,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":426334,"byte_end":426342,"line_start":1170,"line_end":1170,"column_start":17,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":426370,"byte_end":426378,"line_start":1172,"line_end":1172,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":426770,"byte_end":426778,"line_start":1182,"line_end":1182,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":427042,"byte_end":427050,"line_start":1190,"line_end":1190,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":427410,"byte_end":427418,"line_start":1203,"line_end":1203,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":448429,"byte_end":448438,"line_start":329,"line_end":329,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":449050,"byte_end":449059,"line_start":356,"line_end":356,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":449447,"byte_end":449454,"line_start":376,"line_end":376,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":450057,"byte_end":450064,"line_start":403,"line_end":403,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":450458,"byte_end":450463,"line_start":423,"line_end":423,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":451045,"byte_end":451050,"line_start":450,"line_end":450,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":451433,"byte_end":451441,"line_start":470,"line_end":470,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":452053,"byte_end":452061,"line_start":497,"line_end":497,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":452495,"byte_end":452506,"line_start":517,"line_end":517,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":453069,"byte_end":453080,"line_start":543,"line_end":543,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":350855,"byte_end":350870,"line_start":184,"line_end":184,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7458},{"krate":0,"index":7459},{"krate":0,"index":7460}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351313,"byte_end":351328,"line_start":201,"line_end":201,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7462}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351524,"byte_end":351539,"line_start":206,"line_end":206,"column_start":21,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351579,"byte_end":351594,"line_start":208,"line_end":208,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7465}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351744,"byte_end":351759,"line_start":214,"line_end":214,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7467}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351881,"byte_end":351896,"line_start":220,"line_end":220,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7469}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352400,"byte_end":352419,"line_start":239,"line_end":239,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352827,"byte_end":352846,"line_start":251,"line_end":251,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353053,"byte_end":353072,"line_start":257,"line_end":257,"column_start":13,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353097,"byte_end":353116,"line_start":259,"line_end":259,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353686,"byte_end":353707,"line_start":279,"line_end":279,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353961,"byte_end":353982,"line_start":289,"line_end":289,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":354189,"byte_end":354210,"line_start":295,"line_end":295,"column_start":13,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":354235,"byte_end":354256,"line_start":297,"line_end":297,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356432,"byte_end":356441,"line_start":369,"line_end":369,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356898,"byte_end":356905,"line_start":387,"line_end":387,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":357283,"byte_end":357295,"line_start":403,"line_end":403,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":363861,"byte_end":363875,"line_start":559,"line_end":559,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466690,"byte_end":466697,"line_start":64,"line_end":64,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469396,"byte_end":469403,"line_start":13,"line_end":13,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480487,"byte_end":480494,"line_start":195,"line_end":195,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":483875,"byte_end":483882,"line_start":275,"line_end":275,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":484382,"byte_end":484389,"line_start":288,"line_end":288,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":487443,"byte_end":487451,"line_start":380,"line_end":380,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":517047,"byte_end":517055,"line_start":63,"line_end":63,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":517139,"byte_end":517147,"line_start":69,"line_end":69,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":517390,"byte_end":517398,"line_start":78,"line_end":78,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":517700,"byte_end":517708,"line_start":86,"line_end":86,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":517726,"byte_end":517734,"line_start":88,"line_end":88,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":518145,"byte_end":518153,"line_start":100,"line_end":100,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":518287,"byte_end":518295,"line_start":106,"line_end":106,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":520090,"byte_end":520098,"line_start":164,"line_end":164,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":520462,"byte_end":520470,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":520615,"byte_end":520623,"line_start":190,"line_end":190,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":520819,"byte_end":520827,"line_start":199,"line_end":199,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":521028,"byte_end":521036,"line_start":208,"line_end":208,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1565}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":521300,"byte_end":521308,"line_start":219,"line_end":219,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":521504,"byte_end":521512,"line_start":228,"line_end":228,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":522697,"byte_end":522704,"line_start":274,"line_end":274,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":522787,"byte_end":522794,"line_start":280,"line_end":280,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":523036,"byte_end":523043,"line_start":289,"line_end":289,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":523340,"byte_end":523347,"line_start":297,"line_end":297,"column_start":13,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":523365,"byte_end":523372,"line_start":299,"line_end":299,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":523778,"byte_end":523785,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":523918,"byte_end":523925,"line_start":317,"line_end":317,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":525917,"byte_end":525924,"line_start":378,"line_end":378,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":526305,"byte_end":526312,"line_start":396,"line_end":396,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":526456,"byte_end":526463,"line_start":404,"line_end":404,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":526658,"byte_end":526665,"line_start":413,"line_end":413,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":526865,"byte_end":526872,"line_start":422,"line_end":422,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":527134,"byte_end":527141,"line_start":433,"line_end":433,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":527336,"byte_end":527343,"line_start":442,"line_end":442,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":538020,"byte_end":538025,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":538275,"byte_end":538280,"line_start":179,"line_end":179,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":538514,"byte_end":538519,"line_start":188,"line_end":188,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":538971,"byte_end":538978,"line_start":11,"line_end":11,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544574,"byte_end":544584,"line_start":102,"line_end":102,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546265,"byte_end":546275,"line_start":162,"line_end":162,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":549256,"byte_end":549264,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551043,"byte_end":551046,"line_start":31,"line_end":31,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551746,"byte_end":551751,"line_start":58,"line_end":58,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551831,"byte_end":551834,"line_start":64,"line_end":64,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552227,"byte_end":552230,"line_start":80,"line_end":80,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552774,"byte_end":552779,"line_start":102,"line_end":102,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552859,"byte_end":552862,"line_start":108,"line_end":108,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553201,"byte_end":553204,"line_start":121,"line_end":121,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553634,"byte_end":553639,"line_start":143,"line_end":143,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553719,"byte_end":553722,"line_start":149,"line_end":149,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554216,"byte_end":554226,"line_start":167,"line_end":167,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3042,"byte_end":3047,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3905,"byte_end":3910,"line_start":148,"line_end":148,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":4022,"byte_end":4027,"line_start":152,"line_end":152,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":4130,"byte_end":4135,"line_start":156,"line_end":156,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":4464,"byte_end":4469,"line_start":167,"line_end":167,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":5265,"byte_end":5270,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":5505,"byte_end":5509,"line_start":207,"line_end":207,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1978},{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":6629,"byte_end":6633,"line_start":250,"line_end":250,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1990},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":6862,"byte_end":6869,"line_start":260,"line_end":260,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":7163,"byte_end":7169,"line_start":271,"line_end":271,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":854,"byte_end":857,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":11}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":867,"byte_end":872,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":65}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":904,"byte_end":912,"line_start":35,"line_end":35,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":114}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":922,"byte_end":927,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1185,"byte_end":1192,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":223}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1268,"byte_end":1272,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":243}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1348,"byte_end":1353,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":253}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1529,"byte_end":1535,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":277}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1567,"byte_end":1570,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":306}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/net/mod.rs","byte_start":129733,"byte_end":129736,"line_start":4,"line_end":4,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":307}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1602,"byte_end":1606,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":317}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1638,"byte_end":1641,"line_start":63,"line_end":63,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":332}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1717,"byte_end":1722,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":363}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1732,"byte_end":1735,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":388}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159319,"byte_end":159322,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":389}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159389,"byte_end":159394,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":490}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159644,"byte_end":159651,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":512}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159934,"byte_end":159939,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":519}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159978,"byte_end":159983,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":559}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":159994,"byte_end":159998,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":567}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160009,"byte_end":160016,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":596}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160257,"byte_end":160263,"line_start":48,"line_end":48,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":602}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160302,"byte_end":160307,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":645}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160351,"byte_end":160357,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":695}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160368,"byte_end":160374,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":705}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160544,"byte_end":160552,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":756}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160563,"byte_end":160569,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":767}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160636,"byte_end":160644,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":852}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160655,"byte_end":160661,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":883}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":343915,"byte_end":343922,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1070}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160672,"byte_end":160676,"line_start":72,"line_end":72,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1313}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160764,"byte_end":160770,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1366}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160781,"byte_end":160788,"line_start":77,"line_end":77,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1378}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160855,"byte_end":160862,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1407}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160873,"byte_end":160880,"line_start":82,"line_end":82,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1428}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160891,"byte_end":160895,"line_start":84,"line_end":84,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1499}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160906,"byte_end":160909,"line_start":86,"line_end":86,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1619}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160920,"byte_end":160927,"line_start":88,"line_end":88,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1661}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/mod.rs","byte_start":160938,"byte_end":160942,"line_start":90,"line_end":90,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1677}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1932,"byte_end":1940,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1704}},{"kind":"Mod","span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":1950,"byte_end":1956,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1716}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":15135,"byte_end":15138,"line_start":33,"line_end":33,"column_start":6,"column_end":9},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":16838,"byte_end":16841,"line_start":77,"line_end":77,"column_start":22,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":33},"to":{"krate":2,"index":2071}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":16863,"byte_end":16866,"line_start":79,"line_end":79,"column_start":18,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":16972,"byte_end":16975,"line_start":85,"line_end":85,"column_start":21,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":33},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":17156,"byte_end":17159,"line_start":93,"line_end":93,"column_start":15,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":33},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":17313,"byte_end":17317,"line_start":102,"line_end":102,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2006},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18321,"byte_end":18325,"line_start":126,"line_end":126,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2006},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":18771,"byte_end":18776,"line_start":149,"line_end":149,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/dir.rs","byte_start":20775,"byte_end":20780,"line_start":202,"line_end":202,"column_start":21,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":22822,"byte_end":22827,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23586,"byte_end":23591,"line_start":90,"line_end":90,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":23949,"byte_end":23961,"line_start":110,"line_end":110,"column_start":30,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":21,"index":57},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":24033,"byte_end":24038,"line_start":114,"line_end":114,"column_start":23,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2046},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":24128,"byte_end":24133,"line_start":120,"line_end":120,"column_start":23,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2046},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/errno.rs","byte_start":24278,"byte_end":24283,"line_start":126,"line_end":126,"column_start":26,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":2717},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":114168,"byte_end":114184,"line_start":46,"line_end":46,"column_start":6,"column_end":22},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":115614,"byte_end":115638,"line_start":83,"line_end":83,"column_start":15,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3202},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ifaddrs.rs","byte_start":115742,"byte_end":115766,"line_start":89,"line_end":89,"column_start":19,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3202},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124507,"byte_end":124513,"line_start":38,"line_end":38,"column_start":28,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3918},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/mqueue.rs","byte_start":124862,"byte_end":124868,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141219,"byte_end":141225,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/poll.rs","byte_start":141797,"byte_end":141803,"line_start":46,"line_end":46,"column_start":21,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4200},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147909,"byte_end":147918,"line_start":38,"line_end":38,"column_start":18,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4342},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":147999,"byte_end":148008,"line_start":44,"line_end":44,"column_start":20,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4342},"to":{"krate":1,"index":8845}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/pty.rs","byte_start":148133,"byte_end":148142,"line_start":52,"line_end":52,"column_start":15,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4342},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sched.rs","byte_start":156823,"byte_end":156829,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":164670,"byte_end":164676,"line_start":110,"line_end":110,"column_start":20,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":413},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":166071,"byte_end":166076,"line_start":149,"line_end":149,"column_start":10,"column_end":15},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":198603,"byte_end":198608,"line_start":1021,"line_end":1021,"column_start":20,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":199281,"byte_end":199286,"line_start":1037,"line_end":1037,"column_start":19,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":200511,"byte_end":200516,"line_start":1071,"line_end":1071,"column_start":10,"column_end":15},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":208336,"byte_end":208341,"line_start":1269,"line_end":1269,"column_start":20,"column_end":25},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":472},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/aio.rs","byte_start":208608,"byte_end":208613,"line_start":1278,"line_end":1278,"column_start":35,"column_end":40},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":472},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/epoll.rs","byte_start":209862,"byte_end":209872,"line_start":52,"line_end":52,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":275802,"byte_end":275810,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":277765,"byte_end":277770,"line_start":103,"line_end":103,"column_start":18,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6141},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/quota.rs","byte_start":278115,"byte_end":278120,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/select.rs","byte_start":285272,"byte_end":285277,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":305933,"byte_end":305939,"line_start":67,"line_end":67,"column_start":18,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6187},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":307994,"byte_end":308000,"line_start":114,"line_end":114,"column_start":21,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6187},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":309965,"byte_end":309971,"line_start":159,"line_end":159,"column_start":23,"column_end":29},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6187},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":311962,"byte_end":311976,"line_start":274,"line_end":274,"column_start":19,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6299},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":312252,"byte_end":312258,"line_start":288,"line_end":288,"column_start":6,"column_end":12},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":313363,"byte_end":313369,"line_start":338,"line_end":338,"column_start":6,"column_end":12},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":316439,"byte_end":316445,"line_start":422,"line_end":422,"column_start":32,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6448},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":317294,"byte_end":317303,"line_start":450,"line_end":450,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":328020,"byte_end":328028,"line_start":710,"line_end":710,"column_start":10,"column_end":18},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":331693,"byte_end":331701,"line_start":775,"line_end":775,"column_start":20,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6497},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signal.rs","byte_start":332703,"byte_end":332711,"line_start":797,"line_end":797,"column_start":43,"column_end":51},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6497},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":341467,"byte_end":341475,"line_start":85,"line_end":85,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":342356,"byte_end":342364,"line_start":112,"line_end":112,"column_start":15,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6593},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":342457,"byte_end":342465,"line_start":118,"line_end":118,"column_start":18,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6593},"to":{"krate":1,"index":8841}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/signalfd.rs","byte_start":342545,"byte_end":342553,"line_start":124,"line_end":124,"column_start":19,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6593},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":394963,"byte_end":394976,"line_start":217,"line_end":217,"column_start":6,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":396406,"byte_end":396414,"line_start":252,"line_end":252,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":399311,"byte_end":399319,"line_start":332,"line_end":332,"column_start":20,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6748},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":399930,"byte_end":399938,"line_start":350,"line_end":350,"column_start":13,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":6748},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":399964,"byte_end":399972,"line_start":353,"line_end":353,"column_start":21,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":6748},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":400473,"byte_end":400481,"line_start":372,"line_end":372,"column_start":16,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":6748},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":400563,"byte_end":400571,"line_start":378,"line_end":378,"column_start":23,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":6748},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":400846,"byte_end":400854,"line_start":387,"line_end":387,"column_start":21,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":6748},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":401080,"byte_end":401086,"line_start":404,"line_end":404,"column_start":6,"column_end":12},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":6756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402100,"byte_end":402106,"line_start":435,"line_end":435,"column_start":23,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":6756},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402318,"byte_end":402324,"line_start":444,"line_end":444,"column_start":21,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6756},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":402530,"byte_end":402538,"line_start":459,"line_end":459,"column_start":6,"column_end":14},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403411,"byte_end":403419,"line_start":489,"line_end":489,"column_start":20,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6766},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403528,"byte_end":403536,"line_start":495,"line_end":495,"column_start":13,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6766},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403562,"byte_end":403570,"line_start":498,"line_end":498,"column_start":21,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6766},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403703,"byte_end":403711,"line_start":505,"line_end":505,"column_start":16,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":6766},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":403793,"byte_end":403801,"line_start":511,"line_end":511,"column_start":23,"column_end":31},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":6766},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":404009,"byte_end":404017,"line_start":518,"line_end":518,"column_start":21,"column_end":29},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":6766},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":404693,"byte_end":404701,"line_start":549,"line_end":549,"column_start":6,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405503,"byte_end":405511,"line_start":572,"line_end":572,"column_start":23,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":6770},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":405635,"byte_end":405643,"line_start":578,"line_end":578,"column_start":21,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6770},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":406319,"byte_end":406327,"line_start":601,"line_end":601,"column_start":6,"column_end":14},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":6776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409820,"byte_end":409828,"line_start":690,"line_end":690,"column_start":20,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":6776},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409941,"byte_end":409949,"line_start":696,"line_end":696,"column_start":13,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":6776},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":409975,"byte_end":409983,"line_start":699,"line_end":699,"column_start":21,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":6776},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410114,"byte_end":410122,"line_start":705,"line_end":705,"column_start":16,"column_end":24},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6776},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410204,"byte_end":410212,"line_start":711,"line_end":711,"column_start":23,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":6776},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":410599,"byte_end":410607,"line_start":724,"line_end":724,"column_start":21,"column_end":29},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":6776},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":411390,"byte_end":411398,"line_start":757,"line_end":757,"column_start":6,"column_end":14},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":6781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":417485,"byte_end":417493,"line_start":874,"line_end":874,"column_start":20,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":6781},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":418461,"byte_end":418469,"line_start":903,"line_end":903,"column_start":13,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":6781},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":418495,"byte_end":418503,"line_start":906,"line_end":906,"column_start":21,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":6781},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":419364,"byte_end":419372,"line_start":928,"line_end":928,"column_start":16,"column_end":24},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6781},"to":{"krate":2,"index":1762}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":419454,"byte_end":419462,"line_start":934,"line_end":934,"column_start":23,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":6781},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":420682,"byte_end":420693,"line_start":967,"line_end":967,"column_start":24,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":6797},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":420951,"byte_end":420962,"line_start":975,"line_end":975,"column_start":17,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":6797},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":420985,"byte_end":420996,"line_start":977,"line_end":977,"column_start":19,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":6797},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":421175,"byte_end":421186,"line_start":985,"line_end":985,"column_start":10,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":6797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":421674,"byte_end":421685,"line_start":1004,"line_end":1004,"column_start":27,"column_end":38},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":6797},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":421863,"byte_end":421874,"line_start":1010,"line_end":1010,"column_start":25,"column_end":36},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":6797},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":425137,"byte_end":425145,"line_start":1125,"line_end":1125,"column_start":10,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":6803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":426334,"byte_end":426342,"line_start":1170,"line_end":1170,"column_start":17,"column_end":25},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":6803},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":426370,"byte_end":426378,"line_start":1172,"line_end":1172,"column_start":24,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":6803},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":426770,"byte_end":426778,"line_start":1182,"line_end":1182,"column_start":25,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":6803},"to":{"krate":2,"index":7019}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":427042,"byte_end":427050,"line_start":1190,"line_end":1190,"column_start":27,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6803},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/addr.rs","byte_start":427410,"byte_end":427418,"line_start":1203,"line_end":1203,"column_start":25,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6803},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":448429,"byte_end":448438,"line_start":329,"line_end":329,"column_start":27,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1104},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":449050,"byte_end":449059,"line_start":356,"line_end":356,"column_start":35,"column_end":44},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1114},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":449447,"byte_end":449454,"line_start":376,"line_end":376,"column_start":27,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1124},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":450057,"byte_end":450064,"line_start":403,"line_end":403,"column_start":35,"column_end":42},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1132},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":450458,"byte_end":450463,"line_start":423,"line_end":423,"column_start":25,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1139},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":451045,"byte_end":451050,"line_start":450,"line_end":450,"column_start":33,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1147},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":451433,"byte_end":451441,"line_start":470,"line_end":470,"column_start":28,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1154},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":452053,"byte_end":452061,"line_start":497,"line_end":497,"column_start":36,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1162},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":452495,"byte_end":452506,"line_start":517,"line_end":517,"column_start":47,"column_end":58},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1169},"to":{"krate":0,"index":1092}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/sockopt.rs","byte_start":453069,"byte_end":453080,"line_start":543,"line_end":543,"column_start":39,"column_end":50},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1179},"to":{"krate":0,"index":1098}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":350855,"byte_end":350870,"line_start":184,"line_end":184,"column_start":14,"column_end":29},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":7470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351313,"byte_end":351328,"line_start":201,"line_end":201,"column_start":28,"column_end":43},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":7470},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351524,"byte_end":351539,"line_start":206,"line_end":206,"column_start":21,"column_end":36},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":7470},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351579,"byte_end":351594,"line_start":208,"line_end":208,"column_start":36,"column_end":51},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":7470},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351744,"byte_end":351759,"line_start":214,"line_end":214,"column_start":36,"column_end":51},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":7470},"to":{"krate":2,"index":1986}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":351881,"byte_end":351896,"line_start":220,"line_end":220,"column_start":29,"column_end":44},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7470},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352400,"byte_end":352419,"line_start":239,"line_end":239,"column_start":6,"column_end":25},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":352827,"byte_end":352846,"line_start":251,"line_end":251,"column_start":20,"column_end":39},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7476},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353053,"byte_end":353072,"line_start":257,"line_end":257,"column_start":13,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7476},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353097,"byte_end":353116,"line_start":259,"line_end":259,"column_start":21,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7476},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353686,"byte_end":353707,"line_start":279,"line_end":279,"column_start":6,"column_end":27},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":353961,"byte_end":353982,"line_start":289,"line_end":289,"column_start":20,"column_end":41},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":7482},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":354189,"byte_end":354210,"line_start":295,"line_end":295,"column_start":13,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":7482},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":354235,"byte_end":354256,"line_start":297,"line_end":297,"column_start":21,"column_end":42},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7482},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356432,"byte_end":356441,"line_start":369,"line_end":369,"column_start":9,"column_end":18},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":356898,"byte_end":356905,"line_start":387,"line_end":387,"column_start":10,"column_end":17},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":7489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":357283,"byte_end":357295,"line_start":403,"line_end":403,"column_start":23,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":7498},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":363861,"byte_end":363875,"line_start":559,"line_end":559,"column_start":10,"column_end":24},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":381937,"byte_end":381941,"line_start":1064,"line_end":1064,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1297}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/socket/mod.rs","byte_start":382155,"byte_end":382159,"line_start":1073,"line_end":1073,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":1300}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/statvfs.rs","byte_start":466690,"byte_end":466697,"line_start":64,"line_end":64,"column_start":6,"column_end":13},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":7998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/sysinfo.rs","byte_start":469396,"byte_end":469403,"line_start":13,"line_end":13,"column_start":6,"column_end":13},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":8004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":480487,"byte_end":480494,"line_start":195,"line_end":195,"column_start":6,"column_end":13},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":8010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":483875,"byte_end":483882,"line_start":275,"line_end":275,"column_start":30,"column_end":37},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":8010},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":484382,"byte_end":484389,"line_start":288,"line_end":288,"column_start":30,"column_end":37},"kind":{"Impl":{"id":133}},"from":{"krate":21,"index":4769},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/termios.rs","byte_start":487443,"byte_end":487451,"line_start":380,"line_end":380,"column_start":30,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":8020},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":515621,"byte_end":515626,"line_start":5,"line_end":5,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2076},"to":{"krate":0,"index":1511}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":517047,"byte_end":517055,"line_start":63,"line_end":63,"column_start":26,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":517139,"byte_end":517147,"line_start":69,"line_end":69,"column_start":21,"column_end":29},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":517390,"byte_end":517398,"line_start":78,"line_end":78,"column_start":20,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":517700,"byte_end":517708,"line_start":86,"line_end":86,"column_start":13,"column_end":21},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":517726,"byte_end":517734,"line_start":88,"line_end":88,"column_start":14,"column_end":22},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":518145,"byte_end":518153,"line_start":100,"line_end":100,"column_start":21,"column_end":29},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":1833}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":518287,"byte_end":518295,"line_start":106,"line_end":106,"column_start":22,"column_end":30},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":9022},"to":{"krate":0,"index":1511}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":520090,"byte_end":520098,"line_start":164,"line_end":164,"column_start":6,"column_end":14},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":9022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":520462,"byte_end":520470,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":520615,"byte_end":520623,"line_start":190,"line_end":190,"column_start":19,"column_end":27},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":520819,"byte_end":520827,"line_start":199,"line_end":199,"column_start":19,"column_end":27},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":521028,"byte_end":521036,"line_start":208,"line_end":208,"column_start":24,"column_end":32},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":521300,"byte_end":521308,"line_start":219,"line_end":219,"column_start":24,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":521504,"byte_end":521512,"line_start":228,"line_end":228,"column_start":23,"column_end":31},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":9022},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":522697,"byte_end":522704,"line_start":274,"line_end":274,"column_start":25,"column_end":32},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":522787,"byte_end":522794,"line_start":280,"line_end":280,"column_start":21,"column_end":28},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":523036,"byte_end":523043,"line_start":289,"line_end":289,"column_start":20,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":1790}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":523340,"byte_end":523347,"line_start":297,"line_end":297,"column_start":13,"column_end":20},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":1795}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":523365,"byte_end":523372,"line_start":299,"line_end":299,"column_start":14,"column_end":21},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":523778,"byte_end":523785,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":1833}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":523918,"byte_end":523925,"line_start":317,"line_end":317,"column_start":22,"column_end":29},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":9028},"to":{"krate":0,"index":1511}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":525917,"byte_end":525924,"line_start":378,"line_end":378,"column_start":6,"column_end":13},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":9028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":526305,"byte_end":526312,"line_start":396,"line_end":396,"column_start":19,"column_end":26},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":526456,"byte_end":526463,"line_start":404,"line_end":404,"column_start":19,"column_end":26},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":2136}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":526658,"byte_end":526665,"line_start":413,"line_end":413,"column_start":19,"column_end":26},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":526865,"byte_end":526872,"line_start":422,"line_end":422,"column_start":24,"column_end":31},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":527134,"byte_end":527141,"line_start":433,"line_end":433,"column_start":24,"column_end":31},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/time.rs","byte_start":527336,"byte_end":527343,"line_start":442,"line_end":442,"column_start":23,"column_end":30},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":9028},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":538020,"byte_end":538025,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":538275,"byte_end":538280,"line_start":179,"line_end":179,"column_start":10,"column_end":15},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/uio.rs","byte_start":538514,"byte_end":538519,"line_start":188,"line_end":188,"column_start":10,"column_end":15},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/utsname.rs","byte_start":538971,"byte_end":538978,"line_start":11,"line_end":11,"column_start":6,"column_end":13},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":9040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":544574,"byte_end":544584,"line_start":102,"line_end":102,"column_start":6,"column_end":16},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":9172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/sys/wait.rs","byte_start":546265,"byte_end":546275,"line_start":162,"line_end":162,"column_start":6,"column_end":16},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":9172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/ucontext.rs","byte_start":549256,"byte_end":549264,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":9212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551043,"byte_end":551046,"line_start":31,"line_end":31,"column_start":6,"column_end":9},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":9217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551746,"byte_end":551751,"line_start":58,"line_end":58,"column_start":20,"column_end":25},"kind":{"Impl":{"id":171}},"from":{"krate":21,"index":53},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":551831,"byte_end":551834,"line_start":64,"line_end":64,"column_start":23,"column_end":26},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":9217},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552227,"byte_end":552230,"line_start":80,"line_end":80,"column_start":6,"column_end":9},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":9235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552774,"byte_end":552779,"line_start":102,"line_end":102,"column_start":20,"column_end":25},"kind":{"Impl":{"id":174}},"from":{"krate":21,"index":54},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":552859,"byte_end":552862,"line_start":108,"line_end":108,"column_start":23,"column_end":26},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":9235},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553201,"byte_end":553204,"line_start":121,"line_end":121,"column_start":6,"column_end":9},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":9253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553634,"byte_end":553639,"line_start":143,"line_end":143,"column_start":20,"column_end":25},"kind":{"Impl":{"id":177}},"from":{"krate":21,"index":52},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":553719,"byte_end":553722,"line_start":149,"line_end":149,"column_start":23,"column_end":26},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":9253},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/unistd.rs","byte_start":554216,"byte_end":554226,"line_start":167,"line_end":167,"column_start":6,"column_end":16},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":9271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3042,"byte_end":3047,"line_start":112,"line_end":112,"column_start":6,"column_end":11},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":9763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":3905,"byte_end":3910,"line_start":148,"line_end":148,"column_start":22,"column_end":27},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":9763},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":4022,"byte_end":4027,"line_start":152,"line_end":152,"column_start":43,"column_end":48},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":9763},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":4130,"byte_end":4135,"line_start":156,"line_end":156,"column_start":23,"column_end":28},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":9763},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":4464,"byte_end":4469,"line_start":167,"line_end":167,"column_start":23,"column_end":28},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":9763},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":5265,"byte_end":5270,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"kind":{"Impl":{"id":186}},"from":{"krate":1,"index":2043},"to":{"krate":0,"index":1962}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":5505,"byte_end":5509,"line_start":207,"line_end":207,"column_start":18,"column_end":22},"kind":{"Impl":{"id":187}},"from":{"krate":1,"index":6866},"to":{"krate":0,"index":1962}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":6629,"byte_end":6633,"line_start":250,"line_end":250,"column_start":18,"column_end":22},"kind":{"Impl":{"id":188}},"from":{"krate":1,"index":4261},"to":{"krate":0,"index":1962}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":6862,"byte_end":6869,"line_start":260,"line_end":260,"column_start":18,"column_end":25},"kind":{"Impl":{"id":189}},"from":{"krate":1,"index":7667},"to":{"krate":0,"index":1962}},{"span":{"file_name":"/home/danny/.cargo/registry/src/github.com-1ecc6299db9ec823/nix-0.13.1/src/lib.rs","byte_start":7163,"byte_end":7169,"line_start":271,"line_end":271,"column_start":45,"column_end":51},"kind":{"Impl":{"id":190}},"from":{"krate":2,"index":34376},"to":{"krate":0,"index":1962}}]}